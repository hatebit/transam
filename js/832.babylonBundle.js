"use strict";(self.webpackChunktrans_america=self.webpackChunktrans_america||[]).push([[832],{63832:(t,e,i)=>{i.d(e,{i:()=>d});var s=i(90576),r=i(96631),o=i(94975),a=i(90066),h=i(6740),n=i(54983),c=i(69346),_=i(70461),m=i(88252),g=i(60299),l=i(94554),u=i(75184),p=i(16265);class d extends c.b{get position(){return this._position}set position(t){this._position=t}set upVector(t){this._upVector=t}get upVector(){return this._upVector}get screenArea(){let t=0,e=0;if(this.mode===d.PERSPECTIVE_CAMERA)this.fovMode===d.FOVMODE_VERTICAL_FIXED?(e=2*this.minZ*Math.tan(this.fov/2),t=this.getEngine().getAspectRatio(this)*e):(t=2*this.minZ*Math.tan(this.fov/2),e=t/this.getEngine().getAspectRatio(this));else{const i=this.getEngine().getRenderWidth()/2,s=this.getEngine().getRenderHeight()/2;t=(this.orthoRight??i)-(this.orthoLeft??-i),e=(this.orthoTop??s)-(this.orthoBottom??-s)}return t*e}set orthoLeft(t){this._orthoLeft=t;for(const e of this._rigCameras)e.orthoLeft=t}get orthoLeft(){return this._orthoLeft}set orthoRight(t){this._orthoRight=t;for(const e of this._rigCameras)e.orthoRight=t}get orthoRight(){return this._orthoRight}set orthoBottom(t){this._orthoBottom=t;for(const e of this._rigCameras)e.orthoBottom=t}get orthoBottom(){return this._orthoBottom}set orthoTop(t){this._orthoTop=t;for(const e of this._rigCameras)e.orthoTop=t}get orthoTop(){return this._orthoTop}set mode(t){this._mode=t;for(const e of this._rigCameras)e.mode=t}get mode(){return this._mode}get hasMoved(){return this._hasMoved}constructor(t,e,i,s=!0){super(t,i,!1),this._position=n.Pq.Zero(),this._upVector=n.Pq.Up(),this.oblique=null,this._orthoLeft=null,this._orthoRight=null,this._orthoBottom=null,this._orthoTop=null,this.fov=.8,this.projectionPlaneTilt=0,this.minZ=1,this.maxZ=1e4,this.inertia=.9,this._mode=d.PERSPECTIVE_CAMERA,this.isIntermediate=!1,this.viewport=new l.L(0,0,1,1),this.layerMask=268435455,this.fovMode=d.FOVMODE_VERTICAL_FIXED,this.cameraRigMode=d.RIG_MODE_NONE,this.customRenderTargets=[],this.outputRenderTarget=null,this.onViewMatrixChangedObservable=new h.cP,this.onProjectionMatrixChangedObservable=new h.cP,this.onAfterCheckInputsObservable=new h.cP,this.onRestoreStateObservable=new h.cP,this.isRigCamera=!1,this._hasMoved=!1,this._rigCameras=new Array,this._skipRendering=!1,this._projectionMatrix=new n.uq,this._postProcesses=new Array,this._activeMeshes=new o.L(256),this._globalPosition=n.Pq.Zero(),this._computedViewMatrix=n.uq.Identity(),this._doNotComputeProjectionMatrix=!1,this._transformMatrix=n.uq.Zero(),this._refreshFrustumPlanes=!0,this._absoluteRotation=n.PT.Identity(),this._isCamera=!0,this._isLeftCamera=!1,this._isRightCamera=!1,this.getScene().addCamera(this),s&&!this.getScene().activeCamera&&(this.getScene().activeCamera=this),this.position=e,this.renderPassId=this.getScene().getEngine().createRenderPassId(`Camera ${t}`)}storeState(){return this._stateStored=!0,this._storedFov=this.fov,this}hasStateStored(){return!!this._stateStored}_restoreStateValues(){return!!this._stateStored&&(this.fov=this._storedFov,!0)}restoreState(){return!!this._restoreStateValues()&&(this.onRestoreStateObservable.notifyObservers(this),!0)}getClassName(){return"Camera"}toString(t){let e="Name: "+this.name;if(e+=", type: "+this.getClassName(),this.animations)for(let i=0;i<this.animations.length;i++)e+=", animation[0]: "+this.animations[i].toString(t);return e}applyVerticalCorrection(){const t=this.absoluteRotation.toEulerAngles();this.projectionPlaneTilt=this._scene.useRightHandedSystem?-t.x:t.x}get globalPosition(){return this._globalPosition}getActiveMeshes(){return this._activeMeshes}isActiveMesh(t){return-1!==this._activeMeshes.indexOf(t)}isReady(t=!1){if(t)for(const t of this._postProcesses)if(t&&!t.isReady())return!1;return super.isReady(t)}_initCache(){super._initCache(),this._cache.position=new n.Pq(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.upVector=new n.Pq(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.mode=void 0,this._cache.minZ=void 0,this._cache.maxZ=void 0,this._cache.fov=void 0,this._cache.fovMode=void 0,this._cache.aspectRatio=void 0,this._cache.orthoLeft=void 0,this._cache.orthoRight=void 0,this._cache.orthoBottom=void 0,this._cache.orthoTop=void 0,this._cache.obliqueAngle=void 0,this._cache.obliqueLength=void 0,this._cache.obliqueOffset=void 0,this._cache.renderWidth=void 0,this._cache.renderHeight=void 0}_updateCache(t){t||super._updateCache(),this._cache.position.copyFrom(this.position),this._cache.upVector.copyFrom(this.upVector)}_isSynchronized(){return this._isSynchronizedViewMatrix()&&this._isSynchronizedProjectionMatrix()}_isSynchronizedViewMatrix(){return!!super._isSynchronized()&&this._cache.position.equals(this.position)&&this._cache.upVector.equals(this.upVector)&&this.isSynchronizedWithParent()}_isSynchronizedProjectionMatrix(){let t=this._cache.mode===this.mode&&this._cache.minZ===this.minZ&&this._cache.maxZ===this.maxZ;if(!t)return!1;const e=this.getEngine();return this.mode===d.PERSPECTIVE_CAMERA?t=this._cache.fov===this.fov&&this._cache.fovMode===this.fovMode&&this._cache.aspectRatio===e.getAspectRatio(this)&&this._cache.projectionPlaneTilt===this.projectionPlaneTilt:(t=this._cache.orthoLeft===this.orthoLeft&&this._cache.orthoRight===this.orthoRight&&this._cache.orthoBottom===this.orthoBottom&&this._cache.orthoTop===this.orthoTop&&this._cache.renderWidth===e.getRenderWidth()&&this._cache.renderHeight===e.getRenderHeight(),this.oblique&&(t=t&&this._cache.obliqueAngle===this.oblique.angle&&this._cache.obliqueLength===this.oblique.length&&this._cache.obliqueOffset===this.oblique.offset)),t}attachControl(t,e){}detachControl(t){}update(){this._hasMoved=!1,this._checkInputs(),this.cameraRigMode!==d.RIG_MODE_NONE&&this._updateRigCameras(),this.getViewMatrix(),this.getProjectionMatrix()}_checkInputs(){this.onAfterCheckInputsObservable.notifyObservers(this)}get rigCameras(){return this._rigCameras}get rigPostProcess(){return this._rigPostProcess}_getFirstPostProcess(){for(let t=0;t<this._postProcesses.length;t++)if(null!==this._postProcesses[t])return this._postProcesses[t];return null}_cascadePostProcessesToRigCams(){const t=this._getFirstPostProcess();t&&t.markTextureDirty();for(let t=0,e=this._rigCameras.length;t<e;t++){const e=this._rigCameras[t],i=e._rigPostProcess;i?("pass"===i.getEffectName()&&(e.isIntermediate=0===this._postProcesses.length),e._postProcesses=this._postProcesses.slice(0).concat(i),i.markTextureDirty()):e._postProcesses=this._postProcesses.slice(0)}}attachPostProcess(t,e=null){return!t.isReusable()&&this._postProcesses.indexOf(t)>-1?(_.V.Error("You're trying to reuse a post process not defined as reusable."),0):(null==e||e<0?this._postProcesses.push(t):null===this._postProcesses[e]?this._postProcesses[e]=t:this._postProcesses.splice(e,0,t),this._cascadePostProcessesToRigCams(),this._scene.prePassRenderer&&this._scene.prePassRenderer.markAsDirty(),this._postProcesses.indexOf(t))}detachPostProcess(t){const e=this._postProcesses.indexOf(t);-1!==e&&(this._postProcesses[e]=null),this._scene.prePassRenderer&&this._scene.prePassRenderer.markAsDirty(),this._cascadePostProcessesToRigCams()}getWorldMatrix(){return this._isSynchronizedViewMatrix()||this.getViewMatrix(),this._worldMatrix}_getViewMatrix(){return n.uq.Identity()}getViewMatrix(t){return!t&&this._isSynchronizedViewMatrix()||(this._hasMoved=!0,this.updateCache(),this._computedViewMatrix=this._getViewMatrix(),this._currentRenderId=this.getScene().getRenderId(),this._childUpdateId++,this._refreshFrustumPlanes=!0,this._cameraRigParams&&this._cameraRigParams.vrPreViewMatrix&&this._computedViewMatrix.multiplyToRef(this._cameraRigParams.vrPreViewMatrix,this._computedViewMatrix),this.parent&&this.parent.onViewMatrixChangedObservable&&this.parent.onViewMatrixChangedObservable.notifyObservers(this.parent),this.onViewMatrixChangedObservable.notifyObservers(this),this._computedViewMatrix.invertToRef(this._worldMatrix)),this._computedViewMatrix}freezeProjectionMatrix(t){this._doNotComputeProjectionMatrix=!0,void 0!==t&&(this._projectionMatrix=t)}unfreezeProjectionMatrix(){this._doNotComputeProjectionMatrix=!1}getProjectionMatrix(t){if(this._doNotComputeProjectionMatrix||!t&&this._isSynchronizedProjectionMatrix())return this._projectionMatrix;this._cache.mode=this.mode,this._cache.minZ=this.minZ,this._cache.maxZ=this.maxZ,this._refreshFrustumPlanes=!0;const e=this.getEngine(),i=this.getScene(),s=e.useReverseDepthBuffer;if(this.mode===d.PERSPECTIVE_CAMERA){let t;this._cache.fov=this.fov,this._cache.fovMode=this.fovMode,this._cache.aspectRatio=e.getAspectRatio(this),this._cache.projectionPlaneTilt=this.projectionPlaneTilt,this.minZ<=0&&(this.minZ=.1),t=i.useRightHandedSystem?n.uq.PerspectiveFovRHToRef:n.uq.PerspectiveFovLHToRef,t(this.fov,e.getAspectRatio(this),s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this._projectionMatrix,this.fovMode===d.FOVMODE_VERTICAL_FIXED,e.isNDCHalfZRange,this.projectionPlaneTilt,s)}else{const t=e.getRenderWidth()/2,r=e.getRenderHeight()/2;i.useRightHandedSystem?this.oblique?n.uq.ObliqueOffCenterRHToRef(this.orthoLeft??-t,this.orthoRight??t,this.orthoBottom??-r,this.orthoTop??r,s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this.oblique.length,this.oblique.angle,this._computeObliqueDistance(this.oblique.offset),this._projectionMatrix,e.isNDCHalfZRange):n.uq.OrthoOffCenterRHToRef(this.orthoLeft??-t,this.orthoRight??t,this.orthoBottom??-r,this.orthoTop??r,s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this._projectionMatrix,e.isNDCHalfZRange):this.oblique?n.uq.ObliqueOffCenterLHToRef(this.orthoLeft??-t,this.orthoRight??t,this.orthoBottom??-r,this.orthoTop??r,s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this.oblique.length,this.oblique.angle,this._computeObliqueDistance(this.oblique.offset),this._projectionMatrix,e.isNDCHalfZRange):n.uq.OrthoOffCenterLHToRef(this.orthoLeft??-t,this.orthoRight??t,this.orthoBottom??-r,this.orthoTop??r,s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this._projectionMatrix,e.isNDCHalfZRange),this._cache.orthoLeft=this.orthoLeft,this._cache.orthoRight=this.orthoRight,this._cache.orthoBottom=this.orthoBottom,this._cache.orthoTop=this.orthoTop,this._cache.obliqueAngle=this.oblique?.angle,this._cache.obliqueLength=this.oblique?.length,this._cache.obliqueOffset=this.oblique?.offset,this._cache.renderWidth=e.getRenderWidth(),this._cache.renderHeight=e.getRenderHeight()}return this.onProjectionMatrixChangedObservable.notifyObservers(this),this._projectionMatrix}getTransformationMatrix(){return this._computedViewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._transformMatrix}_computeObliqueDistance(t){return(this.radius||(this.target?n.Pq.Distance(this.position,this.target):this.position.length()))+t}_updateFrustumPlanes(){this._refreshFrustumPlanes&&(this.getTransformationMatrix(),this._frustumPlanes?u.P.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=u.P.GetPlanes(this._transformMatrix),this._refreshFrustumPlanes=!1)}isInFrustum(t,e=!1){if(this._updateFrustumPlanes(),e&&this.rigCameras.length>0){let e=!1;return this.rigCameras.forEach((i=>{i._updateFrustumPlanes(),e=e||t.isInFrustum(i._frustumPlanes)})),e}return t.isInFrustum(this._frustumPlanes)}isCompletelyInFrustum(t){return this._updateFrustumPlanes(),t.isCompletelyInFrustum(this._frustumPlanes)}getForwardRay(t=100,e,i){throw(0,g.n)("Ray")}getForwardRayToRef(t,e=100,i,s){throw(0,g.n)("Ray")}dispose(t,e=!1){for(this.onViewMatrixChangedObservable.clear(),this.onProjectionMatrixChangedObservable.clear(),this.onAfterCheckInputsObservable.clear(),this.onRestoreStateObservable.clear(),this.inputs&&this.inputs.clear(),this.getScene().stopAnimation(this),this.getScene().removeCamera(this);this._rigCameras.length>0;){const t=this._rigCameras.pop();t&&t.dispose()}if(this._parentContainer){const t=this._parentContainer.cameras.indexOf(this);t>-1&&this._parentContainer.cameras.splice(t,1),this._parentContainer=null}if(this._rigPostProcess)this._rigPostProcess.dispose(this),this._rigPostProcess=null,this._postProcesses.length=0;else if(this.cameraRigMode!==d.RIG_MODE_NONE)this._rigPostProcess=null,this._postProcesses.length=0;else{let t=this._postProcesses.length;for(;--t>=0;){const e=this._postProcesses[t];e&&e.dispose(this)}}let i=this.customRenderTargets.length;for(;--i>=0;)this.customRenderTargets[i].dispose();this.customRenderTargets.length=0,this._activeMeshes.dispose(),this.getScene().getEngine().releaseRenderPassId(this.renderPassId),super.dispose(t,e)}get isLeftCamera(){return this._isLeftCamera}get isRightCamera(){return this._isRightCamera}get leftCamera(){return this._rigCameras.length<1?null:this._rigCameras[0]}get rightCamera(){return this._rigCameras.length<2?null:this._rigCameras[1]}getLeftTarget(){return this._rigCameras.length<1?null:this._rigCameras[0].getTarget()}getRightTarget(){return this._rigCameras.length<2?null:this._rigCameras[1].getTarget()}setCameraRigMode(t,e){if(this.cameraRigMode!==t){for(;this._rigCameras.length>0;){const t=this._rigCameras.pop();t&&t.dispose()}if(this.cameraRigMode=t,this._cameraRigParams={},this._cameraRigParams.interaxialDistance=e.interaxialDistance||.0637,this._cameraRigParams.stereoHalfAngle=a.S0.ToRadians(this._cameraRigParams.interaxialDistance/.0637),this.cameraRigMode!==d.RIG_MODE_NONE){const t=this.createRigCamera(this.name+"_L",0);t&&(t._isLeftCamera=!0);const e=this.createRigCamera(this.name+"_R",1);e&&(e._isRightCamera=!0),t&&e&&(this._rigCameras.push(t),this._rigCameras.push(e))}this._setRigMode(e),this._cascadePostProcessesToRigCams(),this.update()}}_setRigMode(t){}_getVRProjectionMatrix(){return n.uq.PerspectiveFovLHToRef(this._cameraRigParams.vrMetrics.aspectRatioFov,this._cameraRigParams.vrMetrics.aspectRatio,this.minZ,this.maxZ,this._cameraRigParams.vrWorkMatrix,!0,this.getEngine().isNDCHalfZRange),this._cameraRigParams.vrWorkMatrix.multiplyToRef(this._cameraRigParams.vrHMatrix,this._projectionMatrix),this._projectionMatrix}setCameraRigParameter(t,e){this._cameraRigParams||(this._cameraRigParams={}),this._cameraRigParams[t]=e,"interaxialDistance"===t&&(this._cameraRigParams.stereoHalfAngle=a.S0.ToRadians(e/.0637))}createRigCamera(t,e){return null}_updateRigCameras(){for(let t=0;t<this._rigCameras.length;t++)this._rigCameras[t].minZ=this.minZ,this._rigCameras[t].maxZ=this.maxZ,this._rigCameras[t].fov=this.fov,this._rigCameras[t].upVector.copyFrom(this.upVector);this.cameraRigMode===d.RIG_MODE_STEREOSCOPIC_ANAGLYPH&&(this._rigCameras[0].viewport=this._rigCameras[1].viewport=this.viewport)}_setupInputs(){}serialize(){const t=p.p.Serialize(this);return t.uniqueId=this.uniqueId,t.type=this.getClassName(),this.parent&&this.parent._serializeAsParent(t),this.inputs&&this.inputs.serialize(t),p.p.AppendSerializedAnimations(this,t),t.ranges=this.serializeAnimationRanges(),t.isEnabled=this.isEnabled(),t}clone(t,e=null){const i=p.p.Clone(d.GetConstructorFromName(this.getClassName(),t,this.getScene(),this.interaxialDistance,this.isStereoscopicSideBySide),this);return i.name=t,i.parent=e,this.onClonedObservable.notifyObservers(i),i}getDirection(t){const e=n.Pq.Zero();return this.getDirectionToRef(t,e),e}get absoluteRotation(){return this.getWorldMatrix().decompose(void 0,this._absoluteRotation),this._absoluteRotation}getDirectionToRef(t,e){n.Pq.TransformNormalToRef(t,this.getWorldMatrix(),e)}static GetConstructorFromName(t,e,i,s=0,r=!0){return c.b.Construct(t,e,i,{interaxial_distance:s,isStereoscopicSideBySide:r})||(()=>d._CreateDefaultParsedCamera(e,i))}computeWorldMatrix(){return this.getWorldMatrix()}static Parse(t,e){const i=t.type,s=d.GetConstructorFromName(i,t.name,e,t.interaxial_distance,t.isStereoscopicSideBySide),r=p.p.Parse(s,t,e);if(void 0!==t.parentId&&(r._waitingParentId=t.parentId),void 0!==t.parentInstanceIndex&&(r._waitingParentInstanceIndex=t.parentInstanceIndex),r.inputs&&(r.inputs.parse(t),r._setupInputs()),t.upVector&&(r.upVector=n.Pq.FromArray(t.upVector)),r.setPosition&&(r.position.copyFromFloats(0,0,0),r.setPosition(n.Pq.FromArray(t.position))),t.target&&r.setTarget&&r.setTarget(n.Pq.FromArray(t.target)),t.cameraRigMode){const e=t.interaxial_distance?{interaxialDistance:t.interaxial_distance}:{};r.setCameraRigMode(t.cameraRigMode,e)}if(t.animations){for(let e=0;e<t.animations.length;e++){const i=t.animations[e],s=(0,m.n9)("BABYLON.Animation");s&&r.animations.push(s.Parse(i))}c.b.ParseAnimationRanges(r,t,e)}return t.autoAnimate&&e.beginAnimation(r,t.autoAnimateFrom,t.autoAnimateTo,t.autoAnimateLoop,t.autoAnimateSpeed||1),void 0!==t.isEnabled&&r.setEnabled(t.isEnabled),r}_calculateHandednessMultiplier(){let t=this.getScene().useRightHandedSystem?-1:1;return this.parent&&this.parent._getWorldMatrixDeterminant()<0&&(t*=-1),t}}d._CreateDefaultParsedCamera=(t,e)=>{throw(0,g.n)("UniversalCamera")},d.PERSPECTIVE_CAMERA=0,d.ORTHOGRAPHIC_CAMERA=1,d.FOVMODE_VERTICAL_FIXED=0,d.FOVMODE_HORIZONTAL_FIXED=1,d.RIG_MODE_NONE=0,d.RIG_MODE_STEREOSCOPIC_ANAGLYPH=10,d.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL=11,d.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED=12,d.RIG_MODE_STEREOSCOPIC_OVERUNDER=13,d.RIG_MODE_STEREOSCOPIC_INTERLACED=14,d.RIG_MODE_VR=20,d.RIG_MODE_CUSTOM=22,d.ForceAttachControlToAlwaysPreventDefault=!1,(0,s.Cg)([(0,r.P_)("position")],d.prototype,"_position",void 0),(0,s.Cg)([(0,r.P_)("upVector")],d.prototype,"_upVector",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"orthoLeft",null),(0,s.Cg)([(0,r.lK)()],d.prototype,"orthoRight",null),(0,s.Cg)([(0,r.lK)()],d.prototype,"orthoBottom",null),(0,s.Cg)([(0,r.lK)()],d.prototype,"orthoTop",null),(0,s.Cg)([(0,r.lK)()],d.prototype,"fov",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"projectionPlaneTilt",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"minZ",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"maxZ",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"inertia",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"mode",null),(0,s.Cg)([(0,r.lK)()],d.prototype,"layerMask",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"fovMode",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"cameraRigMode",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"interaxialDistance",void 0),(0,s.Cg)([(0,r.lK)()],d.prototype,"isStereoscopicSideBySide",void 0)}}]);