"use strict";(self.webpackChunktrans_america=self.webpackChunktrans_america||[]).push([[789],{74863:(e,t,s)=>{s.d(t,{g:()=>n});var i=s(59396),r=s(70461);function n(e,t,s,n,a,o,h,l){const c=t*i.R.GetTypeByteLength(s),u=h*t;if(l.length!==u)throw new Error("Output length is not valid");if(s===i.R.FLOAT&&a===c)if(e instanceof Array){const t=n/4;l.set(e,t)}else if(e instanceof ArrayBuffer){const t=new Float32Array(e,n,u);l.set(t)}else{const t=e.byteOffset+n;if(t%4)return r.V.Warn("CopyFloatData: copied misaligned data."),void l.set(new Float32Array(e.buffer.slice(t,t+4*u)));const s=new Float32Array(e.buffer,t,u);l.set(s)}else i.R.ForEach(e,n,a,t,s,u,o,((e,t)=>l[t]=e))}},90777:(e,t,s)=>{s.d(t,{B:()=>i});class i{static get ForceFullSceneLoadingForIncremental(){return i._ForceFullSceneLoadingForIncremental}static set ForceFullSceneLoadingForIncremental(e){i._ForceFullSceneLoadingForIncremental=e}static get ShowLoadingScreen(){return i._ShowLoadingScreen}static set ShowLoadingScreen(e){i._ShowLoadingScreen=e}static get loggingLevel(){return i._LoggingLevel}static set loggingLevel(e){i._LoggingLevel=e}static get CleanBoneMatrixWeights(){return i._CleanBoneMatrixWeights}static set CleanBoneMatrixWeights(e){i._CleanBoneMatrixWeights=e}}i._ForceFullSceneLoadingForIncremental=!1,i._ShowLoadingScreen=!0,i._CleanBoneMatrixWeights=!1,i._LoggingLevel=0},66384:(e,t,s)=>{function i(e){-1===e.indexOf("vClipPlane")&&e.push("vClipPlane"),-1===e.indexOf("vClipPlane2")&&e.push("vClipPlane2"),-1===e.indexOf("vClipPlane3")&&e.push("vClipPlane3"),-1===e.indexOf("vClipPlane4")&&e.push("vClipPlane4"),-1===e.indexOf("vClipPlane5")&&e.push("vClipPlane5"),-1===e.indexOf("vClipPlane6")&&e.push("vClipPlane6")}function r(e,t,s){const i=!!(e.clipPlane??t.clipPlane),r=!!(e.clipPlane2??t.clipPlane2),n=!!(e.clipPlane3??t.clipPlane3),a=!!(e.clipPlane4??t.clipPlane4),o=!!(e.clipPlane5??t.clipPlane5),h=!!(e.clipPlane6??t.clipPlane6);i&&s.push("#define CLIPPLANE"),r&&s.push("#define CLIPPLANE2"),n&&s.push("#define CLIPPLANE3"),a&&s.push("#define CLIPPLANE4"),o&&s.push("#define CLIPPLANE5"),h&&s.push("#define CLIPPLANE6")}function n(e,t,s){let i=!1;const r=!!(e.clipPlane??t.clipPlane),n=!!(e.clipPlane2??t.clipPlane2),a=!!(e.clipPlane3??t.clipPlane3),o=!!(e.clipPlane4??t.clipPlane4),h=!!(e.clipPlane5??t.clipPlane5),l=!!(e.clipPlane6??t.clipPlane6);return s.CLIPPLANE!==r&&(s.CLIPPLANE=r,i=!0),s.CLIPPLANE2!==n&&(s.CLIPPLANE2=n,i=!0),s.CLIPPLANE3!==a&&(s.CLIPPLANE3=a,i=!0),s.CLIPPLANE4!==o&&(s.CLIPPLANE4=o,i=!0),s.CLIPPLANE5!==h&&(s.CLIPPLANE5=h,i=!0),s.CLIPPLANE6!==l&&(s.CLIPPLANE6=l,i=!0),i}function a(e,t,s){let i=t.clipPlane??s.clipPlane;o(e,"vClipPlane",i),i=t.clipPlane2??s.clipPlane2,o(e,"vClipPlane2",i),i=t.clipPlane3??s.clipPlane3,o(e,"vClipPlane3",i),i=t.clipPlane4??s.clipPlane4,o(e,"vClipPlane4",i),i=t.clipPlane5??s.clipPlane5,o(e,"vClipPlane5",i),i=t.clipPlane6??s.clipPlane6,o(e,"vClipPlane6",i)}function o(e,t,s){s&&e.setFloat4(t,s.normal.x,s.normal.y,s.normal.z,s.d)}s.d(t,{Eq:()=>n,TV:()=>i,gS:()=>a,tv:()=>r})},64769:(e,t,s)=>{s.d(t,{J:()=>i});class i{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(e,t){this._defines[e]||(e<this._currentRank&&(this._currentRank=e),e>this._maxRank&&(this._maxRank=e),this._defines[e]=new Array),this._defines[e].push(t)}addCPUSkinningFallback(e,t){this._mesh=t,e<this._currentRank&&(this._currentRank=e),e>this._maxRank&&(this._maxRank=e)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(e,t){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,e=e.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),t._bonesComputationForcedToCPU=!0;const s=this._mesh.getScene();for(let e=0;e<s.meshes.length;e++){const i=s.meshes[e];if(i.material){if(i.computeBonesUsingShaders&&0!==i.numBoneInfluencers)if(i.material.getEffect()===t)i.computeBonesUsingShaders=!1;else if(i.subMeshes)for(const e of i.subMeshes)if(e.effect===t){i.computeBonesUsingShaders=!1;break}}else!this._mesh.material&&i.computeBonesUsingShaders&&i.numBoneInfluencers>0&&(i.computeBonesUsingShaders=!1)}}else{const t=this._defines[this._currentRank];if(t)for(let s=0;s<t.length;s++)e=e.replace("#define "+t[s],"");this._currentRank++}return e}}},15949:(e,t,s)=>{s.d(t,{H:()=>c,c:()=>u});var i=s(90576),r=s(93803),n=s(96631),a=s(4365),o=s(40890),h=s(24470),l=s(64871);class c extends o.M{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class u extends h.y{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(e,t=!0){super(e,"DetailMap",140,new c,t),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=r.i.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=e._dirtyCallbacks[1]}isReadyForSubMesh(e,t,s){return!this._isEnabled||!(e._areTexturesDirty&&t.texturesEnabled&&s.getCaps().standardDerivatives&&this._texture&&a.h.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(e,t){if(this._isEnabled){e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const s=t.getEngine();e._areTexturesDirty&&(s.getCaps().standardDerivatives&&this._texture&&a.h.DetailTextureEnabled&&this._isEnabled?((0,l.YT)(this._texture,e,"DETAIL"),e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):e.DETAIL=!1)}else e.DETAIL=!1}bindForSubMesh(e,t){if(!this._isEnabled)return;const s=this._material.isFrozen;e.useUbo&&s&&e.isSync||this._texture&&a.h.DetailTextureEnabled&&(e.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,l.mA)(this._texture,e,"detail")),t.texturesEnabled&&this._texture&&a.h.DetailTextureEnabled&&e.setTexture("detailSampler",this._texture)}hasTexture(e){return this._texture===e}getActiveTextures(e){this._texture&&e.push(this._texture)}getAnimatables(e){this._texture&&this._texture.animations&&this._texture.animations.length>0&&e.push(this._texture)}dispose(e){e&&this._texture?.dispose()}getClassName(){return"DetailMapConfiguration"}getSamplers(e){e.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,i.Cg)([(0,n.uM)("detailTexture"),(0,n.$z)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"texture",void 0),(0,i.Cg)([(0,n.lK)()],u.prototype,"diffuseBlendLevel",void 0),(0,i.Cg)([(0,n.lK)()],u.prototype,"roughnessBlendLevel",void 0),(0,i.Cg)([(0,n.lK)()],u.prototype,"bumpLevel",void 0),(0,i.Cg)([(0,n.lK)(),(0,n.$z)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"normalBlendMethod",void 0),(0,i.Cg)([(0,n.lK)(),(0,n.$z)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"isEnabled",void 0)},93803:(e,t,s)=>{s.d(t,{i:()=>g});var i=s(90576),r=s(96631),n=s(90066),a=s(6740),o=s(69583),h=s(103),l=s(55179),c=s(70461),u=s(84712),d=s(95776),f=s(16265);class p{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(e){this._func=e}get funcRef(){return this._funcRef}set funcRef(e){this._funcRef=e}get funcMask(){return this._funcMask}set funcMask(e){this._funcMask=e}get opStencilFail(){return this._opStencilFail}set opStencilFail(e){this._opStencilFail=e}get opDepthFail(){return this._opDepthFail}set opDepthFail(e){this._opDepthFail=e}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(e){this._opStencilDepthPass=e}get mask(){return this._mask}set mask(e){this._mask=e}get enabled(){return this._enabled}set enabled(e){this._enabled=e}getClassName(){return"MaterialStencilState"}copyTo(e){f.p.Clone((()=>e),this)}serialize(){return f.p.Serialize(this)}parse(e,t,s){f.p.Parse((()=>this),e,t,s)}}(0,i.Cg)([(0,r.lK)()],p.prototype,"func",null),(0,i.Cg)([(0,r.lK)()],p.prototype,"funcRef",null),(0,i.Cg)([(0,r.lK)()],p.prototype,"funcMask",null),(0,i.Cg)([(0,r.lK)()],p.prototype,"opStencilFail",null),(0,i.Cg)([(0,r.lK)()],p.prototype,"opDepthFail",null),(0,i.Cg)([(0,r.lK)()],p.prototype,"opStencilDepthPass",null),(0,i.Cg)([(0,r.lK)()],p.prototype,"mask",null),(0,i.Cg)([(0,r.lK)()],p.prototype,"enabled",null);var _=s(64871);class g{get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(e){if(this._alpha===e)return;const t=this._alpha;this._alpha=e,1!==t&&1!==e||this.markAsDirty(g.MiscDirtyFlag+g.PrePassDirtyFlag)}get alpha(){return this._alpha}set backFaceCulling(e){this._backFaceCulling!==e&&(this._backFaceCulling=e,this.markAsDirty(g.TextureDirtyFlag))}get backFaceCulling(){return this._backFaceCulling}set cullBackFaces(e){this._cullBackFaces!==e&&(this._cullBackFaces=e,this.markAsDirty(g.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(e){this._blockDirtyMechanism!==e&&(this._blockDirtyMechanism=e,e||this.markDirty())}atomicMaterialsUpdate(e){this.blockDirtyMechanism=!0;try{e(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(e){this._onDisposeObserver&&this.onDisposeObservable.remove(this._onDisposeObserver),this._onDisposeObserver=this.onDisposeObservable.add(e)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new a.cP),this._onBindObservable}set onBind(e){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(e)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new a.cP),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new a.cP),this._onEffectCreatedObservable}set alphaMode(e){this._alphaMode!==e&&(this._alphaMode=e,this.markAsDirty(g.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(e){this._needDepthPrePass!==e&&(this._needDepthPrePass=e,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(e){this._fogEnabled!==e&&(this._fogEnabled=e,this.markAsDirty(g.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case g.WireFrameFillMode:case g.LineListDrawMode:case g.LineLoopDrawMode:case g.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(e){this.fillMode=e?g.WireFrameFillMode:g.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case g.PointFillMode:case g.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(e){this.fillMode=e?g.PointFillMode:g.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(e){this._fillMode!==e&&(this._fillMode=e,this.markAsDirty(g.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(e){const t=this.getScene().getEngine().getCaps().fragmentDepthSupported;e&&!t&&c.V.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=e&&t,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(e){this._drawWrapper=e}constructor(e,t,s,i=!1){this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.onDisposeObservable=new a.cP,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new p,this._useUBO=!1,this._fillMode=g.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._forceAlphaTest=!1,this._transparencyMode=null,this.name=e;const r=t||o.q.LastCreatedScene;r&&(this._scene=r,this._dirtyCallbacks={},this._forceGLSL=i,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[63]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=e||n.S0.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new d.E(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new l.D(this._scene.getEngine(),void 0,void 0,e),this._useUBO=this.getScene().getEngine().supportsUniformBuffers,this._createUniformBuffer(),s||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),g.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){const e=this.getScene().getEngine();this._uniformBuffer?.dispose(),e.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new l.D(e,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new l.D(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(e){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.markDirty(),this.checkReadyOnlyOnce=!0}unfreeze(){this.markDirty(),this.checkReadyOnlyOnce=!1}isReady(e,t){return!0}isReadyForSubMesh(e,t,s){const i=t.materialDefines;return!!i&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=i,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}getScene(){return this._scene}_getEffectiveOrientation(e){return null!==this.sideOrientation?this.sideOrientation:e.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(e){this._transparencyMode!==e&&(this._transparencyMode=e,this._forceAlphaTest=e===g.MATERIAL_ALPHATESTANDBLEND,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _disableAlphaBlending(){return this._transparencyMode===g.MATERIAL_OPAQUE||this._transparencyMode===g.MATERIAL_ALPHATEST}needAlphaBlending(){return!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(e){return e.visibility<1||!this._disableAlphaBlending&&(e.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._forceAlphaTest}_shouldTurnAlphaTestOn(e){return!this.needAlphaBlendingForMesh(e)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}markDirty(e=!1){const t=this.getScene().meshes;for(const s of t)if(s.subMeshes)for(const t of s.subMeshes)if(t.getMaterial()===this)for(const s of t._drawWrappers)s&&this._materialContext===s.materialContext&&(s._wasPreviouslyReady=!1,s._wasPreviouslyUsingInstances=null,s._forceRebindOnNextCall=e);e&&this.markAsDirty(g.AllDirtyFlag)}_preBind(e,t=null){const s=this._scene.getEngine(),i=(null==t?this.sideOrientation:t)===g.ClockWiseSideOrientation;return s.enableEffect(e||this._getDrawWrapper()),s.setState(this.backFaceCulling,this.zOffset,!1,i,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),i}bind(e,t){}buildUniformLayout(){const e=this._uniformBuffer;this._eventInfo.ubo=e,this._callbackPluginEventGeneric(8,this._eventInfo),e.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(e,t,s){const i=s._drawWrapper;this._eventInfo.subMesh=s,this._callbackPluginEventBindForSubMesh(this._eventInfo),i._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(e){}bindView(e){this._useUBO?this._needToBindSceneUbo=!0:e.setMatrix("view",this.getScene().getViewMatrix())}bindViewProjection(e){this._useUBO?this._needToBindSceneUbo=!0:(e.setMatrix("viewProjection",this.getScene().getTransformMatrix()),e.setMatrix("projection",this.getScene().getProjectionMatrix()))}bindEyePosition(e,t){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(e,t)}_afterBind(e,t=null,s){if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&t&&(this._needToBindSceneUbo=!1,(0,_._8)(t,this.getScene().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=e?e.visibility:1,this._onBindObservable&&e&&this._onBindObservable.notifyObservers(e),this.disableDepthWrite){const e=this._scene.getEngine();this._cachedDepthWriteState=e.getDepthWrite(),e.setDepthWrite(!1)}if(this.disableColorWrite){const e=this._scene.getEngine();this._cachedColorWriteState=e.getColorWrite(),e.setColorWrite(!1)}if(0!==this.depthFunction){const e=this._scene.getEngine();this._cachedDepthFunctionState=e.getDepthFunction()||0,e.setDepthFunction(this.depthFunction)}}unbind(){this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction&&this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState),this.disableDepthWrite&&this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState),this.disableColorWrite&&this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(e){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=e,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(e){return null}_clonePlugins(e,t){const s={};if(this._serializePlugins(s),g._ParsePlugins(s,e,this._scene,t),this.pluginManager)for(const t of this.pluginManager._plugins){const s=e.pluginManager.getPlugin(t.name);s&&t.copyTo(s)}}getBindedMeshes(){if(this.meshMap){const e=[];for(const t in this.meshMap){const s=this.meshMap[t];s&&e.push(s)}return e}return this._scene.meshes.filter((e=>e.material===this))}forceCompilation(e,t,s,i){const r={clipPlane:!1,useInstances:!1,...s},n=this.getScene(),a=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const o=()=>{if(!this._scene||!this._scene.getEngine())return;const s=n.clipPlane;if(r.clipPlane&&(n.clipPlane=new u.Z(0,0,0,1)),this._storeEffectOnSubMeshes){let s=!0,n=null;if(e.subMeshes){const t=new h.K(0,0,0,0,0,e,void 0,!1,!1);t.materialDefines&&(t.materialDefines._renderId=-1),this.isReadyForSubMesh(e,t,r.useInstances)||(t.effect&&t.effect.getCompilationError()&&t.effect.allFallbacksProcessed()?n=t.effect.getCompilationError():(s=!1,setTimeout(o,16)))}s&&(this.allowShaderHotSwapping=a,n&&i&&i(n),t&&t(this))}else this.isReady()?(this.allowShaderHotSwapping=a,t&&t(this)):setTimeout(o,16);r.clipPlane&&(n.clipPlane=s)};o()}forceCompilationAsync(e,t){return new Promise(((s,i)=>{this.forceCompilation(e,(()=>{s()}),t,(e=>{i(e)}))}))}markAsDirty(e){this.getScene().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(g._DirtyCallbackArray.length=0,e&g.TextureDirtyFlag&&g._DirtyCallbackArray.push(g._TextureDirtyCallBack),e&g.LightDirtyFlag&&g._DirtyCallbackArray.push(g._LightsDirtyCallBack),e&g.FresnelDirtyFlag&&g._DirtyCallbackArray.push(g._FresnelDirtyCallBack),e&g.AttributesDirtyFlag&&g._DirtyCallbackArray.push(g._AttributeDirtyCallBack),e&g.MiscDirtyFlag&&g._DirtyCallbackArray.push(g._MiscDirtyCallBack),e&g.PrePassDirtyFlag&&g._DirtyCallbackArray.push(g._PrePassDirtyCallBack),g._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(g._RunDirtyCallBacks),this.getScene().resetCachedMaterial())}resetDrawCache(){const e=this.getScene().meshes;for(const t of e)if(t.subMeshes)for(const e of t.subMeshes)e.getMaterial()===this&&e.resetDrawCache()}_markAllSubMeshesAsDirty(e){if(this.getScene().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const t=this.getScene().meshes;for(const s of t)if(s.subMeshes)for(const t of s.subMeshes)if(t.getMaterial(!1)===this)for(const s of t._drawWrappers)s&&s.defines&&s.defines.markAllAsDirty&&this._materialContext===s.materialContext&&e(s.defines)}_markScenePrePassDirty(){if(this.getScene().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const e=this.getScene().enablePrePassRenderer();e&&e.markAsDirty()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(g._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(g._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(g._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(g._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(g._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(g._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(g._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(g._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(g._MiscDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(g._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const e=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.onDisposeObservable.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(e)}))}}setPrePassRenderer(e){return!1}dispose(e,t,s){const i=this.getScene();if(i.stopAnimation(this),i.freeProcessedMaterials(),i.removeMaterial(this),this._eventInfo.forceDisposeTextures=t,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const e=this._parentContainer.materials.indexOf(this);e>-1&&this._parentContainer.materials.splice(e,1),this._parentContainer=null}if(!0!==s)if(this.meshMap)for(const e in this.meshMap){const t=this.meshMap[e];t&&(this.releaseVertexArrayObject(t,!0),t.material=null)}else{const e=i.meshes;for(const t of e)t.material!==this||t.sourceMesh||(this.releaseVertexArrayObject(t,!0),t.material=null)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.onDisposeObservable.notifyObservers(this),this.onDisposeObservable.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}releaseVertexArrayObject(e,t){const s=e.geometry;if(s)if(this._storeEffectOnSubMeshes){if(e.subMeshes)for(const i of e.subMeshes)s._releaseVertexArrayObject(i.effect),t&&i.effect&&i.effect.dispose()}else s._releaseVertexArrayObject(this._drawWrapper.effect)}serialize(){const e=f.p.Serialize(this);return e.stencil=this.stencil.serialize(),e.uniqueId=this.uniqueId,this._serializePlugins(e),e}_serializePlugins(e){if(e.plugins={},this.pluginManager)for(const t of this.pluginManager._plugins)e.plugins[t.getClassName()]=t.serialize()}static Parse(e,t,s){if(e.customType){if("BABYLON.PBRMaterial"===e.customType&&e.overloadedAlbedo&&(e.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return c.V.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else e.customType="BABYLON.StandardMaterial";const i=n.S0.Instantiate(e.customType).Parse(e,t,s);return i._loadedUniqueId=e.uniqueId,i}static _ParsePlugins(e,t,s,i){if(e.plugins)for(const r in e.plugins){const a=e.plugins[r];let o=t.pluginManager?.getPlugin(a.name);if(!o){const e=n.S0.Instantiate("BABYLON."+r);e&&(o=new e(t))}o?.parse(a,s,i)}}}g.TriangleFillMode=0,g.WireFrameFillMode=1,g.PointFillMode=2,g.PointListDrawMode=3,g.LineListDrawMode=4,g.LineLoopDrawMode=5,g.LineStripDrawMode=6,g.TriangleStripDrawMode=7,g.TriangleFanDrawMode=8,g.ClockWiseSideOrientation=0,g.CounterClockWiseSideOrientation=1,g.TextureDirtyFlag=1,g.LightDirtyFlag=2,g.FresnelDirtyFlag=4,g.AttributesDirtyFlag=8,g.MiscDirtyFlag=16,g.PrePassDirtyFlag=32,g.AllDirtyFlag=63,g.MATERIAL_OPAQUE=0,g.MATERIAL_ALPHATEST=1,g.MATERIAL_ALPHABLEND=2,g.MATERIAL_ALPHATESTANDBLEND=3,g.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,g.MATERIAL_NORMALBLENDMETHOD_RNM=1,g.OnEventObservable=new a.cP,g._AllDirtyCallBack=e=>e.markAllAsDirty(),g._ImageProcessingDirtyCallBack=e=>e.markAsImageProcessingDirty(),g._TextureDirtyCallBack=e=>e.markAsTexturesDirty(),g._FresnelDirtyCallBack=e=>e.markAsFresnelDirty(),g._MiscDirtyCallBack=e=>e.markAsMiscDirty(),g._PrePassDirtyCallBack=e=>e.markAsPrePassDirty(),g._LightsDirtyCallBack=e=>e.markAsLightDirty(),g._AttributeDirtyCallBack=e=>e.markAsAttributesDirty(),g._FresnelAndMiscDirtyCallBack=e=>{g._FresnelDirtyCallBack(e),g._MiscDirtyCallBack(e)},g._TextureAndMiscDirtyCallBack=e=>{g._TextureDirtyCallBack(e),g._MiscDirtyCallBack(e)},g._DirtyCallbackArray=[],g._RunDirtyCallBacks=e=>{for(const t of g._DirtyCallbackArray)t(e)},(0,i.Cg)([(0,r.lK)()],g.prototype,"id",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"uniqueId",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"name",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"metadata",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"checkReadyOnEveryCall",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"checkReadyOnlyOnce",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"state",void 0),(0,i.Cg)([(0,r.lK)("alpha")],g.prototype,"_alpha",void 0),(0,i.Cg)([(0,r.lK)("backFaceCulling")],g.prototype,"_backFaceCulling",void 0),(0,i.Cg)([(0,r.lK)("cullBackFaces")],g.prototype,"_cullBackFaces",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"sideOrientation",void 0),(0,i.Cg)([(0,r.lK)("alphaMode")],g.prototype,"_alphaMode",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"_needDepthPrePass",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"disableDepthWrite",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"disableColorWrite",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"forceDepthWrite",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"depthFunction",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"separateCullingPass",void 0),(0,i.Cg)([(0,r.lK)("fogEnabled")],g.prototype,"_fogEnabled",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"pointSize",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"zOffset",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"zOffsetUnits",void 0),(0,i.Cg)([(0,r.lK)()],g.prototype,"pointsCloud",null),(0,i.Cg)([(0,r.lK)()],g.prototype,"fillMode",null),(0,i.Cg)([(0,r.lK)()],g.prototype,"useLogarithmicDepth",null),(0,i.Cg)([(0,r.lK)()],g.prototype,"transparencyMode",null)},40890:(e,t,s)=>{s.d(t,{M:()=>i});class i{constructor(e){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=e,e)for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&this._setDefaultValue(t)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!1,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(e=!1){this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||e,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const e of Object.keys(this))"_"!==e[0]&&this._keys.push(e);if(this._externalProperties)for(const e in this._externalProperties)-1===this._keys.indexOf(e)&&this._keys.push(e)}isEqual(e){if(this._keys.length!==e._keys.length)return!1;for(let t=0;t<this._keys.length;t++){const s=this._keys[t];if(this[s]!==e[s])return!1}return!0}cloneTo(e){this._keys.length!==e._keys.length&&(e._keys=this._keys.slice(0));for(let t=0;t<this._keys.length;t++){const s=this._keys[t];e[s]=this[s]}}reset(){this._keys.forEach((e=>this._setDefaultValue(e)))}_setDefaultValue(e){const t=this._externalProperties?.[e]?.type??typeof this[e],s=this._externalProperties?.[e]?.default;switch(t){case"number":this[e]=s??0;break;case"string":this[e]=s??"";break;default:this[e]=s??!1}}toString(){let e="";for(let t=0;t<this._keys.length;t++){const s=this._keys[t],i=this[s];switch(typeof i){case"number":case"string":e+="#define "+s+" "+i+"\n";break;default:i&&(e+="#define "+s+"\n")}}return e}}},4365:(e,t,s)=>{s.d(t,{h:()=>r});var i=s(80770);class r{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){this._DiffuseTextureEnabled!==e&&(this._DiffuseTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(e){this._DetailTextureEnabled!==e&&(this._DetailTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(e){this._DecalMapEnabled!==e&&(this._DecalMapEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(e){this._AmbientTextureEnabled!==e&&(this._AmbientTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(e){this._OpacityTextureEnabled!==e&&(this._OpacityTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){this._ReflectionTextureEnabled!==e&&(this._ReflectionTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){this._EmissiveTextureEnabled!==e&&(this._EmissiveTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(e){this._SpecularTextureEnabled!==e&&(this._SpecularTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(e){this._BumpTextureEnabled!==e&&(this._BumpTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(e){this._LightmapTextureEnabled!==e&&(this._LightmapTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(e){this._RefractionTextureEnabled!==e&&(this._RefractionTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){this._ColorGradingTextureEnabled!==e&&(this._ColorGradingTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(e){this._FresnelEnabled!==e&&(this._FresnelEnabled=e,i.$.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(e){this._ClearCoatTextureEnabled!==e&&(this._ClearCoatTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(e){this._ClearCoatBumpTextureEnabled!==e&&(this._ClearCoatBumpTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(e){this._ClearCoatTintTextureEnabled!==e&&(this._ClearCoatTintTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(e){this._SheenTextureEnabled!==e&&(this._SheenTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(e){this._AnisotropicTextureEnabled!==e&&(this._AnisotropicTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(e){this._ThicknessTextureEnabled!==e&&(this._ThicknessTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(e){this._RefractionIntensityTextureEnabled!==e&&(this._RefractionIntensityTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(e){this._TranslucencyIntensityTextureEnabled!==e&&(this._TranslucencyIntensityTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(e){this._TranslucencyColorTextureEnabled!==e&&(this._TranslucencyColorTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(e){this._IridescenceTextureEnabled!==e&&(this._IridescenceTextureEnabled=e,i.$.MarkAllMaterialsAsDirty(1))}}r._DiffuseTextureEnabled=!0,r._DetailTextureEnabled=!0,r._DecalMapEnabled=!0,r._AmbientTextureEnabled=!0,r._OpacityTextureEnabled=!0,r._ReflectionTextureEnabled=!0,r._EmissiveTextureEnabled=!0,r._SpecularTextureEnabled=!0,r._BumpTextureEnabled=!0,r._LightmapTextureEnabled=!0,r._RefractionTextureEnabled=!0,r._ColorGradingTextureEnabled=!0,r._FresnelEnabled=!0,r._ClearCoatTextureEnabled=!0,r._ClearCoatBumpTextureEnabled=!0,r._ClearCoatTintTextureEnabled=!0,r._SheenTextureEnabled=!0,r._AnisotropicTextureEnabled=!0,r._ThicknessTextureEnabled=!0,r._RefractionIntensityTextureEnabled=!0,r._TranslucencyIntensityTextureEnabled=!0,r._TranslucencyColorTextureEnabled=!0,r._IridescenceTextureEnabled=!0},64871:(e,t,s)=>{s.d(t,{Bb:()=>W,DL:()=>c,ER:()=>E,GD:()=>k,IC:()=>O,IF:()=>f,J2:()=>x,Jz:()=>B,Kd:()=>I,L0:()=>b,MF:()=>d,N4:()=>V,Nc:()=>w,OR:()=>C,RL:()=>P,VO:()=>N,Y7:()=>U,YT:()=>m,Yy:()=>u,_8:()=>g,az:()=>S,c4:()=>M,f$:()=>A,fm:()=>D,lo:()=>R,mA:()=>y,nR:()=>_,ni:()=>T,qB:()=>F,qL:()=>v,te:()=>p,wu:()=>L});var i=s(70461),r=s(39341),n=s(69583),a=s(67695),o=s(66384);const h=r.v9.Black(),l={NUM_MORPH_INFLUENCERS:0};function c(e,t,s){if(!e||e.LOGARITHMICDEPTH||e.indexOf&&e.indexOf("LOGARITHMICDEPTH")>=0){const e=s.activeCamera;1===e.mode&&i.V.Error("Logarithmic depth is not compatible with orthographic cameras!",20),t.setFloat("logarithmicDepthConstant",2/(Math.log(e.maxZ+1)/Math.LN2))}}function u(e,t,s,i=!1){s&&e.fogEnabled&&(!t||t.applyFog)&&0!==e.fogMode&&(s.setFloat4("vFogInfos",e.fogMode,e.fogStart,e.fogEnd,e.fogDensity),i?(e.fogColor.toLinearSpaceToRef(h,e.getEngine().useExactSrgbConversions),s.setColor3("vFogColor",h)):s.setColor3("vFogColor",e.fogColor))}function d(e,t,s){l.NUM_MORPH_INFLUENCERS=s,f(e,t,l)}function f(e,t,s){const r=s.NUM_MORPH_INFLUENCERS;if(r>0&&n.q.LastCreatedEngine){const a=n.q.LastCreatedEngine.getCaps().maxVertexAttribs,o=t.morphTargetManager;if(o?.isUsingTextureForTargets)return;const h=o&&o.supportsNormals&&s.NORMAL,l=o&&o.supportsTangents&&s.TANGENT,c=o&&o.supportsUVs&&s.UV1;for(let s=0;s<r;s++)e.push("position"+s),h&&e.push("normal"+s),l&&e.push("tangent"+s),c&&e.push("uv_"+s),e.length>a&&i.V.Error("Cannot add more vertex attributes for mesh "+t.name)}}function p(e,t=!1){e.push("world0"),e.push("world1"),e.push("world2"),e.push("world3"),t&&(e.push("previousWorld0"),e.push("previousWorld1"),e.push("previousWorld2"),e.push("previousWorld3"))}function _(e,t){const s=e.morphTargetManager;e&&s&&t.setFloatArray("morphTargetInfluences",s.influences)}function g(e,t){t.bindToEffect(e,"Scene")}function m(e,t,s){t._needUVs=!0,t[s]=!0,e.optimizeUVAllocation&&e.getTextureMatrix().isIdentityAs3x2()?(t[s+"DIRECTUV"]=e.coordinatesIndex+1,t["MAINUV"+(e.coordinatesIndex+1)]=!0):t[s+"DIRECTUV"]=0}function y(e,t,s){const i=e.getTextureMatrix();t.updateMatrix(s+"Matrix",i)}function x(e,t,s){s.BAKED_VERTEX_ANIMATION_TEXTURE&&s.INSTANCES&&e.push("bakedVertexAnimationSettingsInstanced")}function A(e,t,s){var i;if(t&&e&&(e.computeBonesUsingShaders&&t._bonesComputationForcedToCPU&&(e.computeBonesUsingShaders=!1),e.useBones&&e.computeBonesUsingShaders&&e.skeleton)){const r=e.skeleton;if(r.isUsingTextureForMatrices&&t.getUniformIndex("boneTextureWidth")>-1){const s=r.getTransformMatrixTexture(e);t.setTexture("boneSampler",s),t.setFloat("boneTextureWidth",4*(r.bones.length+1))}else{const n=r.getTransformMatrices(e);n&&(t.setMatrices("mBones",n),s&&e.getScene().prePassRenderer&&e.getScene().prePassRenderer.getIndex(2)&&(s.previousBones[e.uniqueId]||(s.previousBones[e.uniqueId]=n.slice()),t.setMatrices("mPreviousBones",s.previousBones[e.uniqueId]),i=n,s.previousBones[e.uniqueId].set(i)))}}}function b(e,t,s){e.transferToEffect(t,s+"")}function I(e,t,s,i,r,n=!0){e._bindLight(t,s,i,r,n)}function P(e,t,s,i,r=4){const n=Math.min(t.lightSources.length,r);for(let r=0;r<n;r++)I(t.lightSources[r],r,e,s,"boolean"==typeof i?i:i.SPECULARTERM,t.receiveShadows)}function T(e,t,s,i){s.NUM_BONE_INFLUENCERS>0&&(i.addCPUSkinningFallback(0,t),e.push("matricesIndices"),e.push("matricesWeights"),s.NUM_BONE_INFLUENCERS>4&&(e.push("matricesIndicesExtra"),e.push("matricesWeightsExtra")))}function E(e,t){(t.INSTANCES||t.THIN_INSTANCES)&&p(e,!!t.PREPASS_VELOCITY),t.INSTANCESCOLOR&&e.push("instanceColor")}function M(e,t,s=4,i=0){let r=0;for(let n=0;n<s&&e["LIGHT"+n];n++)n>0&&(r=i+n,t.addFallback(r,"LIGHT"+n)),e.SHADOWS||(e["SHADOW"+n]&&t.addFallback(i,"SHADOW"+n),e["SHADOWPCF"+n]&&t.addFallback(i,"SHADOWPCF"+n),e["SHADOWPCSS"+n]&&t.addFallback(i,"SHADOWPCSS"+n),e["SHADOWPOISSON"+n]&&t.addFallback(i,"SHADOWPOISSON"+n),e["SHADOWESM"+n]&&t.addFallback(i,"SHADOWESM"+n),e["SHADOWCLOSEESM"+n]&&t.addFallback(i,"SHADOWCLOSEESM"+n));return r++}function v(e,t){return t.fogEnabled&&e.applyFog&&0!==t.fogMode}function D(e,t,s,i,r,n,a,o=!1){a._areMiscDirty&&(a.LOGARITHMICDEPTH=s,a.POINTSIZE=i,a.FOG=r&&v(e,t),a.NONUNIFORMSCALING=e.nonUniformScaling,a.ALPHATEST=n,a.DECAL_AFTER_DETAIL=o)}function S(e,t,s,i,r=4,n=!1){if(!s._areLightsDirty)return s._needNormals;let a=0;const o={needNormals:s._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(e.lightsEnabled&&!n)for(const n of t.lightSources)if(R(e,t,n,a,s,i,o),a++,a===r)break;s.SPECULARTERM=o.specularEnabled,s.SHADOWS=o.shadowEnabled;for(let e=a;e<r;e++)void 0!==s["LIGHT"+e]&&(s["LIGHT"+e]=!1,s["HEMILIGHT"+e]=!1,s["POINTLIGHT"+e]=!1,s["DIRLIGHT"+e]=!1,s["SPOTLIGHT"+e]=!1,s["SHADOW"+e]=!1,s["SHADOWCSM"+e]=!1,s["SHADOWCSMDEBUG"+e]=!1,s["SHADOWCSMNUM_CASCADES"+e]=!1,s["SHADOWCSMUSESHADOWMAXZ"+e]=!1,s["SHADOWCSMNOBLEND"+e]=!1,s["SHADOWCSM_RIGHTHANDED"+e]=!1,s["SHADOWPCF"+e]=!1,s["SHADOWPCSS"+e]=!1,s["SHADOWPOISSON"+e]=!1,s["SHADOWESM"+e]=!1,s["SHADOWCLOSEESM"+e]=!1,s["SHADOWCUBE"+e]=!1,s["SHADOWLOWQUALITY"+e]=!1,s["SHADOWMEDIUMQUALITY"+e]=!1);const h=e.getEngine().getCaps();return void 0===s.SHADOWFLOAT&&(o.needRebuild=!0),s.SHADOWFLOAT=o.shadowEnabled&&(h.textureFloatRender&&h.textureFloatLinearFiltering||h.textureHalfFloatRender&&h.textureHalfFloatLinearFiltering),s.LIGHTMAPEXCLUDED=o.lightmapMode,o.needRebuild&&s.rebuild(),o.needNormals}function R(e,t,s,i,r,n,o){switch(o.needNormals=!0,void 0===r["LIGHT"+i]&&(o.needRebuild=!0),r["LIGHT"+i]=!0,r["SPOTLIGHT"+i]=!1,r["HEMILIGHT"+i]=!1,r["POINTLIGHT"+i]=!1,r["DIRLIGHT"+i]=!1,s.prepareLightSpecificDefines(r,i),r["LIGHT_FALLOFF_PHYSICAL"+i]=!1,r["LIGHT_FALLOFF_GLTF"+i]=!1,r["LIGHT_FALLOFF_STANDARD"+i]=!1,s.falloffType){case a.c.FALLOFF_GLTF:r["LIGHT_FALLOFF_GLTF"+i]=!0;break;case a.c.FALLOFF_PHYSICAL:r["LIGHT_FALLOFF_PHYSICAL"+i]=!0;break;case a.c.FALLOFF_STANDARD:r["LIGHT_FALLOFF_STANDARD"+i]=!0}if(n&&!s.specular.equalsFloats(0,0,0)&&(o.specularEnabled=!0),r["SHADOW"+i]=!1,r["SHADOWCSM"+i]=!1,r["SHADOWCSMDEBUG"+i]=!1,r["SHADOWCSMNUM_CASCADES"+i]=!1,r["SHADOWCSMUSESHADOWMAXZ"+i]=!1,r["SHADOWCSMNOBLEND"+i]=!1,r["SHADOWCSM_RIGHTHANDED"+i]=!1,r["SHADOWPCF"+i]=!1,r["SHADOWPCSS"+i]=!1,r["SHADOWPOISSON"+i]=!1,r["SHADOWESM"+i]=!1,r["SHADOWCLOSEESM"+i]=!1,r["SHADOWCUBE"+i]=!1,r["SHADOWLOWQUALITY"+i]=!1,r["SHADOWMEDIUMQUALITY"+i]=!1,t&&t.receiveShadows&&e.shadowsEnabled&&s.shadowEnabled){const t=s.getShadowGenerator(e.activeCamera)??s.getShadowGenerator();if(t){const e=t.getShadowMap();e&&e.renderList&&e.renderList.length>0&&(o.shadowEnabled=!0,t.prepareDefines(r,i))}}s.lightmapMode!=a.c.LIGHTMAP_DEFAULT?(o.lightmapMode=!0,r["LIGHTMAPEXCLUDED"+i]=!0,r["LIGHTMAPNOSPECULAR"+i]=s.lightmapMode==a.c.LIGHTMAP_SHADOWSONLY):(r["LIGHTMAPEXCLUDED"+i]=!1,r["LIGHTMAPNOSPECULAR"+i]=!1)}function C(e,t,s,i,r,n=null,a=!1){let h=U(e,i);!1!==n&&(h=(0,o.Eq)(s,e,i)),i.DEPTHPREPASS!==!t.getColorWrite()&&(i.DEPTHPREPASS=!i.DEPTHPREPASS,h=!0),i.INSTANCES!==r&&(i.INSTANCES=r,h=!0),i.THIN_INSTANCES!==a&&(i.THIN_INSTANCES=a,h=!0),h&&i.markAsUnprocessed()}function O(e,t){if(e.useBones&&e.computeBonesUsingShaders&&e.skeleton){t.NUM_BONE_INFLUENCERS=e.numBoneInfluencers;const s=void 0!==t.BONETEXTURE;if(e.skeleton.isUsingTextureForMatrices&&s)t.BONETEXTURE=!0;else{t.BonesPerMesh=e.skeleton.bones.length+1,t.BONETEXTURE=!s&&void 0;const i=e.getScene().prePassRenderer;if(i&&i.enabled){const s=-1===i.excludedSkinnedMesh.indexOf(e);t.BONES_VELOCITY_ENABLED=s}}}else t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,void 0!==t.BONETEXTURE&&(t.BONETEXTURE=!1)}function B(e,t){const s=e.morphTargetManager;s?(t.MORPHTARGETS_UV=s.supportsUVs&&t.UV1,t.MORPHTARGETS_TANGENT=s.supportsTangents&&t.TANGENT,t.MORPHTARGETS_NORMAL=s.supportsNormals&&t.NORMAL,t.NUM_MORPH_INFLUENCERS=s.numMaxInfluencers||s.numInfluencers,t.MORPHTARGETS=t.NUM_MORPH_INFLUENCERS>0,t.MORPHTARGETS_TEXTURE=s.isUsingTextureForTargets):(t.MORPHTARGETS_UV=!1,t.MORPHTARGETS_TANGENT=!1,t.MORPHTARGETS_NORMAL=!1,t.MORPHTARGETS=!1,t.NUM_MORPH_INFLUENCERS=0)}function L(e,t){const s=e.bakedVertexAnimationManager;t.BAKED_VERTEX_ANIMATION_TEXTURE=!(!s||!s.isEnabled)}function F(e,t,s,i,r=!1,n=!0,a=!0){if(!t._areAttributesDirty&&t._needNormals===t._normals&&t._needUVs===t._uvs)return!1;t._normals=t._needNormals,t._uvs=t._needUVs,t.NORMAL=t._needNormals&&e.isVerticesDataPresent("normal"),t._needNormals&&e.isVerticesDataPresent("tangent")&&(t.TANGENT=!0);for(let s=1;s<=6;++s)t["UV"+s]=!!t._needUVs&&e.isVerticesDataPresent(`uv${1===s?"":s}`);if(s){const s=e.useVertexColors&&e.isVerticesDataPresent("color");t.VERTEXCOLOR=s,t.VERTEXALPHA=e.hasVertexAlpha&&s&&n}return e.isVerticesDataPresent("instanceColor")&&(e.hasInstances||e.hasThinInstances)&&(t.INSTANCESCOLOR=!0),i&&O(e,t),r&&B(e,t),a&&L(e,t),!0}function N(e,t){if(e.activeCamera){const s=t.MULTIVIEW;t.MULTIVIEW=null!==e.activeCamera.outputRenderTarget&&e.activeCamera.outputRenderTarget.getViewCount()>1,t.MULTIVIEW!=s&&t.markAsUnprocessed()}}function w(e,t,s){const i=t.ORDER_INDEPENDENT_TRANSPARENCY,r=t.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;t.ORDER_INDEPENDENT_TRANSPARENCY=e.useOrderIndependentTransparency&&s,t.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!e.getEngine().getCaps().textureFloatLinearFiltering,i===t.ORDER_INDEPENDENT_TRANSPARENCY&&r===t.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||t.markAsUnprocessed()}function V(e,t,s){const i=t.PREPASS;if(!t._arePrePassDirty)return;const r=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(e.prePassRenderer&&e.prePassRenderer.enabled&&s){t.PREPASS=!0,t.SCENE_MRT_COUNT=e.prePassRenderer.mrtCount,t.PREPASS_NORMAL_WORLDSPACE=e.prePassRenderer.generateNormalsInWorldSpace,t.PREPASS_COLOR=!0,t.PREPASS_COLOR_INDEX=0;for(let s=0;s<r.length;s++){const i=e.prePassRenderer.getIndex(r[s].type);-1!==i?(t[r[s].define]=!0,t[r[s].index]=i):t[r[s].define]=!1}}else{t.PREPASS=!1;for(let e=0;e<r.length;e++)t[r[e].define]=!1}t.PREPASS!=i&&(t.markAsUnprocessed(),t.markAsImageProcessingDirty())}function U(e,t){let s=!1;if(e.activeCamera){const i=t.CAMERA_ORTHOGRAPHIC?1:0,r=t.CAMERA_PERSPECTIVE?1:0,n=1===e.activeCamera.mode?1:0,a=0===e.activeCamera.mode?1:0;(i^n||r^a)&&(t.CAMERA_ORTHOGRAPHIC=1===n,t.CAMERA_PERSPECTIVE=1===a,s=!0)}return s}function k(e,t,s,i,r=null,n=!1){r&&r.push("Light"+e),n||(t.push("vLightData"+e,"vLightDiffuse"+e,"vLightSpecular"+e,"vLightDirection"+e,"vLightFalloff"+e,"vLightGround"+e,"lightMatrix"+e,"shadowsInfo"+e,"depthValues"+e),s.push("shadowTexture"+e),s.push("depthTexture"+e),t.push("viewFrustumZ"+e,"cascadeBlendFactor"+e,"lightSizeUVCorrection"+e,"depthCorrection"+e,"penumbraDarkness"+e,"frustumLengths"+e),i&&(s.push("projectionLightTexture"+e),t.push("textureProjectionMatrix"+e)))}function W(e,t,s,i=4){let r,n=null;if(e.uniformsNames){const a=e;r=a.uniformsNames,n=a.uniformBuffersNames,t=a.samplers,s=a.defines,i=a.maxSimultaneousLights||0}else r=e,t||(t=[]);for(let e=0;e<i&&s["LIGHT"+e];e++)k(e,r,t,s["PROJECTEDLIGHTTEXTURE"+e],n);s.NUM_MORPH_INFLUENCERS&&(r.push("morphTargetInfluences"),r.push("morphTargetCount")),s.BAKED_VERTEX_ANIMATION_TEXTURE&&(r.push("bakedVertexAnimationSettings"),r.push("bakedVertexAnimationTextureSizeInverted"),r.push("bakedVertexAnimationTime"),t.push("bakedVertexAnimationTexture"))}},79130:(e,t,s)=>{s.d(t,{Z:()=>i,m:()=>n});var i,r=s(54983);!function(e){e[e.Zero=0]="Zero",e[e.One=1]="One",e[e.MaxViewZ=2]="MaxViewZ"}(i||(i={}));class n{static CreateConfiguration(e){return n._Configurations[e]={defines:{},previousWorldMatrices:{},previousViewProjection:r.uq.Zero(),currentViewProjection:r.uq.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[]},n._Configurations[e]}static DeleteConfiguration(e){delete n._Configurations[e]}static GetConfiguration(e){return n._Configurations[e]}static AddUniformsAndSamplers(e,t){e.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(e,t){for(const s of t)if(s.subMeshes)for(const t of s.subMeshes)t._removeDrawWrapper(e)}static PrepareDefines(e,t,s){if(!s._arePrePassDirty)return;const i=n._Configurations[e];if(!i)return;s.PREPASS=!0,s.PREPASS_COLOR=!1,s.PREPASS_COLOR_INDEX=-1;let r=0;for(let e=0;e<n.GeometryTextureDescriptions.length;e++){const t=n.GeometryTextureDescriptions[e],a=t.define,o=t.defineIndex,h=i.defines[o];void 0!==h?(s[a]=!0,s[o]=h,r++):(s[a]=!1,delete s[o])}s.SCENE_MRT_COUNT=r,s.BONES_VELOCITY_ENABLED=t.useBones&&t.computeBonesUsingShaders&&t.skeleton&&!t.skeleton.isUsingTextureForMatrices&&-1===i.excludedSkinnedMesh.indexOf(t)}static Bind(e,t,s,i){const r=n._Configurations[e];if(r&&(void 0!==r.defines.PREPASS_VELOCITY_INDEX||void 0!==r.defines.PREPASS_VELOCITY_LINEAR_INDEX)){r.previousWorldMatrices[s.uniqueId]||(r.previousWorldMatrices[s.uniqueId]=i.clone());const e=s.getScene();r.previousViewProjection||(r.previousViewProjection=e.getTransformMatrix().clone(),r.currentViewProjection=e.getTransformMatrix().clone());const n=e.getEngine();if(r.currentViewProjection.updateFlag!==e.getTransformMatrix().updateFlag?(r.lastUpdateFrameId=n.frameId,r.previousViewProjection.copyFrom(r.currentViewProjection),r.currentViewProjection.copyFrom(e.getTransformMatrix())):r.lastUpdateFrameId!==n.frameId&&(r.lastUpdateFrameId=n.frameId,r.previousViewProjection.copyFrom(r.currentViewProjection)),t.setMatrix("previousWorld",r.previousWorldMatrices[s.uniqueId]),t.setMatrix("previousViewProjection",r.previousViewProjection),r.previousWorldMatrices[s.uniqueId]=i.clone(),s.useBones&&s.computeBonesUsingShaders&&s.skeleton){const e=s.skeleton;if(!e.isUsingTextureForMatrices||-1===t.getUniformIndex("boneTextureWidth")){const i=e.getTransformMatrices(s);i&&(r.previousBones[s.uniqueId]||(r.previousBones[s.uniqueId]=i.slice()),t.setMatrices("mPreviousBones",r.previousBones[s.uniqueId]),r.previousBones[s.uniqueId].set(i))}}}}}n.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"}],n._Configurations={}},24470:(e,t,s)=>{s.d(t,{y:()=>h});var i=s(90576),r=s(96631),n=s(39324),a=s(16265),o=s(88252);class h{isCompatible(e){return 0===e}_enable(e){e&&this._pluginManager._activatePlugin(this)}constructor(e,t,s,i,r=!0,a=!1,o=!1){this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this._material=e,this.name=t,this.priority=s,this.resolveIncludes=o,e.pluginManager||(e.pluginManager=new n.uZ(e),e.onDisposeObservable.add((()=>{e.pluginManager=void 0}))),this._pluginDefineNames=i,this._pluginManager=e.pluginManager,r&&this._pluginManager._addPlugin(this),a&&this._enable(!0),this.markAllDefinesAsDirty=e._dirtyCallbacks[63]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(e,t,s,i){return!0}hardBindForSubMesh(e,t,s,i){}bindForSubMesh(e,t,s,i){}dispose(e){}getCustomCode(e,t=0){return null}collectDefines(e){if(this._pluginDefineNames)for(const t of Object.keys(this._pluginDefineNames)){if("_"===t[0])continue;const s=typeof this._pluginDefineNames[t];e[t]={type:"number"===s?"number":"string"===s?"string":"boolean"===s?"boolean":"object",default:this._pluginDefineNames[t]}}}prepareDefinesBeforeAttributes(e,t,s){}prepareDefines(e,t,s){}hasTexture(e){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(e){}getActiveTextures(e){}getAnimatables(e){}addFallbacks(e,t,s){return s}getSamplers(e){}getAttributes(e,t,s){}getUniformBuffersNames(e){}getUniforms(e=0){return{}}copyTo(e){a.p.Clone((()=>e),this)}serialize(){return a.p.Serialize(this)}parse(e,t,s){a.p.Parse((()=>this),e,t,s)}}(0,i.Cg)([(0,r.lK)()],h.prototype,"name",void 0),(0,i.Cg)([(0,r.lK)()],h.prototype,"priority",void 0),(0,i.Cg)([(0,r.lK)()],h.prototype,"resolveIncludes",void 0),(0,i.Cg)([(0,r.lK)()],h.prototype,"registerForExtraEvents",void 0),(0,o.Y5)("BABYLON.MaterialPluginBase",h)},39324:(e,t,s)=>{s.d(t,{YC:()=>d,lM:()=>f,tC:()=>p,uZ:()=>h});var i=s(93803),r=s(69583),n=s(23469),a=s(43862);const o=new RegExp("^([gimus]+)!");class h{constructor(e){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=e,this._scene=e.getScene(),this._engine=this._scene.getEngine()}_addPlugin(e){for(let t=0;t<this._plugins.length;++t)if(this._plugins[t].name===e.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!e.isCompatible(this._material.shaderLanguage))throw`The plugin "${e.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const t=e.getClassName();h._MaterialPluginClassToMainDefine[t]||(h._MaterialPluginClassToMainDefine[t]="MATERIALPLUGIN_"+ ++h._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(e,t)=>this._handlePluginEvent(e,t),this._plugins.push(e),this._plugins.sort(((e,t)=>e.priority-t.priority)),this._codeInjectionPoints={};const s={};s[h._MaterialPluginClassToMainDefine[t]]={type:"boolean",default:!0};for(const e of this._plugins)e.collectDefines(s),this._collectPointNames("vertex",e.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",e.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=s,!0}_activatePlugin(e){-1===this._activePlugins.indexOf(e)&&(this._activePlugins.push(e),this._activePlugins.sort(((e,t)=>e.priority-t.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),e.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(e),this._activePluginsForExtraEvents.sort(((e,t)=>e.priority-t.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(e){for(let t=0;t<this._plugins.length;++t)if(this._plugins[t].name===e)return this._plugins[t];return null}_handlePluginEventIsReadyForSubMesh(e){let t=!0;for(const s of this._activePlugins)t=t&&s.isReadyForSubMesh(e.defines,this._scene,this._engine,e.subMesh);e.isReadyForSubMesh=t}_handlePluginEventPrepareDefinesBeforeAttributes(e){for(const t of this._activePlugins)t.prepareDefinesBeforeAttributes(e.defines,this._scene,e.mesh)}_handlePluginEventPrepareDefines(e){for(const t of this._activePlugins)t.prepareDefines(e.defines,this._scene,e.mesh)}_handlePluginEventHardBindForSubMesh(e){for(const t of this._activePluginsForExtraEvents)t.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventBindForSubMesh(e){for(const t of this._activePlugins)t.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventHasRenderTargetTextures(e){let t=!1;for(const e of this._activePluginsForExtraEvents)if(t=e.hasRenderTargetTextures(),t)break;e.hasRenderTargetTextures=t}_handlePluginEventFillRenderTargetTextures(e){for(const t of this._activePluginsForExtraEvents)t.fillRenderTargetTextures(e.renderTargets)}_handlePluginEvent(e,t){switch(e){case 512:{const e=t;for(const t of this._activePlugins)t.getActiveTextures(e.activeTextures);break}case 256:{const e=t;for(const t of this._activePlugins)t.getAnimatables(e.animatables);break}case 1024:{const e=t;let s=!1;for(const t of this._activePlugins)if(s=t.hasTexture(e.texture),s)break;e.hasTexture=s;break}case 2:{const e=t;for(const t of this._plugins)t.dispose(e.forceDisposeTextures);break}case 4:t.defineNames=this._defineNamesFromPlugins;break;case 128:{const e=t;for(const t of this._activePlugins)e.fallbackRank=t.addFallbacks(e.defines,e.fallbacks,e.fallbackRank),t.getAttributes(e.attributes,this._scene,e.mesh);this._uniformList.length>0&&e.uniforms.push(...this._uniformList),this._samplerList.length>0&&e.samplers.push(...this._samplerList),this._uboList.length>0&&e.uniformBuffersNames.push(...this._uboList),e.customCode=this._injectCustomCode(e,e.customCode);break}case 8:{const e=t;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const s=1===this._material.shaderLanguage;for(const t of this._plugins){const i=t.getUniforms(this._material.shaderLanguage);if(i){if(i.ubo)for(const t of i.ubo){if(t.size&&t.type){const i=t.arraySize??0;if(e.ubo.addUniform(t.name,t.size,i),s){let e;switch(t.type){case"mat4":e="mat4x4f";break;case"float":e="f32";break;default:e=`${t.type}f`}this._uboDeclaration+=`uniform ${t.name}: ${e}${i>0?`[${i}]`:""};\n`}else this._uboDeclaration+=`${t.type} ${t.name}${i>0?`[${i}]`:""};\n`}this._uniformList.push(t.name)}i.vertex&&(this._vertexDeclaration+=i.vertex+"\n"),i.fragment&&(this._fragmentDeclaration+=i.fragment+"\n")}t.getSamplers(this._samplerList),t.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(e,t){if(t)for(const s in t)this._codeInjectionPoints[e]||(this._codeInjectionPoints[e]={}),this._codeInjectionPoints[e][s]=!0}_injectCustomCode(e,t){return(s,i)=>{t&&(i=t(s,i)),this._uboDeclaration&&(i=i.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(i=i.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(i=i.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const r=this._codeInjectionPoints?.[s];if(!r)return i;let h=null;for(let t in r){let r="";for(const i of this._activePlugins){let o=i.getCustomCode(s,this._material.shaderLanguage)?.[t];if(o){if(i.resolveIncludes){if(null===h){const t=0;h={defines:[],indexParameters:e.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:a.l.GetShadersRepository(t),includesShadersStore:a.l.GetIncludesShadersStore(t),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}h.isFragment="fragment"===s,(0,n.Iq)(o,h,(e=>o=e))}r+=o+"\n"}}if(r.length>0)if("!"===t.charAt(0)){t=t.substring(1);let e="g";if("!"===t.charAt(0))e="",t=t.substring(1);else{const s=o.exec(t);s&&s.length>=2&&(e=s[1],t=t.substring(e.length+1))}e.indexOf("g")<0&&(e+="g");const s=i,n=new RegExp(t,e);let a=n.exec(s);for(;null!==a;){let e=r;for(let t=0;t<a.length;++t)e=e.replace("$"+t,a[t]);i=i.replace(a[0],e),a=n.exec(s)}}else{const e="#define "+t;i=i.replace(e,"\n"+r+"\n"+e)}}return i}}}h._MaterialPluginClassToMainDefine={},h._MaterialPluginCounter=0,r.q.OnEnginesDisposedObservable.add((()=>{p()}));const l=[];let c=!1,u=null;function d(e,t){c||(u=i.i.OnEventObservable.add((e=>{for(const[,t]of l)t(e)}),1),c=!0);const s=l.filter((([t,s])=>t===e));s.length>0?s[0][1]=t:l.push([e,t])}function f(e){for(let t=0;t<l.length;++t)if(l[t][0]===e)return l.splice(t,1),0===l.length&&p(),!0;return!1}function p(){l.length=0,c=!1,i.i.OnEventObservable.remove(u),u=null}},89617:(e,t,s)=>{s.d(t,{F:()=>a});var i=s(93803),r=s(88836),n=s(88252);class a extends i.i{get subMaterials(){return this._subMaterials}set subMaterials(e){this._subMaterials=e,this._hookArray(e)}getChildren(){return this.subMaterials}constructor(e,t){super(e,t,!0),this._waitingSubMaterialsUniqueIds=[],this.getScene().addMultiMaterial(this),this.subMaterials=[],this._storeEffectOnSubMeshes=!0}_hookArray(e){const t=e.push;e.push=(...s)=>{const i=t.apply(e,s);return this._markAllSubMeshesAsTexturesDirty(),i};const s=e.splice;e.splice=(t,i)=>{const r=s.apply(e,[t,i]);return this._markAllSubMeshesAsTexturesDirty(),r}}getSubMaterial(e){return e<0||e>=this.subMaterials.length?this.getScene().defaultMaterial:this.subMaterials[e]}getActiveTextures(){return super.getActiveTextures().concat(...this.subMaterials.map((e=>e?e.getActiveTextures():[])))}hasTexture(e){if(super.hasTexture(e))return!0;for(let t=0;t<this.subMaterials.length;t++)if(this.subMaterials[t]?.hasTexture(e))return!0;return!1}getClassName(){return"MultiMaterial"}isReadyForSubMesh(e,t,s){for(let i=0;i<this.subMaterials.length;i++){const r=this.subMaterials[i];if(r){if(r._storeEffectOnSubMeshes){if(!r.isReadyForSubMesh(e,t,s))return!1;continue}if(!r.isReady(e))return!1}}return!0}clone(e,t){const s=new a(e,this.getScene());for(let i=0;i<this.subMaterials.length;i++){let r=null;const n=this.subMaterials[i];r=t&&n?n.clone(e+"-"+n.name):this.subMaterials[i],s.subMaterials.push(r)}return s}serialize(){const e={};e.name=this.name,e.id=this.id,e.uniqueId=this.uniqueId,r.Y&&(e.tags=r.Y.GetTags(this)),e.materialsUniqueIds=[],e.materials=[];for(let t=0;t<this.subMaterials.length;t++){const s=this.subMaterials[t];s?(e.materialsUniqueIds.push(s.uniqueId),e.materials.push(s.id)):(e.materialsUniqueIds.push(null),e.materials.push(null))}return e}dispose(e,t,s){const i=this.getScene();if(!i)return;if(s)for(let s=0;s<this.subMaterials.length;s++){const i=this.subMaterials[s];i&&i.dispose(e,t)}const r=i.multiMaterials.indexOf(this);r>=0&&i.multiMaterials.splice(r,1),super.dispose(e,t)}static ParseMultiMaterial(e,t){const s=new a(e.name,t);return s.id=e.id,s._loadedUniqueId=e.uniqueId,r.Y&&r.Y.AddTagsTo(s,e.tags),e.materialsUniqueIds?s._waitingSubMaterialsUniqueIds=e.materialsUniqueIds:e.materials.forEach((e=>s.subMaterials.push(t.getLastMaterialById(e)))),s}}(0,n.Y5)("BABYLON.MultiMaterial",a)},20943:(e,t,s)=>{s.d(t,{J:()=>i});class i{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(e){e.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(e){}bindForSubMesh(e,t,s,i,r){if(t.prePassRenderer&&t.prePassRenderer.enabled&&t.prePassRenderer.currentRTisSceneRT&&(-1!==t.prePassRenderer.getIndex(2)||-1!==t.prePassRenderer.getIndex(11))){this.previousWorldMatrices[s.uniqueId]||(this.previousWorldMatrices[s.uniqueId]=i.clone()),this.previousViewProjection||(this.previousViewProjection=t.getTransformMatrix().clone(),this.currentViewProjection=t.getTransformMatrix().clone());const r=t.getEngine();this.currentViewProjection.updateFlag!==t.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=r.frameId,this.previousViewProjection.copyFrom(this.currentViewProjection),this.currentViewProjection.copyFrom(t.getTransformMatrix())):this._lastUpdateFrameId!==r.frameId&&(this._lastUpdateFrameId=r.frameId,this.previousViewProjection.copyFrom(this.currentViewProjection)),e.setMatrix("previousWorld",this.previousWorldMatrices[s.uniqueId]),e.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[s.uniqueId]=i.clone()}}}},48248:(e,t,s)=>{s.d(t,{E:()=>n});var i=s(54983),r=s(93803);class n extends r.i{constructor(e,t,s=!0,r=!1){super(e,t,void 0,r),this._normalMatrix=new i.uq,this._storeEffectOnSubMeshes=s}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(e,t){return!!e&&(!this._storeEffectOnSubMeshes||!e.subMeshes||0===e.subMeshes.length||this.isReadyForSubMesh(e,e.subMeshes[0],t))}_isReadyForSubMesh(e){const t=e.materialDefines;return!(this.checkReadyOnEveryCall||!e.effect||!t||t._renderId!==this.getScene().getRenderId())}bindOnlyWorldMatrix(e){this._activeEffect.setMatrix("world",e)}bindOnlyNormalMatrix(e){this._activeEffect.setMatrix("normalMatrix",e)}bind(e,t){t&&this.bindForSubMesh(e,t,t.subMeshes[0])}_afterBind(e,t=null,s){super._afterBind(e,t,s),this.getScene()._cachedEffect=t,s?s._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(e,t,s,i=1){return s._drawWrapper._forceRebindOnNextCall||e.isCachedMaterialInvalid(this,t,i)}dispose(e,t,s){this._activeEffect=void 0,super.dispose(e,t,s)}}},27225:(e,t,s)=>{s.d(t,{B:()=>m});var i=s(16265),r=s(86521),n=s(54983),a=s(59396),o=s(23077),h=s(88252),l=s(39341),c=s(64769),u=s(17298),d=s(48248),f=s(69583),p=s(66384),_=s(64871);const g={effect:null,subMesh:null};class m extends d.E{constructor(e,t,s,i={},r=!0){super(e,t,r),this._textures={},this._textureArrays={},this._externalTextures={},this._floats={},this._ints={},this._uints={},this._floatsArrays={},this._colors3={},this._colors3Arrays={},this._colors4={},this._colors4Arrays={},this._vectors2={},this._vectors3={},this._vectors4={},this._quaternions={},this._quaternionsArrays={},this._matrices={},this._matrixArrays={},this._matrices3x3={},this._matrices2x2={},this._vectors2Arrays={},this._vectors3Arrays={},this._vectors4Arrays={},this._uniformBuffers={},this._textureSamplers={},this._storageBuffers={},this._cachedWorldViewMatrix=new n.uq,this._cachedWorldViewProjectionMatrix=new n.uq,this._multiview=!1,this._materialHelperNeedsPreviousMatrices=!1,this._shaderPath=s,this._options={needAlphaBlending:!1,needAlphaTesting:!1,attributes:["position","normal","uv"],uniforms:["worldViewProjection"],uniformBuffers:[],samplers:[],externalTextures:[],samplerObjects:[],storageBuffers:[],defines:[],useClipPlane:!1,...i}}get shaderPath(){return this._shaderPath}set shaderPath(e){this._shaderPath=e}get options(){return this._options}get isMultiview(){return this._multiview}getClassName(){return"ShaderMaterial"}needAlphaBlending(){return this.alpha<1||this._options.needAlphaBlending}needAlphaTesting(){return this._options.needAlphaTesting}_checkUniform(e){-1===this._options.uniforms.indexOf(e)&&this._options.uniforms.push(e)}setTexture(e,t){return-1===this._options.samplers.indexOf(e)&&this._options.samplers.push(e),this._textures[e]=t,this}removeTexture(e){delete this._textures[e]}setTextureArray(e,t){return-1===this._options.samplers.indexOf(e)&&this._options.samplers.push(e),this._checkUniform(e),this._textureArrays[e]=t,this}setExternalTexture(e,t){return-1===this._options.externalTextures.indexOf(e)&&this._options.externalTextures.push(e),this._externalTextures[e]=t,this}setFloat(e,t){return this._checkUniform(e),this._floats[e]=t,this}setInt(e,t){return this._checkUniform(e),this._ints[e]=t,this}setUInt(e,t){return this._checkUniform(e),this._uints[e]=t,this}setFloats(e,t){return this._checkUniform(e),this._floatsArrays[e]=t,this}setColor3(e,t){return this._checkUniform(e),this._colors3[e]=t,this}setColor3Array(e,t){return this._checkUniform(e),this._colors3Arrays[e]=t.reduce(((e,t)=>(t.toArray(e,e.length),e)),[]),this}setColor4(e,t){return this._checkUniform(e),this._colors4[e]=t,this}setColor4Array(e,t){return this._checkUniform(e),this._colors4Arrays[e]=t.reduce(((e,t)=>(t.toArray(e,e.length),e)),[]),this}setVector2(e,t){return this._checkUniform(e),this._vectors2[e]=t,this}setVector3(e,t){return this._checkUniform(e),this._vectors3[e]=t,this}setVector4(e,t){return this._checkUniform(e),this._vectors4[e]=t,this}setQuaternion(e,t){return this._checkUniform(e),this._quaternions[e]=t,this}setQuaternionArray(e,t){return this._checkUniform(e),this._quaternionsArrays[e]=t.reduce(((e,t)=>(t.toArray(e,e.length),e)),[]),this}setMatrix(e,t){return this._checkUniform(e),this._matrices[e]=t,this}setMatrices(e,t){this._checkUniform(e);const s=new Float32Array(16*t.length);for(let e=0;e<t.length;e++)t[e].copyToArray(s,16*e);return this._matrixArrays[e]=s,this}setMatrix3x3(e,t){return this._checkUniform(e),this._matrices3x3[e]=t,this}setMatrix2x2(e,t){return this._checkUniform(e),this._matrices2x2[e]=t,this}setArray2(e,t){return this._checkUniform(e),this._vectors2Arrays[e]=t,this}setArray3(e,t){return this._checkUniform(e),this._vectors3Arrays[e]=t,this}setArray4(e,t){return this._checkUniform(e),this._vectors4Arrays[e]=t,this}setUniformBuffer(e,t){return-1===this._options.uniformBuffers.indexOf(e)&&this._options.uniformBuffers.push(e),this._uniformBuffers[e]=t,this}setTextureSampler(e,t){return-1===this._options.samplerObjects.indexOf(e)&&this._options.samplerObjects.push(e),this._textureSamplers[e]=t,this}setStorageBuffer(e,t){return-1===this._options.storageBuffers.indexOf(e)&&this._options.storageBuffers.push(e),this._storageBuffers[e]=t,this}setDefine(e,t){const s=e.trimEnd()+" ",i=this.options.defines.findIndex((t=>t===e||t.startsWith(s)));return i>=0&&this.options.defines.splice(i,1),("boolean"!=typeof t||t)&&this.options.defines.push(s+t),this}isReadyForSubMesh(e,t,s){return this.isReady(e,s,t)}isReady(e,t,s){const i=s&&this._storeEffectOnSubMeshes;if(this.isFrozen){const e=i?s._drawWrapper:this._drawWrapper;if(e.effect&&e._wasPreviouslyReady&&e._wasPreviouslyUsingInstances===t)return!0}const n=this.getScene(),o=n.getEngine(),h=[],l=[],u=new c.J;let d=this._shaderPath,f=this._options.uniforms,m=this._options.uniformBuffers,y=this._options.samplers;o.getCaps().multiview&&n.activeCamera&&n.activeCamera.outputRenderTarget&&n.activeCamera.outputRenderTarget.getViewCount()>1&&(this._multiview=!0,h.push("#define MULTIVIEW"),-1!==f.indexOf("viewProjection")&&-1===f.indexOf("viewProjectionR")&&f.push("viewProjectionR"));for(let e=0;e<this._options.defines.length;e++){const t=0===this._options.defines[e].indexOf("#define")?this._options.defines[e]:`#define ${this._options.defines[e]}`;h.push(t)}for(let e=0;e<this._options.attributes.length;e++)l.push(this._options.attributes[e]);if(e&&e.isVerticesDataPresent(a.R.ColorKind)&&(-1===l.indexOf(a.R.ColorKind)&&l.push(a.R.ColorKind),h.push("#define VERTEXCOLOR")),t&&(h.push("#define INSTANCES"),(0,_.te)(l,this._materialHelperNeedsPreviousMatrices),e?.hasThinInstances&&(h.push("#define THIN_INSTANCES"),e&&e.isVerticesDataPresent(a.R.ColorInstanceKind)&&(l.push(a.R.ColorInstanceKind),h.push("#define INSTANCESCOLOR")))),e&&e.useBones&&e.computeBonesUsingShaders&&e.skeleton){l.push(a.R.MatricesIndicesKind),l.push(a.R.MatricesWeightsKind),e.numBoneInfluencers>4&&(l.push(a.R.MatricesIndicesExtraKind),l.push(a.R.MatricesWeightsExtraKind));const t=e.skeleton;h.push("#define NUM_BONE_INFLUENCERS "+e.numBoneInfluencers),u.addCPUSkinningFallback(0,e),t.isUsingTextureForMatrices?(h.push("#define BONETEXTURE"),-1===f.indexOf("boneTextureWidth")&&f.push("boneTextureWidth"),-1===this._options.samplers.indexOf("boneSampler")&&this._options.samplers.push("boneSampler")):(h.push("#define BonesPerMesh "+(t.bones.length+1)),-1===f.indexOf("mBones")&&f.push("mBones"))}else h.push("#define NUM_BONE_INFLUENCERS 0");let x=0;const A=e?e.morphTargetManager:null;if(A){const e=A.supportsUVs&&-1!==h.indexOf("#define UV1"),t=A.supportsTangents&&-1!==h.indexOf("#define TANGENT"),s=A.supportsNormals&&-1!==h.indexOf("#define NORMAL");x=A.numMaxInfluencers||A.numInfluencers,e&&h.push("#define MORPHTARGETS_UV"),t&&h.push("#define MORPHTARGETS_TANGENT"),s&&h.push("#define MORPHTARGETS_NORMAL"),x>0&&h.push("#define MORPHTARGETS"),A.isUsingTextureForTargets&&(h.push("#define MORPHTARGETS_TEXTURE"),-1===f.indexOf("morphTargetTextureIndices")&&f.push("morphTargetTextureIndices"),-1===this._options.samplers.indexOf("morphTargets")&&this._options.samplers.push("morphTargets")),h.push("#define NUM_MORPH_INFLUENCERS "+x);for(let i=0;i<x;i++)l.push(a.R.PositionKind+i),s&&l.push(a.R.NormalKind+i),t&&l.push(a.R.TangentKind+i),e&&l.push(a.R.UVKind+"_"+i);x>0&&(f=f.slice(),f.push("morphTargetInfluences"),f.push("morphTargetCount"),f.push("morphTargetTextureInfo"),f.push("morphTargetTextureIndices"))}else h.push("#define NUM_MORPH_INFLUENCERS 0");if(e){const t=e.bakedVertexAnimationManager;t&&t.isEnabled&&(h.push("#define BAKED_VERTEX_ANIMATION_TEXTURE"),-1===f.indexOf("bakedVertexAnimationSettings")&&f.push("bakedVertexAnimationSettings"),-1===f.indexOf("bakedVertexAnimationTextureSizeInverted")&&f.push("bakedVertexAnimationTextureSizeInverted"),-1===f.indexOf("bakedVertexAnimationTime")&&f.push("bakedVertexAnimationTime"),-1===this._options.samplers.indexOf("bakedVertexAnimationTexture")&&this._options.samplers.push("bakedVertexAnimationTexture")),(0,_.J2)(l,e,h)}for(const e in this._textures)if(!this._textures[e].isReady())return!1;e&&this._shouldTurnAlphaTestOn(e)&&h.push("#define ALPHATEST"),!1!==this._options.useClipPlane&&((0,p.TV)(f),(0,p.tv)(this,n,h)),n.fogEnabled&&e?.applyFog&&n.fogMode!==r.Z.FOGMODE_NONE&&(h.push("#define FOG"),-1===f.indexOf("view")&&f.push("view"),-1===f.indexOf("vFogInfos")&&f.push("vFogInfos"),-1===f.indexOf("vFogColor")&&f.push("vFogColor")),this._useLogarithmicDepth&&(h.push("#define LOGARITHMICDEPTH"),-1===f.indexOf("logarithmicDepthConstant")&&f.push("logarithmicDepthConstant")),this.customShaderNameResolve&&(f=f.slice(),m=m.slice(),y=y.slice(),d=this.customShaderNameResolve(this.name,f,m,y,h,l));const b=i?s._getDrawWrapper(void 0,!0):this._drawWrapper,I=b?.effect??null,P=b?.defines??null,T=h.join("\n");let E=I;return P!==T&&(E=o.createEffect(d,{attributes:l,uniformsNames:f,uniformBuffersNames:m,samplers:y,defines:T,fallbacks:u,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousMorphTargets:x},shaderLanguage:this._options.shaderLanguage,extraInitializationsAsync:this._options.extraInitializationsAsync},o),i?s.setEffect(E,T,this._materialContext):b&&b.setEffect(E,T),this._onEffectCreatedObservable&&(g.effect=E,g.subMesh=s??e?.subMeshes[0]??null,this._onEffectCreatedObservable.notifyObservers(g))),b._wasPreviouslyUsingInstances=!!t,!(!E?.isReady()??1)&&(I!==E&&n.resetCachedMaterial(),b._wasPreviouslyReady=!0,!0)}bindOnlyWorldMatrix(e,t){const s=this.getScene(),i=t??this.getEffect();i&&(-1!==this._options.uniforms.indexOf("world")&&i.setMatrix("world",e),-1!==this._options.uniforms.indexOf("worldView")&&(e.multiplyToRef(s.getViewMatrix(),this._cachedWorldViewMatrix),i.setMatrix("worldView",this._cachedWorldViewMatrix)),-1!==this._options.uniforms.indexOf("worldViewProjection")&&(e.multiplyToRef(s.getTransformMatrix(),this._cachedWorldViewProjectionMatrix),i.setMatrix("worldViewProjection",this._cachedWorldViewProjectionMatrix)),-1!==this._options.uniforms.indexOf("view")&&i.setMatrix("view",s.getViewMatrix()))}bindForSubMesh(e,t,s){this.bind(e,t,s._drawWrapperOverride?.effect,s)}bind(e,t,s,i){const r=i&&this._storeEffectOnSubMeshes,n=s??(r?i.effect:this.getEffect());if(!n)return;const a=this.getScene();this._activeEffect=n,this.bindOnlyWorldMatrix(e,s);const o=this._options.uniformBuffers;let h=!1;if(n&&o&&o.length>0&&a.getEngine().supportsUniformBuffers)for(let s=0;s<o.length;++s)switch(o[s]){case"Mesh":t&&(t.getMeshUniformBuffer().bindToEffect(n,"Mesh"),t.transferToEffect(e));break;case"Scene":(0,_._8)(n,a.getSceneUniformBuffer()),a.finalizeSceneUbo(),h=!0}const l=t&&r?this._mustRebind(a,n,i,t.visibility):a.getCachedMaterial()!==this;if(n&&l){let e;for(e in h||-1===this._options.uniforms.indexOf("view")||n.setMatrix("view",a.getViewMatrix()),h||-1===this._options.uniforms.indexOf("projection")||n.setMatrix("projection",a.getProjectionMatrix()),h||-1===this._options.uniforms.indexOf("viewProjection")||(n.setMatrix("viewProjection",a.getTransformMatrix()),this._multiview&&n.setMatrix("viewProjectionR",a._transformMatrixR)),a.activeCamera&&-1!==this._options.uniforms.indexOf("cameraPosition")&&n.setVector3("cameraPosition",a.activeCamera.globalPosition),(0,_.f$)(t,n),(0,p.gS)(n,this,a),this._useLogarithmicDepth&&(0,_.DL)(r?i.materialDefines:n.defines,n,a),t&&(0,_.Yy)(a,t,n),this._textures)n.setTexture(e,this._textures[e]);for(e in this._textureArrays)n.setTextureArray(e,this._textureArrays[e]);for(e in this._ints)n.setInt(e,this._ints[e]);for(e in this._uints)n.setUInt(e,this._uints[e]);for(e in this._floats)n.setFloat(e,this._floats[e]);for(e in this._floatsArrays)n.setArray(e,this._floatsArrays[e]);for(e in this._colors3)n.setColor3(e,this._colors3[e]);for(e in this._colors3Arrays)n.setArray3(e,this._colors3Arrays[e]);for(e in this._colors4){const t=this._colors4[e];n.setFloat4(e,t.r,t.g,t.b,t.a)}for(e in this._colors4Arrays)n.setArray4(e,this._colors4Arrays[e]);for(e in this._vectors2)n.setVector2(e,this._vectors2[e]);for(e in this._vectors3)n.setVector3(e,this._vectors3[e]);for(e in this._vectors4)n.setVector4(e,this._vectors4[e]);for(e in this._quaternions)n.setQuaternion(e,this._quaternions[e]);for(e in this._matrices)n.setMatrix(e,this._matrices[e]);for(e in this._matrixArrays)n.setMatrices(e,this._matrixArrays[e]);for(e in this._matrices3x3)n.setMatrix3x3(e,this._matrices3x3[e]);for(e in this._matrices2x2)n.setMatrix2x2(e,this._matrices2x2[e]);for(e in this._vectors2Arrays)n.setArray2(e,this._vectors2Arrays[e]);for(e in this._vectors3Arrays)n.setArray3(e,this._vectors3Arrays[e]);for(e in this._vectors4Arrays)n.setArray4(e,this._vectors4Arrays[e]);for(e in this._quaternionsArrays)n.setArray4(e,this._quaternionsArrays[e]);for(e in this._uniformBuffers){const t=this._uniformBuffers[e].getBuffer();t&&n.bindUniformBuffer(t,e)}const s=a.getEngine(),o=s.setExternalTexture;if(o)for(e in this._externalTextures)o.call(s,e,this._externalTextures[e]);const l=s.setTextureSampler;if(l)for(e in this._textureSamplers)l.call(s,e,this._textureSamplers[e]);const c=s.setStorageBuffer;if(c)for(e in this._storageBuffers)c.call(s,e,this._storageBuffers[e])}if(n&&t&&(l||!this.isFrozen)){const e=t.morphTargetManager;e&&e.numInfluencers>0&&(0,_.nR)(t,n);const s=t.bakedVertexAnimationManager;if(s&&s.isEnabled){const e=r?i._drawWrapper:this._drawWrapper;t.bakedVertexAnimationManager?.bind(n,!!e._wasPreviouslyUsingInstances)}}this._afterBind(t,n,i)}getActiveTextures(){const e=super.getActiveTextures();for(const t in this._textures)e.push(this._textures[t]);for(const t in this._textureArrays){const s=this._textureArrays[t];for(let t=0;t<s.length;t++)e.push(s[t])}return e}hasTexture(e){if(super.hasTexture(e))return!0;for(const t in this._textures)if(this._textures[t]===e)return!0;for(const t in this._textureArrays){const s=this._textureArrays[t];for(let t=0;t<s.length;t++)if(s[t]===e)return!0}return!1}clone(e){const t=i.p.Clone((()=>new m(e,this.getScene(),this._shaderPath,this._options,this._storeEffectOnSubMeshes)),this);t.name=e,t.id=e,"object"==typeof t._shaderPath&&(t._shaderPath={...t._shaderPath}),this._options={...this._options},Object.keys(this._options).forEach((e=>{const t=this._options[e];Array.isArray(t)&&(this._options[e]=t.slice(0))})),this.stencil.copyTo(t.stencil);for(const e in this._textures)t.setTexture(e,this._textures[e]);for(const e in this._textureArrays)t.setTextureArray(e,this._textureArrays[e]);for(const e in this._externalTextures)t.setExternalTexture(e,this._externalTextures[e]);for(const e in this._ints)t.setInt(e,this._ints[e]);for(const e in this._uints)t.setUInt(e,this._uints[e]);for(const e in this._floats)t.setFloat(e,this._floats[e]);for(const e in this._floatsArrays)t.setFloats(e,this._floatsArrays[e]);for(const e in this._colors3)t.setColor3(e,this._colors3[e]);for(const e in this._colors3Arrays)t._colors3Arrays[e]=this._colors3Arrays[e];for(const e in this._colors4)t.setColor4(e,this._colors4[e]);for(const e in this._colors4Arrays)t._colors4Arrays[e]=this._colors4Arrays[e];for(const e in this._vectors2)t.setVector2(e,this._vectors2[e]);for(const e in this._vectors3)t.setVector3(e,this._vectors3[e]);for(const e in this._vectors4)t.setVector4(e,this._vectors4[e]);for(const e in this._quaternions)t.setQuaternion(e,this._quaternions[e]);for(const e in this._quaternionsArrays)t._quaternionsArrays[e]=this._quaternionsArrays[e];for(const e in this._matrices)t.setMatrix(e,this._matrices[e]);for(const e in this._matrixArrays)t._matrixArrays[e]=this._matrixArrays[e].slice();for(const e in this._matrices3x3)t.setMatrix3x3(e,this._matrices3x3[e]);for(const e in this._matrices2x2)t.setMatrix2x2(e,this._matrices2x2[e]);for(const e in this._vectors2Arrays)t.setArray2(e,this._vectors2Arrays[e]);for(const e in this._vectors3Arrays)t.setArray3(e,this._vectors3Arrays[e]);for(const e in this._vectors4Arrays)t.setArray4(e,this._vectors4Arrays[e]);for(const e in this._uniformBuffers)t.setUniformBuffer(e,this._uniformBuffers[e]);for(const e in this._textureSamplers)t.setTextureSampler(e,this._textureSamplers[e]);for(const e in this._storageBuffers)t.setStorageBuffer(e,this._storageBuffers[e]);return t}dispose(e,t,s){if(t){let e;for(e in this._textures)this._textures[e].dispose();for(e in this._textureArrays){const t=this._textureArrays[e];for(let e=0;e<t.length;e++)t[e].dispose()}}this._textures={},super.dispose(e,t,s)}serialize(){const e=i.p.Serialize(this);let t;for(t in e.customType="BABYLON.ShaderMaterial",e.uniqueId=this.uniqueId,e.options=this._options,e.shaderPath=this._shaderPath,e.storeEffectOnSubMeshes=this._storeEffectOnSubMeshes,e.stencil=this.stencil.serialize(),e.textures={},this._textures)e.textures[t]=this._textures[t].serialize();for(t in e.textureArrays={},this._textureArrays){e.textureArrays[t]=[];const s=this._textureArrays[t];for(let i=0;i<s.length;i++)e.textureArrays[t].push(s[i].serialize())}for(t in e.ints={},this._ints)e.ints[t]=this._ints[t];for(t in e.uints={},this._uints)e.uints[t]=this._uints[t];for(t in e.floats={},this._floats)e.floats[t]=this._floats[t];for(t in e.floatsArrays={},this._floatsArrays)e.floatsArrays[t]=this._floatsArrays[t];for(t in e.colors3={},this._colors3)e.colors3[t]=this._colors3[t].asArray();for(t in e.colors3Arrays={},this._colors3Arrays)e.colors3Arrays[t]=this._colors3Arrays[t];for(t in e.colors4={},this._colors4)e.colors4[t]=this._colors4[t].asArray();for(t in e.colors4Arrays={},this._colors4Arrays)e.colors4Arrays[t]=this._colors4Arrays[t];for(t in e.vectors2={},this._vectors2)e.vectors2[t]=this._vectors2[t].asArray();for(t in e.vectors3={},this._vectors3)e.vectors3[t]=this._vectors3[t].asArray();for(t in e.vectors4={},this._vectors4)e.vectors4[t]=this._vectors4[t].asArray();for(t in e.quaternions={},this._quaternions)e.quaternions[t]=this._quaternions[t].asArray();for(t in e.matrices={},this._matrices)e.matrices[t]=this._matrices[t].asArray();for(t in e.matrixArray={},this._matrixArrays)e.matrixArray[t]=this._matrixArrays[t];for(t in e.matrices3x3={},this._matrices3x3)e.matrices3x3[t]=this._matrices3x3[t];for(t in e.matrices2x2={},this._matrices2x2)e.matrices2x2[t]=this._matrices2x2[t];for(t in e.vectors2Arrays={},this._vectors2Arrays)e.vectors2Arrays[t]=this._vectors2Arrays[t];for(t in e.vectors3Arrays={},this._vectors3Arrays)e.vectors3Arrays[t]=this._vectors3Arrays[t];for(t in e.vectors4Arrays={},this._vectors4Arrays)e.vectors4Arrays[t]=this._vectors4Arrays[t];for(t in e.quaternionsArrays={},this._quaternionsArrays)e.quaternionsArrays[t]=this._quaternionsArrays[t];return e}static Parse(e,t,s){const r=i.p.Parse((()=>new m(e.name,t,e.shaderPath,e.options,e.storeEffectOnSubMeshes)),e,t,s);let a;for(a in e.stencil&&r.stencil.parse(e.stencil,t,s),e.textures)r.setTexture(a,o.g.Parse(e.textures[a],t,s));for(a in e.textureArrays){const i=e.textureArrays[a],n=[];for(let e=0;e<i.length;e++)n.push(o.g.Parse(i[e],t,s));r.setTextureArray(a,n)}for(a in e.ints)r.setInt(a,e.ints[a]);for(a in e.uints)r.setUInt(a,e.uints[a]);for(a in e.floats)r.setFloat(a,e.floats[a]);for(a in e.floatsArrays)r.setFloats(a,e.floatsArrays[a]);for(a in e.colors3)r.setColor3(a,l.v9.FromArray(e.colors3[a]));for(a in e.colors3Arrays){const t=e.colors3Arrays[a].reduce(((e,t,s)=>(s%3==0?e.push([t]):e[e.length-1].push(t),e)),[]).map((e=>l.v9.FromArray(e)));r.setColor3Array(a,t)}for(a in e.colors4)r.setColor4(a,l.ov.FromArray(e.colors4[a]));for(a in e.colors4Arrays){const t=e.colors4Arrays[a].reduce(((e,t,s)=>(s%4==0?e.push([t]):e[e.length-1].push(t),e)),[]).map((e=>l.ov.FromArray(e)));r.setColor4Array(a,t)}for(a in e.vectors2)r.setVector2(a,n.I9.FromArray(e.vectors2[a]));for(a in e.vectors3)r.setVector3(a,n.Pq.FromArray(e.vectors3[a]));for(a in e.vectors4)r.setVector4(a,n.IU.FromArray(e.vectors4[a]));for(a in e.quaternions)r.setQuaternion(a,n.PT.FromArray(e.quaternions[a]));for(a in e.matrices)r.setMatrix(a,n.uq.FromArray(e.matrices[a]));for(a in e.matrixArray)r._matrixArrays[a]=new Float32Array(e.matrixArray[a]);for(a in e.matrices3x3)r.setMatrix3x3(a,e.matrices3x3[a]);for(a in e.matrices2x2)r.setMatrix2x2(a,e.matrices2x2[a]);for(a in e.vectors2Arrays)r.setArray2(a,e.vectors2Arrays[a]);for(a in e.vectors3Arrays)r.setArray3(a,e.vectors3Arrays[a]);for(a in e.vectors4Arrays)r.setArray4(a,e.vectors4Arrays[a]);for(a in e.quaternionsArrays)r.setArray4(a,e.quaternionsArrays[a]);return r}static ParseFromFileAsync(e,t,s,i=""){return new Promise(((r,n)=>{const a=new u.u;a.addEventListener("readystatechange",(()=>{if(4==a.readyState)if(200==a.status){const t=JSON.parse(a.responseText),n=this.Parse(t,s||f.q.LastCreatedScene,i);e&&(n.name=e),r(n)}else n("Unable to load the ShaderMaterial")})),a.open("GET",t),a.send()}))}static ParseFromSnippetAsync(e,t,s=""){return new Promise(((i,r)=>{const n=new u.u;n.addEventListener("readystatechange",(()=>{if(4==n.readyState)if(200==n.status){const r=JSON.parse(JSON.parse(n.responseText).jsonPayload),a=JSON.parse(r.shaderMaterial),o=this.Parse(a,t||f.q.LastCreatedScene,s);o.snippetId=e,i(o)}else r("Unable to load the snippet "+e)})),n.open("GET",this.SnippetUrl+"/"+e.replace(/#/g,"/")),n.send()}))}}m.SnippetUrl="https://snippet.babylonjs.com",m.CreateFromSnippetAsync=m.ParseFromSnippetAsync,(0,h.Y5)("BABYLON.ShaderMaterial",m)},78065:(e,t,s)=>{s.d(t,{F:()=>M,f:()=>E});var i=s(90576),r=s(96631),n=s(94975),a=s(86521),o=s(54983),h=s(39341),l=s(59396),c=s(20943),u=s(53005),d=s(93803),f=s(40890),p=s(48248),_=s(23077),g=s(88252),m=s(4365),y=s(64769),x=s(15949),A=s(66384),b=s(64871),I=s(16265),P=s(79130);const T={effect:null,subMesh:null};class E extends f.M{constructor(e){super(e),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(e){const t=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const s of t)this[s]=s===e}}class M extends p.E{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(e){this._attachImageProcessingConfiguration(e),this._markAllSubMeshesAsTexturesDirty()}_attachImageProcessingConfiguration(e){e!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=e||this.getScene().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(e){this.imageProcessingConfiguration.colorCurvesEnabled=e}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(e){this.imageProcessingConfiguration.colorGradingEnabled=e}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(e){this._imageProcessingConfiguration.toneMappingEnabled=e}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(e){this._imageProcessingConfiguration.exposure=e}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(e){this._imageProcessingConfiguration.contrast=e}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(e){this._imageProcessingConfiguration.colorGradingTexture=e}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(e){this._imageProcessingConfiguration.colorCurves=e}get canRenderToMRT(){return!0}constructor(e,t,s=!1){super(e,t,void 0,s||M.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new h.v9(0,0,0),this.diffuseColor=new h.v9(1,1,1),this.specularColor=new h.v9(1,1,1),this.emissiveColor=new h.v9(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new n.L(16),this._worldViewProjectionMatrix=o.uq.Zero(),this._globalAmbientColor=new h.v9(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new x.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new c.J,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),M.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),M.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(M.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||!!(M.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures}getClassName(){return"StandardMaterial"}needAlphaBlending(){return!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return!!this._forceAlphaTest||this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===d.i.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.hasAlpha&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==d.i.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.hasAlpha||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(e,t,i=!1){this._uniformBufferLayoutBuilt||this.buildUniformLayout();const r=t._drawWrapper;if(r.effect&&this.isFrozen&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),t.materialDefines=new E(this._eventInfo.defineNames));const n=this.getScene(),a=t.materialDefines;if(this._isReadyForSubMesh(t))return!0;const o=n.getEngine();a._needNormals=(0,b.az)(n,e,a,!0,this._maxSimultaneousLights,this._disableLighting),(0,b.VO)(n,a);const h=this.needAlphaBlendingForMesh(e)&&this.getScene().useOrderIndependentTransparency;if((0,b.N4)(n,a,this.canRenderToMRT&&!h),(0,b.Nc)(n,a,h),P.m.PrepareDefines(o.currentRenderPassId,e,a),a._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,a._needUVs=!1;for(let e=1;e<=6;++e)a["MAINUV"+e]=!1;if(n.texturesEnabled){if(a.DIFFUSEDIRECTUV=0,a.BUMPDIRECTUV=0,a.AMBIENTDIRECTUV=0,a.OPACITYDIRECTUV=0,a.EMISSIVEDIRECTUV=0,a.SPECULARDIRECTUV=0,a.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&M.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,b.YT)(this._diffuseTexture,a,"DIFFUSE")}else a.DIFFUSE=!1;if(this._ambientTexture&&M.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,b.YT)(this._ambientTexture,a,"AMBIENT")}else a.AMBIENT=!1;if(this._opacityTexture&&M.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,b.YT)(this._opacityTexture,a,"OPACITY"),a.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else a.OPACITY=!1;if(this._reflectionTexture&&M.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(a._needNormals=!0,a.REFLECTION=!0,a.ROUGHNESS=this._roughness>0,a.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,a.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===_.g.INVCUBIC_MODE,a.REFLECTIONMAP_3D=this._reflectionTexture.isCube,a.REFLECTIONMAP_OPPOSITEZ=a.REFLECTIONMAP_3D&&this.getScene().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,a.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case _.g.EXPLICIT_MODE:a.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case _.g.PLANAR_MODE:a.setReflectionMode("REFLECTIONMAP_PLANAR");break;case _.g.PROJECTION_MODE:a.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case _.g.SKYBOX_MODE:a.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case _.g.SPHERICAL_MODE:a.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case _.g.EQUIRECTANGULAR_MODE:a.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case _.g.FIXED_EQUIRECTANGULAR_MODE:a.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case _.g.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:a.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case _.g.CUBIC_MODE:case _.g.INVCUBIC_MODE:default:a.setReflectionMode("REFLECTIONMAP_CUBIC")}a.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else a.REFLECTION=!1,a.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&M.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,b.YT)(this._emissiveTexture,a,"EMISSIVE")}else a.EMISSIVE=!1;if(this._lightmapTexture&&M.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,b.YT)(this._lightmapTexture,a,"LIGHTMAP"),a.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,a.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else a.LIGHTMAP=!1;if(this._specularTexture&&M.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,b.YT)(this._specularTexture,a,"SPECULAR"),a.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else a.SPECULAR=!1;if(n.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&M.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,b.YT)(this._bumpTexture,a,"BUMP"),a.PARALLAX=this._useParallax,a.PARALLAX_RHS=n.useRightHandedSystem,a.PARALLAXOCCLUSION=this._useParallaxOcclusion,a.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else a.BUMP=!1,a.PARALLAX=!1,a.PARALLAX_RHS=!1,a.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&M.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;a._needUVs=!0,a.REFRACTION=!0,a.REFRACTIONMAP_3D=this._refractionTexture.isCube,a.RGBDREFRACTION=this._refractionTexture.isRGBD,a.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else a.REFRACTION=!1;a.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else a.DIFFUSE=!1,a.AMBIENT=!1,a.OPACITY=!1,a.REFLECTION=!1,a.EMISSIVE=!1,a.LIGHTMAP=!1,a.BUMP=!1,a.REFRACTION=!1;a.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),a.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,a.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,a.SPECULAROVERALPHA=this._useSpecularOverAlpha,a.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,a.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,a.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(e)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=a,this._eventInfo.subMesh=t,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(a._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(a),a.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,a.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}a._areFresnelDirty&&(M.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(a.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,a.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,a.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,a.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,a.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,a.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,a._needNormals=!0,a.FRESNEL=!0):a.FRESNEL=!1),(0,b.fm)(e,n,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e)||this._forceAlphaTest,a,this._applyDecalMapAfterDetailMap),(0,b.OR)(n,o,this,a,i,null,t.getRenderingMesh().hasThinInstances),this._eventInfo.defines=a,this._eventInfo.mesh=e,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,b.qB)(e,a,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let d=!1;if(a.isDirty){const i=a._areLightsDisposed;a.markAsProcessed();const r=new y.J;a.REFLECTION&&r.addFallback(0,"REFLECTION"),a.SPECULAR&&r.addFallback(0,"SPECULAR"),a.BUMP&&r.addFallback(0,"BUMP"),a.PARALLAX&&r.addFallback(1,"PARALLAX"),a.PARALLAX_RHS&&r.addFallback(1,"PARALLAX_RHS"),a.PARALLAXOCCLUSION&&r.addFallback(0,"PARALLAXOCCLUSION"),a.SPECULAROVERALPHA&&r.addFallback(0,"SPECULAROVERALPHA"),a.FOG&&r.addFallback(1,"FOG"),a.POINTSIZE&&r.addFallback(0,"POINTSIZE"),a.LOGARITHMICDEPTH&&r.addFallback(0,"LOGARITHMICDEPTH"),(0,b.c4)(a,r,this._maxSimultaneousLights),a.SPECULARTERM&&r.addFallback(0,"SPECULARTERM"),a.DIFFUSEFRESNEL&&r.addFallback(1,"DIFFUSEFRESNEL"),a.OPACITYFRESNEL&&r.addFallback(2,"OPACITYFRESNEL"),a.REFLECTIONFRESNEL&&r.addFallback(3,"REFLECTIONFRESNEL"),a.EMISSIVEFRESNEL&&r.addFallback(4,"EMISSIVEFRESNEL"),a.FRESNEL&&r.addFallback(4,"FRESNEL"),a.MULTIVIEW&&r.addFallback(0,"MULTIVIEW");const h=[l.R.PositionKind];a.NORMAL&&h.push(l.R.NormalKind),a.TANGENT&&h.push(l.R.TangentKind);for(let e=1;e<=6;++e)a["UV"+e]&&h.push(`uv${1===e?"":e}`);a.VERTEXCOLOR&&h.push(l.R.ColorKind),(0,b.ni)(h,e,a,r),(0,b.ER)(h,a),(0,b.IF)(h,e,a),(0,b.J2)(h,e,a);let f="default";const p=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices"],_=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler"],g=["Material","Scene","Mesh"],m={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:a.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=r,this._eventInfo.fallbackRank=0,this._eventInfo.defines=a,this._eventInfo.uniforms=p,this._eventInfo.attributes=h,this._eventInfo.samplers=_,this._eventInfo.uniformBuffersNames=g,this._eventInfo.customCode=void 0,this._eventInfo.mesh=e,this._eventInfo.indexParameters=m,this._callbackPluginEventGeneric(128,this._eventInfo),P.m.AddUniformsAndSamplers(p,_),c.J.AddUniforms(p),c.J.AddSamplers(_),u.p&&(u.p.PrepareUniforms(p,a),u.p.PrepareSamplers(_,a)),(0,b.Bb)({uniformsNames:p,uniformBuffersNames:g,samplers:_,defines:a,maxSimultaneousLights:this._maxSimultaneousLights}),(0,A.TV)(p);const x={};this.customShaderNameResolve&&(f=this.customShaderNameResolve(f,p,g,_,a,h,x));const I=a.toString(),E=t.effect;let M=n.getEngine().createEffect(f,{attributes:h,uniformsNames:p,uniformBuffersNames:g,samplers:_,defines:I,fallbacks:r,onCompiled:this.onCompiled,onError:this.onError,indexParameters:m,processFinalCode:x.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:a.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([s.e(842),s.e(503)]).then(s.bind(s,37842)),s.e(627).then(s.bind(s,48627))]):await Promise.all([Promise.all([s.e(500),s.e(388)]).then(s.bind(s,17119)),s.e(429).then(s.bind(s,94429))]),this._shadersLoaded=!0}},o);if(this._eventInfo.customCode=void 0,M)if(this._onEffectCreatedObservable&&(T.effect=M,T.subMesh=t,this._onEffectCreatedObservable.notifyObservers(T)),this.allowShaderHotSwapping&&E&&!M.isReady()){if(M=E,a.markAsUnprocessed(),d=this.isFrozen,i)return a._areLightsDisposed=!0,!1}else n.resetCachedMaterial(),t.setEffect(M,a,this._materialContext)}return!(!t.effect||!t.effect.isReady()||(a._renderId=n.getRenderId(),r._wasPreviouslyReady=!d,r._wasPreviouslyUsingInstances=i,this._checkScenePerformancePriority(),0))}buildUniformLayout(){const e=this._uniformBuffer;e.addUniform("diffuseLeftColor",4),e.addUniform("diffuseRightColor",4),e.addUniform("opacityParts",4),e.addUniform("reflectionLeftColor",4),e.addUniform("reflectionRightColor",4),e.addUniform("refractionLeftColor",4),e.addUniform("refractionRightColor",4),e.addUniform("emissiveLeftColor",4),e.addUniform("emissiveRightColor",4),e.addUniform("vDiffuseInfos",2),e.addUniform("vAmbientInfos",2),e.addUniform("vOpacityInfos",2),e.addUniform("vReflectionInfos",2),e.addUniform("vReflectionPosition",3),e.addUniform("vReflectionSize",3),e.addUniform("vEmissiveInfos",2),e.addUniform("vLightmapInfos",2),e.addUniform("vSpecularInfos",2),e.addUniform("vBumpInfos",3),e.addUniform("diffuseMatrix",16),e.addUniform("ambientMatrix",16),e.addUniform("opacityMatrix",16),e.addUniform("reflectionMatrix",16),e.addUniform("emissiveMatrix",16),e.addUniform("lightmapMatrix",16),e.addUniform("specularMatrix",16),e.addUniform("bumpMatrix",16),e.addUniform("vTangentSpaceParams",2),e.addUniform("pointSize",1),e.addUniform("alphaCutOff",1),e.addUniform("refractionMatrix",16),e.addUniform("vRefractionInfos",4),e.addUniform("vRefractionPosition",3),e.addUniform("vRefractionSize",3),e.addUniform("vSpecularColor",4),e.addUniform("vEmissiveColor",3),e.addUniform("vDiffuseColor",4),e.addUniform("vAmbientColor",3),super.buildUniformLayout()}bindForSubMesh(e,t,s){const i=this.getScene(),r=s.materialDefines;if(!r)return;const n=s.effect;if(!n)return;this._activeEffect=n,t.getMeshUniformBuffer().bindToEffect(n,"Mesh"),t.transferToEffect(e),this._uniformBuffer.bindToEffect(n,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,i,t,e,this.isFrozen),P.m.Bind(i.getEngine().currentRenderPassId,this._activeEffect,t,e),this._eventInfo.subMesh=s,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),r.OBJECTSPACE_NORMALMAP&&(e.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const o=this._mustRebind(i,n,s,t.visibility);(0,b.f$)(t,n);const l=this._uniformBuffer;if(o){if(this.bindViewProjection(n),!l.useUbo||!this.isFrozen||!l.isSync||s._drawWrapper._forceRebindOnNextCall){if(M.FresnelEnabled&&r.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(l.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),l.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&l.updateColor4("opacityParts",new h.v9(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(l.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),l.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(l.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),l.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(l.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),l.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),i.texturesEnabled){if(this._diffuseTexture&&M.DiffuseTextureEnabled&&(l.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,b.mA)(this._diffuseTexture,l,"diffuse")),this._ambientTexture&&M.AmbientTextureEnabled&&(l.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,b.mA)(this._ambientTexture,l,"ambient")),this._opacityTexture&&M.OpacityTextureEnabled&&(l.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,b.mA)(this._opacityTexture,l,"opacity")),this._hasAlphaChannel()&&l.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&M.ReflectionTextureEnabled&&(l.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),l.updateMatrix("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize)){const e=this._reflectionTexture;l.updateVector3("vReflectionPosition",e.boundingBoxPosition),l.updateVector3("vReflectionSize",e.boundingBoxSize)}if(this._emissiveTexture&&M.EmissiveTextureEnabled&&(l.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,b.mA)(this._emissiveTexture,l,"emissive")),this._lightmapTexture&&M.LightmapTextureEnabled&&(l.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,b.mA)(this._lightmapTexture,l,"lightmap")),this._specularTexture&&M.SpecularTextureEnabled&&(l.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,b.mA)(this._specularTexture,l,"specular")),this._bumpTexture&&i.getEngine().getCaps().standardDerivatives&&M.BumpTextureEnabled&&(l.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,b.mA)(this._bumpTexture,l,"bump"),i._mirroredCameraPosition?l.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):l.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&M.RefractionTextureEnabled){let e=1;if(this._refractionTexture.isCube||(l.updateMatrix("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(e=this._refractionTexture.depth)),l.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,e,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const e=this._refractionTexture;l.updateVector3("vRefractionPosition",e.boundingBoxPosition),l.updateVector3("vRefractionSize",e.boundingBoxSize)}}}this.pointsCloud&&l.updateFloat("pointSize",this.pointSize),l.updateColor4("vSpecularColor",this.specularColor,this.specularPower),l.updateColor3("vEmissiveColor",M.EmissiveTextureEnabled?this.emissiveColor:h.v9.BlackReadOnly),l.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),i.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),l.updateColor3("vAmbientColor",this._globalAmbientColor)}i.texturesEnabled&&(this._diffuseTexture&&M.DiffuseTextureEnabled&&n.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&M.AmbientTextureEnabled&&n.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&M.OpacityTextureEnabled&&n.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&M.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?n.setTexture("reflectionCubeSampler",this._reflectionTexture):n.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&M.EmissiveTextureEnabled&&n.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&M.LightmapTextureEnabled&&n.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&M.SpecularTextureEnabled&&n.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&i.getEngine().getCaps().standardDerivatives&&M.BumpTextureEnabled&&n.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&M.RefractionTextureEnabled&&(this._refractionTexture.isCube?n.setTexture("refractionCubeSampler",this._refractionTexture):n.setTexture("refraction2DSampler",this._refractionTexture))),this.getScene().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(t)&&this.getScene().depthPeelingRenderer.bind(n),this._eventInfo.subMesh=s,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,A.gS)(n,this,i),this.bindEyePosition(n)}else i.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);!o&&this.isFrozen||(i.lightsEnabled&&!this._disableLighting&&(0,b.RL)(i,t,n,r,this._maxSimultaneousLights),(i.fogEnabled&&t.applyFog&&i.fogMode!==a.Z.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||t.receiveShadows||r.PREPASS)&&this.bindView(n),(0,b.Yy)(i,t,n),r.NUM_MORPH_INFLUENCERS&&(0,b.nR)(t,n),r.BAKED_VERTEX_ANIMATION_TEXTURE&&t.bakedVertexAnimationManager?.bind(n,r.INSTANCES),this.useLogarithmicDepth&&(0,b.DL)(r,n,i),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)),this._afterBind(t,this._activeEffect,s),l.update()}getAnimatables(){const e=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&e.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&e.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&e.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&e.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&e.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&e.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&e.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&e.push(this._refractionTexture),e}getActiveTextures(){const e=super.getActiveTextures();return this._diffuseTexture&&e.push(this._diffuseTexture),this._ambientTexture&&e.push(this._ambientTexture),this._opacityTexture&&e.push(this._opacityTexture),this._reflectionTexture&&e.push(this._reflectionTexture),this._emissiveTexture&&e.push(this._emissiveTexture),this._specularTexture&&e.push(this._specularTexture),this._bumpTexture&&e.push(this._bumpTexture),this._lightmapTexture&&e.push(this._lightmapTexture),this._refractionTexture&&e.push(this._refractionTexture),e}hasTexture(e){return!!super.hasTexture(e)||this._diffuseTexture===e||this._ambientTexture===e||this._opacityTexture===e||this._reflectionTexture===e||this._emissiveTexture===e||this._specularTexture===e||this._bumpTexture===e||this._lightmapTexture===e||this._refractionTexture===e}dispose(e,t){t&&(this._diffuseTexture?.dispose(),this._ambientTexture?.dispose(),this._opacityTexture?.dispose(),this._reflectionTexture?.dispose(),this._emissiveTexture?.dispose(),this._specularTexture?.dispose(),this._bumpTexture?.dispose(),this._lightmapTexture?.dispose(),this._refractionTexture?.dispose()),this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(e,t)}clone(e,t=!0,s=""){const i=I.p.Clone((()=>new M(e,this.getScene())),this,{cloneTexturesOnlyOnce:t});return i.name=e,i.id=e,this.stencil.copyTo(i.stencil),this._clonePlugins(i,s),i}static Parse(e,t,s){const i=I.p.Parse((()=>new M(e.name,t)),e,t,s);return e.stencil&&i.stencil.parse(e.stencil,t,s),d.i._ParsePlugins(e,i,t,s),i}static get DiffuseTextureEnabled(){return m.h.DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){m.h.DiffuseTextureEnabled=e}static get DetailTextureEnabled(){return m.h.DetailTextureEnabled}static set DetailTextureEnabled(e){m.h.DetailTextureEnabled=e}static get AmbientTextureEnabled(){return m.h.AmbientTextureEnabled}static set AmbientTextureEnabled(e){m.h.AmbientTextureEnabled=e}static get OpacityTextureEnabled(){return m.h.OpacityTextureEnabled}static set OpacityTextureEnabled(e){m.h.OpacityTextureEnabled=e}static get ReflectionTextureEnabled(){return m.h.ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){m.h.ReflectionTextureEnabled=e}static get EmissiveTextureEnabled(){return m.h.EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){m.h.EmissiveTextureEnabled=e}static get SpecularTextureEnabled(){return m.h.SpecularTextureEnabled}static set SpecularTextureEnabled(e){m.h.SpecularTextureEnabled=e}static get BumpTextureEnabled(){return m.h.BumpTextureEnabled}static set BumpTextureEnabled(e){m.h.BumpTextureEnabled=e}static get LightmapTextureEnabled(){return m.h.LightmapTextureEnabled}static set LightmapTextureEnabled(e){m.h.LightmapTextureEnabled=e}static get RefractionTextureEnabled(){return m.h.RefractionTextureEnabled}static set RefractionTextureEnabled(e){m.h.RefractionTextureEnabled=e}static get ColorGradingTextureEnabled(){return m.h.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){m.h.ColorGradingTextureEnabled=e}static get FresnelEnabled(){return m.h.FresnelEnabled}static set FresnelEnabled(e){m.h.FresnelEnabled=e}}M.ForceGLSL=!1,(0,i.Cg)([(0,r.uM)("diffuseTexture")],M.prototype,"_diffuseTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"diffuseTexture",void 0),(0,i.Cg)([(0,r.uM)("ambientTexture")],M.prototype,"_ambientTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"ambientTexture",void 0),(0,i.Cg)([(0,r.uM)("opacityTexture")],M.prototype,"_opacityTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"opacityTexture",void 0),(0,i.Cg)([(0,r.uM)("reflectionTexture")],M.prototype,"_reflectionTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"reflectionTexture",void 0),(0,i.Cg)([(0,r.uM)("emissiveTexture")],M.prototype,"_emissiveTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"emissiveTexture",void 0),(0,i.Cg)([(0,r.uM)("specularTexture")],M.prototype,"_specularTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"specularTexture",void 0),(0,i.Cg)([(0,r.uM)("bumpTexture")],M.prototype,"_bumpTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"bumpTexture",void 0),(0,i.Cg)([(0,r.uM)("lightmapTexture")],M.prototype,"_lightmapTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"lightmapTexture",void 0),(0,i.Cg)([(0,r.uM)("refractionTexture")],M.prototype,"_refractionTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"refractionTexture",void 0),(0,i.Cg)([(0,r.jT)("ambient")],M.prototype,"ambientColor",void 0),(0,i.Cg)([(0,r.jT)("diffuse")],M.prototype,"diffuseColor",void 0),(0,i.Cg)([(0,r.jT)("specular")],M.prototype,"specularColor",void 0),(0,i.Cg)([(0,r.jT)("emissive")],M.prototype,"emissiveColor",void 0),(0,i.Cg)([(0,r.lK)()],M.prototype,"specularPower",void 0),(0,i.Cg)([(0,r.lK)("useAlphaFromDiffuseTexture")],M.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"useAlphaFromDiffuseTexture",void 0),(0,i.Cg)([(0,r.lK)("useEmissiveAsIllumination")],M.prototype,"_useEmissiveAsIllumination",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useEmissiveAsIllumination",void 0),(0,i.Cg)([(0,r.lK)("linkEmissiveWithDiffuse")],M.prototype,"_linkEmissiveWithDiffuse",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"linkEmissiveWithDiffuse",void 0),(0,i.Cg)([(0,r.lK)("useSpecularOverAlpha")],M.prototype,"_useSpecularOverAlpha",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useSpecularOverAlpha",void 0),(0,i.Cg)([(0,r.lK)("useReflectionOverAlpha")],M.prototype,"_useReflectionOverAlpha",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useReflectionOverAlpha",void 0),(0,i.Cg)([(0,r.lK)("disableLighting")],M.prototype,"_disableLighting",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsLightsDirty")],M.prototype,"disableLighting",void 0),(0,i.Cg)([(0,r.lK)("useObjectSpaceNormalMap")],M.prototype,"_useObjectSpaceNormalMap",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useObjectSpaceNormalMap",void 0),(0,i.Cg)([(0,r.lK)("useParallax")],M.prototype,"_useParallax",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useParallax",void 0),(0,i.Cg)([(0,r.lK)("useParallaxOcclusion")],M.prototype,"_useParallaxOcclusion",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useParallaxOcclusion",void 0),(0,i.Cg)([(0,r.lK)()],M.prototype,"parallaxScaleBias",void 0),(0,i.Cg)([(0,r.lK)("roughness")],M.prototype,"_roughness",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"roughness",void 0),(0,i.Cg)([(0,r.lK)()],M.prototype,"indexOfRefraction",void 0),(0,i.Cg)([(0,r.lK)()],M.prototype,"invertRefractionY",void 0),(0,i.Cg)([(0,r.lK)()],M.prototype,"alphaCutOff",void 0),(0,i.Cg)([(0,r.lK)("useLightmapAsShadowmap")],M.prototype,"_useLightmapAsShadowmap",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useLightmapAsShadowmap",void 0),(0,i.Cg)([(0,r.Y9)("diffuseFresnelParameters")],M.prototype,"_diffuseFresnelParameters",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"diffuseFresnelParameters",void 0),(0,i.Cg)([(0,r.Y9)("opacityFresnelParameters")],M.prototype,"_opacityFresnelParameters",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelAndMiscDirty")],M.prototype,"opacityFresnelParameters",void 0),(0,i.Cg)([(0,r.Y9)("reflectionFresnelParameters")],M.prototype,"_reflectionFresnelParameters",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"reflectionFresnelParameters",void 0),(0,i.Cg)([(0,r.Y9)("refractionFresnelParameters")],M.prototype,"_refractionFresnelParameters",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"refractionFresnelParameters",void 0),(0,i.Cg)([(0,r.Y9)("emissiveFresnelParameters")],M.prototype,"_emissiveFresnelParameters",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"emissiveFresnelParameters",void 0),(0,i.Cg)([(0,r.lK)("useReflectionFresnelFromSpecular")],M.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"useReflectionFresnelFromSpecular",void 0),(0,i.Cg)([(0,r.lK)("useGlossinessFromSpecularMapAlpha")],M.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,i.Cg)([(0,r.lK)("maxSimultaneousLights")],M.prototype,"_maxSimultaneousLights",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsLightsDirty")],M.prototype,"maxSimultaneousLights",void 0),(0,i.Cg)([(0,r.lK)("invertNormalMapX")],M.prototype,"_invertNormalMapX",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"invertNormalMapX",void 0),(0,i.Cg)([(0,r.lK)("invertNormalMapY")],M.prototype,"_invertNormalMapY",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"invertNormalMapY",void 0),(0,i.Cg)([(0,r.lK)("twoSidedLighting")],M.prototype,"_twoSidedLighting",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"twoSidedLighting",void 0),(0,i.Cg)([(0,r.lK)("applyDecalMapAfterDetailMap")],M.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsMiscDirty")],M.prototype,"applyDecalMapAfterDetailMap",void 0),(0,g.Y5)("BABYLON.StandardMaterial",M),a.Z.DefaultMaterialFactory=e=>new M("default material",e)},18917:(e,t,s)=>{s.d(t,{G$:()=>c,Jo:()=>d,KA:()=>l,an:()=>u});var i=s(54983),r=s(39341),n=s(9191),a=s(33543),o=s(28509),h=s(92411);function l(e){let t=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23];const s=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0],n=[];let h=[];const l=e.width||e.size||1,c=e.height||e.size||1,u=e.depth||e.size||1,d=e.wrap||!1;let f=void 0===e.topBaseAt?1:e.topBaseAt,p=void 0===e.bottomBaseAt?0:e.bottomBaseAt;f=(f+4)%4,p=(p+4)%4;let _=[2,0,3,1][f],g=[2,0,1,3][p],m=[1,-1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,-1,1,-1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,1];if(d){t=[2,3,0,2,0,1,4,5,6,4,6,7,9,10,11,9,11,8,12,14,15,12,13,14],m=[-1,1,1,1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,1,1,1,-1,1,-1,-1,1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1];let e=[[1,1,1],[-1,1,1],[-1,1,-1],[1,1,-1]],s=[[-1,-1,1],[1,-1,1],[1,-1,-1],[-1,-1,-1]];const i=[17,18,19,16],r=[22,23,20,21];for(;_>0;)e.unshift(e.pop()),i.unshift(i.pop()),_--;for(;g>0;)s.unshift(s.pop()),r.unshift(r.pop()),g--;e=e.flat(),s=s.flat(),m=m.concat(e).concat(s),t.push(i[0],i[2],i[3],i[0],i[1],i[2]),t.push(r[0],r[2],r[3],r[0],r[1],r[2])}const y=[l/2,c/2,u/2];h=m.reduce(((e,t,s)=>e.concat(t*y[s%3])),[]);const x=0===e.sideOrientation?0:e.sideOrientation||a.P.DEFAULTSIDE,A=e.faceUV||new Array(6),b=e.faceColors,I=[];for(let e=0;e<6;e++)void 0===A[e]&&(A[e]=new i.IU(0,0,1,1)),b&&void 0===b[e]&&(b[e]=new r.ov(1,1,1,1));for(let e=0;e<6;e++)if(n.push(A[e].z,o.rX?1-A[e].w:A[e].w),n.push(A[e].x,o.rX?1-A[e].w:A[e].w),n.push(A[e].x,o.rX?1-A[e].y:A[e].y),n.push(A[e].z,o.rX?1-A[e].y:A[e].y),b)for(let t=0;t<4;t++)I.push(b[e].r,b[e].g,b[e].b,b[e].a);a.P._ComputeSides(x,h,t,s,n,e.frontUVs,e.backUVs);const P=new a.P;if(P.indices=t,P.positions=h,P.normals=s,P.uvs=n,b){const e=x===a.P.DOUBLESIDE?I.concat(I):I;P.colors=e}return P}function c(e){const t=e.width||e.size||1,s=e.height||e.size||1,r=e.depth||e.size||1,n=0|(e.widthSegments||e.segments||1),a=0|(e.heightSegments||e.segments||1),o=0|(e.depthSegments||e.segments||1),l=new i.uq,c=new i.uq,u=new i.uq,d=(0,h.EH)({width:t,height:r,subdivisionsX:n,subdivisionsY:o});i.uq.TranslationToRef(0,-s/2,0,c),i.uq.RotationZToRef(Math.PI,l),l.multiplyToRef(c,u),d.transform(u);const f=(0,h.EH)({width:t,height:r,subdivisionsX:n,subdivisionsY:o});i.uq.TranslationToRef(0,s/2,0,u),f.transform(u);const p=(0,h.EH)({width:s,height:r,subdivisionsX:a,subdivisionsY:o});i.uq.TranslationToRef(-t/2,0,0,c),i.uq.RotationZToRef(Math.PI/2,l),l.multiplyToRef(c,u),p.transform(u);const _=(0,h.EH)({width:s,height:r,subdivisionsX:a,subdivisionsY:o});i.uq.TranslationToRef(t/2,0,0,c),i.uq.RotationZToRef(-Math.PI/2,l),l.multiplyToRef(c,u),_.transform(u);const g=(0,h.EH)({width:t,height:s,subdivisionsX:n,subdivisionsY:a});i.uq.TranslationToRef(0,0,-r/2,c),i.uq.RotationXToRef(-Math.PI/2,l),l.multiplyToRef(c,u),g.transform(u);const m=(0,h.EH)({width:t,height:s,subdivisionsX:n,subdivisionsY:a});return i.uq.TranslationToRef(0,0,r/2,c),i.uq.RotationXToRef(Math.PI/2,l),l.multiplyToRef(c,u),m.transform(u),d.merge([f,_,p,g,m],!0),d}function u(e,t={},s=null){const i=new n.e(e,s);return t.sideOrientation=n.e._GetDefaultSideOrientation(t.sideOrientation),i._originalBuilderSideOrientation=t.sideOrientation,l(t).applyToMesh(i,t.updatable),i}const d={CreateBox:u};a.P.CreateBox=l,n.e.CreateBox=(e,t,s=null,i,r)=>u(e,{size:t,sideOrientation:r,updatable:i},s)},86795:(e,t,s)=>{s.d(t,{H4:()=>l,_S:()=>h,yD:()=>o});var i=s(33543),r=s(54983),n=s(9191),a=s(28509);function o(e={subdivisions:2,tessellation:16,height:1,radius:.25,capSubdivisions:6}){const t=0|Math.max(e.subdivisions?e.subdivisions:2,1),s=0|Math.max(e.tessellation?e.tessellation:16,3),n=Math.max(e.height?e.height:1,0),o=Math.max(e.radius?e.radius:.25,0),h=0|Math.max(e.capSubdivisions?e.capSubdivisions:6,1),l=s,c=t,u=Math.max(e.radiusTop?e.radiusTop:o,0),d=Math.max(e.radiusBottom?e.radiusBottom:o,0),f=n-(u+d),p=2*Math.PI,_=Math.max(e.topCapSubdivisions?e.topCapSubdivisions:h,1),g=Math.max(e.bottomCapSubdivisions?e.bottomCapSubdivisions:h,1),m=Math.acos((d-u)/n);let y=[];const x=[],A=[],b=[];let I=0;const P=[],T=.5*f,E=.5*Math.PI;let M,v;const D=r.Pq.Zero(),S=r.Pq.Zero(),R=Math.cos(m),C=Math.sin(m),O=new r.I9(u*C,T+u*R).subtract(new r.I9(d*C,d*R-T)).length(),B=u*m+O+d*(E-m);let L=0;for(v=0;v<=_;v++){const e=[],t=E-m*(v/_);L+=u*m/_;const s=Math.cos(t),i=Math.sin(t),r=s*u;for(M=0;M<=l;M++){const t=M/l,n=t*p+0,o=Math.sin(n),h=Math.cos(n);S.x=r*o,S.y=T+i*u,S.z=r*h,x.push(S.x,S.y,S.z),D.set(s*o,i,s*h),A.push(D.x,D.y,D.z),b.push(t,a.rX?L/B:1-L/B),e.push(I),I++}P.push(e)}const F=n-u-d+R*u-R*d,N=C*(d-u)/F;for(v=1;v<=c;v++){const e=[];L+=O/c;const t=C*(v*(d-u)/c+u);for(M=0;M<=l;M++){const s=M/l,i=s*p+0,r=Math.sin(i),n=Math.cos(i);S.x=t*r,S.y=T+R*u-v*F/c,S.z=t*n,x.push(S.x,S.y,S.z),D.set(r,N,n).normalize(),A.push(D.x,D.y,D.z),b.push(s,a.rX?L/B:1-L/B),e.push(I),I++}P.push(e)}for(v=1;v<=g;v++){const e=[],t=E-m-(Math.PI-m)*(v/g);L+=d*m/g;const s=Math.cos(t),i=Math.sin(t),r=s*d;for(M=0;M<=l;M++){const t=M/l,n=t*p+0,o=Math.sin(n),h=Math.cos(n);S.x=r*o,S.y=i*d-T,S.z=r*h,x.push(S.x,S.y,S.z),D.set(s*o,i,s*h),A.push(D.x,D.y,D.z),b.push(t,a.rX?L/B:1-L/B),e.push(I),I++}P.push(e)}for(M=0;M<l;M++)for(v=0;v<_+c+g;v++){const e=P[v][M],t=P[v+1][M],s=P[v+1][M+1],i=P[v][M+1];y.push(e),y.push(t),y.push(i),y.push(t),y.push(s),y.push(i)}if(y=y.reverse(),e.orientation&&!e.orientation.equals(r.Pq.Up())){const t=new r.uq;e.orientation.clone().scale(.5*Math.PI).cross(r.Pq.Up()).toQuaternion().toRotationMatrix(t);const s=r.Pq.Zero();for(let e=0;e<x.length;e+=3)s.set(x[e],x[e+1],x[e+2]),r.Pq.TransformCoordinatesToRef(s.clone(),t,s),x[e]=s.x,x[e+1]=s.y,x[e+2]=s.z}const w=new i.P;return w.positions=x,w.normals=A,w.uvs=b,w.indices=y,w}function h(e,t={orientation:r.Pq.Up(),subdivisions:2,tessellation:16,height:1,radius:.25,capSubdivisions:6,updatable:!1},s=null){const i=new n.e(e,s);return o(t).applyToMesh(i,t.updatable),i}const l={CreateCapsule:h};n.e.CreateCapsule=(e,t,s)=>h(e,t,s),i.P.CreateCapsule=o},84900:(e,t,s)=>{s.d(t,{ZS:()=>c,og:()=>d,zk:()=>u});var i=s(54983),r=s(39341),n=s(9191),a=s(33543),o=s(86521),h=s(73537),l=s(28509);function c(e){const t=e.height||2;let s=0===e.diameterTop?0:e.diameterTop||e.diameter||1,o=0===e.diameterBottom?0:e.diameterBottom||e.diameter||1;s=s||1e-5,o=o||1e-5;const c=0|(e.tessellation||24),u=0|(e.subdivisions||1),d=!!e.hasRings,f=!!e.enclose,p=0===e.cap?0:e.cap||n.e.CAP_ALL,_=e.arc&&(e.arc<=0||e.arc>1)?1:e.arc||1,g=0===e.sideOrientation?0:e.sideOrientation||a.P.DEFAULTSIDE,m=e.faceUV||new Array(3),y=e.faceColors,x=2+(1+(1!==_&&f?2:0))*(d?u:1);let A;for(A=0;A<x;A++)y&&void 0===y[A]&&(y[A]=new r.ov(1,1,1,1));for(A=0;A<x;A++)m&&void 0===m[A]&&(m[A]=new i.IU(0,0,1,1));const b=[],I=[],P=[],T=[],E=[],M=2*Math.PI*_/c;let v,D,S;const R=(o-s)/2/t,C=i.Pq.Zero(),O=i.Pq.Zero(),B=i.Pq.Zero(),L=i.Pq.Zero(),F=i.Pq.Zero(),N=h._0.Y;let w,V,U,k=1,W=1,z=0,q=0;for(w=0;w<=u;w++)for(D=w/u,S=(D*(s-o)+o)/2,k=d&&0!==w&&w!==u?2:1,U=0;U<k;U++){for(d&&(W+=U),f&&(W+=2*U),V=0;V<=c;V++)v=V*M,C.x=Math.cos(-v)*S,C.y=-t/2+D*t,C.z=Math.sin(-v)*S,0===s&&w===u?(O.x=P[P.length-3*(c+1)],O.y=P[P.length-3*(c+1)+1],O.z=P[P.length-3*(c+1)+2]):(O.x=C.x,O.z=C.z,O.y=Math.sqrt(O.x*O.x+O.z*O.z)*R,O.normalize()),0===V&&(B.copyFrom(C),L.copyFrom(O)),I.push(C.x,C.y,C.z),P.push(O.x,O.y,O.z),q=d?z!==W?m[W].y:m[W].w:m[W].y+(m[W].w-m[W].y)*D,T.push(m[W].x+(m[W].z-m[W].x)*V/c,l.rX?1-q:q),y&&E.push(y[W].r,y[W].g,y[W].b,y[W].a);1!==_&&f&&(I.push(C.x,C.y,C.z),I.push(0,C.y,0),I.push(0,C.y,0),I.push(B.x,B.y,B.z),i.Pq.CrossToRef(N,O,F),F.normalize(),P.push(F.x,F.y,F.z,F.x,F.y,F.z),i.Pq.CrossToRef(L,N,F),F.normalize(),P.push(F.x,F.y,F.z,F.x,F.y,F.z),q=d?z!==W?m[W+1].y:m[W+1].w:m[W+1].y+(m[W+1].w-m[W+1].y)*D,T.push(m[W+1].x,l.rX?1-q:q),T.push(m[W+1].z,l.rX?1-q:q),q=d?z!==W?m[W+2].y:m[W+2].w:m[W+2].y+(m[W+2].w-m[W+2].y)*D,T.push(m[W+2].x,l.rX?1-q:q),T.push(m[W+2].z,l.rX?1-q:q),y&&(E.push(y[W+1].r,y[W+1].g,y[W+1].b,y[W+1].a),E.push(y[W+1].r,y[W+1].g,y[W+1].b,y[W+1].a),E.push(y[W+2].r,y[W+2].g,y[W+2].b,y[W+2].a),E.push(y[W+2].r,y[W+2].g,y[W+2].b,y[W+2].a))),z!==W&&(z=W)}const H=1!==_&&f?c+4:c;for(w=0,W=0;W<u;W++){let e=0,t=0,s=0,i=0;for(V=0;V<c;V++)e=w*(H+1)+V,t=(w+1)*(H+1)+V,s=w*(H+1)+(V+1),i=(w+1)*(H+1)+(V+1),b.push(e,t,s),b.push(i,s,t);1!==_&&f&&(b.push(e+2,t+2,s+2),b.push(i+2,s+2,t+2),b.push(e+4,t+4,s+4),b.push(i+4,s+4,t+4)),w=d?w+2:w+1}const G=e=>{const r=e?s/2:o/2;if(0===r)return;let n,a,h;const u=e?m[x-1]:m[0];let d=null;y&&(d=e?y[x-1]:y[0]);const f=I.length/3,p=e?t/2:-t/2,g=new i.Pq(0,p,0);I.push(g.x,g.y,g.z),P.push(0,e?1:-1,0);const A=u.y+.5*(u.w-u.y);T.push(u.x+.5*(u.z-u.x),l.rX?1-A:A),d&&E.push(d.r,d.g,d.b,d.a);const M=new i.I9(.5,.5);for(h=0;h<=c;h++){n=2*Math.PI*h*_/c;const t=Math.cos(-n),s=Math.sin(-n);a=new i.Pq(t*r,p,s*r);const o=new i.I9(t*M.x+.5,s*M.y+.5);I.push(a.x,a.y,a.z),P.push(0,e?1:-1,0);const f=u.y+(u.w-u.y)*o.y;T.push(u.x+(u.z-u.x)*o.x,l.rX?1-f:f),d&&E.push(d.r,d.g,d.b,d.a)}for(h=0;h<c;h++)e?(b.push(f),b.push(f+(h+2)),b.push(f+(h+1))):(b.push(f),b.push(f+(h+1)),b.push(f+(h+2)))};p!==n.e.CAP_START&&p!==n.e.CAP_ALL||G(!1),p!==n.e.CAP_END&&p!==n.e.CAP_ALL||G(!0),a.P._ComputeSides(g,I,b,P,T,e.frontUVs,e.backUVs);const K=new a.P;return K.indices=b,K.positions=I,K.normals=P,K.uvs=T,y&&(K.colors=E),K}function u(e,t={},s){const i=new n.e(e,s);return t.sideOrientation=n.e._GetDefaultSideOrientation(t.sideOrientation),i._originalBuilderSideOrientation=t.sideOrientation,c(t).applyToMesh(i,t.updatable),i}const d={CreateCylinder:u};a.P.CreateCylinder=c,n.e.CreateCylinder=(e,t,s,i,r,a,h,l,c)=>(void 0!==h&&h instanceof o.Z||(void 0!==h&&(c=l||n.e.DEFAULTSIDE,l=h),h=a,a=1),u(e,{height:t,diameterTop:s,diameterBottom:i,tessellation:r,subdivisions:a,sideOrientation:c,updatable:l},h))},94661:(e,t,s)=>{s.d(t,{f:()=>m,m:()=>g});var i=s(54983),r=s(49111),n=s(9191),a=s(59396),o=s(33543),h=s(28509);const l=new i.Pq(1,0,0),c=new i.Pq(-1,0,0),u=new i.Pq(0,1,0),d=new i.Pq(0,-1,0),f=new i.Pq(0,0,1),p=new i.Pq(0,0,-1);class _{constructor(e=i.Pq.Zero(),t=i.Pq.Up(),s=i.I9.Zero(),r=0,n=0,a=null,o=null,h=null,l=null){this.position=e,this.normal=t,this.uv=s,this.vertexIdx=r,this.vertexIdxForBones=n,this.localPositionOverride=a,this.localNormalOverride=o,this.matrixIndicesOverride=h,this.matrixWeightsOverride=l}clone(){return new _(this.position.clone(),this.normal.clone(),this.uv.clone(),this.vertexIdx,this.vertexIdxForBones,this.localPositionOverride?.slice(),this.localNormalOverride?.slice(),this.matrixIndicesOverride?.slice(),this.matrixWeightsOverride?.slice())}}function g(e,t,s){const g=!!t.skeleton,m=s.localMode||g,y=t.getIndices(),x=g?t.getPositionData(!0,!0):t.getVerticesData(a.R.PositionKind),A=g?t.getNormalsData(!0,!0):t.getVerticesData(a.R.NormalKind),b=m?g?t.getVerticesData(a.R.PositionKind):x:null,I=m?g?t.getVerticesData(a.R.NormalKind):A:null,P=t.getVerticesData(a.R.UVKind),T=g?t.getVerticesData(a.R.MatricesIndicesKind):null,E=g?t.getVerticesData(a.R.MatricesWeightsKind):null,M=g?t.getVerticesData(a.R.MatricesIndicesExtraKind):null,v=g?t.getVerticesData(a.R.MatricesWeightsExtraKind):null,D=s.position||i.Pq.Zero();let S=s.normal||i.Pq.Up();const R=s.size||i.Pq.One(),C=s.angle||0;if(!S){const e=new i.Pq(0,0,1),s=t.getScene().activeCamera,r=i.Pq.TransformCoordinates(e,s.getWorldMatrix());S=s.globalPosition.subtract(r)}const O=-Math.atan2(S.z,S.x)-Math.PI/2,B=Math.sqrt(S.x*S.x+S.z*S.z),L=Math.atan2(S.y,B),F=new o.P;F.indices=[],F.positions=[],F.normals=[],F.uvs=[],F.matricesIndices=g?[]:null,F.matricesWeights=g?[]:null,F.matricesIndicesExtra=M?[]:null,F.matricesWeightsExtra=v?[]:null;let N=0;const w=(e,t)=>{const r=new _;if(!y||!x||!A)return r;const n=y[e];if(r.vertexIdx=3*n,r.vertexIdxForBones=4*n,r.position=new i.Pq(x[3*n],x[3*n+1],x[3*n+2]),i.Pq.TransformCoordinatesToRef(r.position,t,r.position),r.normal=new i.Pq(A[3*n],A[3*n+1],A[3*n+2]),i.Pq.TransformNormalToRef(r.normal,t,r.normal),s.captureUVS&&P){const e=P[2*n+1];r.uv=new i.I9(P[2*n],h.rX?1-e:e)}return r},V=[0,0,0,0],U=(e,t)=>{if(0===e.length)return e;const s=.5*Math.abs(i.Pq.Dot(R,t)),n=(e,t,s,i)=>{for(let r=0;r<i;++r)if(e[s+r]===t)return s+r;return-1},a=(e,a)=>{const o=i.Pq.GetClipFactor(e.position,a.position,t,s);let h=V,l=V;if(T&&E){const t=e.matrixIndicesOverride?0:e.vertexIdxForBones,s=e.matrixIndicesOverride??T,i=e.matrixWeightsOverride??E,c=a.matrixIndicesOverride?0:a.vertexIdxForBones,u=a.matrixIndicesOverride??T,d=a.matrixWeightsOverride??E;h=[0,0,0,0],l=[0,0,0,0];let f=0;for(let e=0;e<4;++e)if(i[t+e]>0){const a=n(u,s[t+e],c,4);h[f]=s[t+e],l[f]=(0,r.Lerp)(i[t+e],a>=0?d[a]:0,o),f++}for(let e=0;e<4&&f<4;++e){const i=u[c+e];-1===n(s,i,t,4)&&(h[f]=i,l[f]=(0,r.Lerp)(0,d[c+e],o),f++)}const p=l[0]+l[1]+l[2]+l[3];l[0]/=p,l[1]/=p,l[2]/=p,l[3]/=p}const c=e.localPositionOverride?e.localPositionOverride[0]:b?.[e.vertexIdx]??0,u=e.localPositionOverride?e.localPositionOverride[1]:b?.[e.vertexIdx+1]??0,d=e.localPositionOverride?e.localPositionOverride[2]:b?.[e.vertexIdx+2]??0,f=a.localPositionOverride?a.localPositionOverride[0]:b?.[a.vertexIdx]??0,p=a.localPositionOverride?a.localPositionOverride[1]:b?.[a.vertexIdx+1]??0,g=a.localPositionOverride?a.localPositionOverride[2]:b?.[a.vertexIdx+2]??0,m=e.localNormalOverride?e.localNormalOverride[0]:I?.[e.vertexIdx]??0,y=e.localNormalOverride?e.localNormalOverride[1]:I?.[e.vertexIdx+1]??0,x=e.localNormalOverride?e.localNormalOverride[2]:I?.[e.vertexIdx+2]??0,A=m+((a.localNormalOverride?a.localNormalOverride[0]:I?.[a.vertexIdx]??0)-m)*o,P=y+((a.localNormalOverride?a.localNormalOverride[1]:I?.[a.vertexIdx+1]??0)-y)*o,M=x+((a.localNormalOverride?a.localNormalOverride[2]:I?.[a.vertexIdx+2]??0)-x)*o,v=Math.sqrt(A*A+P*P+M*M);return new _(i.Pq.Lerp(e.position,a.position,o),i.Pq.Lerp(e.normal,a.normal,o).normalize(),i.I9.Lerp(e.uv,a.uv,o),-1,-1,b?[c+(f-c)*o,u+(p-u)*o,d+(g-d)*o]:null,I?[A/v,P/v,M/v]:null,h,l)};let o=null;e.length>3&&(o=[]);for(let r=0;r<e.length;r+=3){let n=0,h=null,l=null,c=null,u=null;const d=i.Pq.Dot(e[r].position,t)-s>0,f=i.Pq.Dot(e[r+1].position,t)-s>0,p=i.Pq.Dot(e[r+2].position,t)-s>0;switch(n=(d?1:0)+(f?1:0)+(p?1:0),n){case 0:e.length>3?(o.push(e[r]),o.push(e[r+1]),o.push(e[r+2])):o=e;break;case 1:if(o=o??new Array,d&&(h=e[r+1],l=e[r+2],c=a(e[r],h),u=a(e[r],l)),f){h=e[r],l=e[r+2],c=a(e[r+1],h),u=a(e[r+1],l),o.push(c),o.push(l.clone()),o.push(h.clone()),o.push(l.clone()),o.push(c.clone()),o.push(u);break}p&&(h=e[r],l=e[r+1],c=a(e[r+2],h),u=a(e[r+2],l)),h&&l&&c&&u&&(o.push(h.clone()),o.push(l.clone()),o.push(c),o.push(u),o.push(c.clone()),o.push(l.clone()));break;case 2:o=o??new Array,d||(h=e[r].clone(),l=a(h,e[r+1]),c=a(h,e[r+2]),o.push(h),o.push(l),o.push(c)),f||(h=e[r+1].clone(),l=a(h,e[r+2]),c=a(h,e[r]),o.push(h),o.push(l),o.push(c)),p||(h=e[r+2].clone(),l=a(h,e[r]),c=a(h,e[r+1]),o.push(h),o.push(l),o.push(c))}}return o},k=t instanceof n.e?t:null,W=k?._thinInstanceDataStorage.matrixData,z=k?.thinInstanceCount||1,q=i.AA.Matrix[0];q.copyFrom(i.uq.IdentityReadOnly);for(let e=0;e<z;++e){if(k?.hasThinInstances&&W){const t=16*e;q.setRowFromFloats(0,W[t+0],W[t+1],W[t+2],W[t+3]),q.setRowFromFloats(1,W[t+4],W[t+5],W[t+6],W[t+7]),q.setRowFromFloats(2,W[t+8],W[t+9],W[t+10],W[t+11]),q.setRowFromFloats(3,W[t+12],W[t+13],W[t+14],W[t+15])}const r=i.uq.RotationYawPitchRoll(O,L,C).multiply(i.uq.Translation(D.x,D.y,D.z)),n=i.uq.Invert(r),a=t.getWorldMatrix(),o=q.multiply(a).multiply(n),_=new Array(3);for(let e=0;e<y.length;e+=3){let t=_;if(t[0]=w(e,o),t[1]=w(e+1,o),t[2]=w(e+2,o),!(s.cullBackFaces&&-t[0].normal.z<=0&&-t[1].normal.z<=0&&-t[2].normal.z<=0)&&(t=U(t,l),t&&(t=U(t,c),t&&(t=U(t,u),t&&(t=U(t,d),t&&(t=U(t,f),t&&(t=U(t,p),t)))))))for(let e=0;e<t.length;e++){const i=t[e];if(F.indices.push(N),m?(i.localPositionOverride?(F.positions[3*N]=i.localPositionOverride[0],F.positions[3*N+1]=i.localPositionOverride[1],F.positions[3*N+2]=i.localPositionOverride[2]):b&&(F.positions[3*N]=b[i.vertexIdx],F.positions[3*N+1]=b[i.vertexIdx+1],F.positions[3*N+2]=b[i.vertexIdx+2]),i.localNormalOverride?(F.normals[3*N]=i.localNormalOverride[0],F.normals[3*N+1]=i.localNormalOverride[1],F.normals[3*N+2]=i.localNormalOverride[2]):I&&(F.normals[3*N]=I[i.vertexIdx],F.normals[3*N+1]=I[i.vertexIdx+1],F.normals[3*N+2]=I[i.vertexIdx+2])):(i.position.toArray(F.positions,3*N),i.normal.toArray(F.normals,3*N)),F.matricesIndices&&F.matricesWeights&&(i.matrixIndicesOverride?(F.matricesIndices[4*N]=i.matrixIndicesOverride[0],F.matricesIndices[4*N+1]=i.matrixIndicesOverride[1],F.matricesIndices[4*N+2]=i.matrixIndicesOverride[2],F.matricesIndices[4*N+3]=i.matrixIndicesOverride[3]):(T&&(F.matricesIndices[4*N]=T[i.vertexIdxForBones],F.matricesIndices[4*N+1]=T[i.vertexIdxForBones+1],F.matricesIndices[4*N+2]=T[i.vertexIdxForBones+2],F.matricesIndices[4*N+3]=T[i.vertexIdxForBones+3]),M&&F.matricesIndicesExtra&&(F.matricesIndicesExtra[4*N]=M[i.vertexIdxForBones],F.matricesIndicesExtra[4*N+1]=M[i.vertexIdxForBones+1],F.matricesIndicesExtra[4*N+2]=M[i.vertexIdxForBones+2],F.matricesIndicesExtra[4*N+3]=M[i.vertexIdxForBones+3])),i.matrixWeightsOverride?(F.matricesWeights[4*N]=i.matrixWeightsOverride[0],F.matricesWeights[4*N+1]=i.matrixWeightsOverride[1],F.matricesWeights[4*N+2]=i.matrixWeightsOverride[2],F.matricesWeights[4*N+3]=i.matrixWeightsOverride[3]):(E&&(F.matricesWeights[4*N]=E[i.vertexIdxForBones],F.matricesWeights[4*N+1]=E[i.vertexIdxForBones+1],F.matricesWeights[4*N+2]=E[i.vertexIdxForBones+2],F.matricesWeights[4*N+3]=E[i.vertexIdxForBones+3]),v&&F.matricesWeightsExtra&&(F.matricesWeightsExtra[4*N]=v[i.vertexIdxForBones],F.matricesWeightsExtra[4*N+1]=v[i.vertexIdxForBones+1],F.matricesWeightsExtra[4*N+2]=v[i.vertexIdxForBones+2],F.matricesWeightsExtra[4*N+3]=v[i.vertexIdxForBones+3]))),s.captureUVS)i.uv.toArray(F.uvs,2*N);else{F.uvs.push(.5+i.position.x/R.x);const e=.5+i.position.y/R.y;F.uvs.push(h.rX?1-e:e)}N++}}}0===F.indices.length&&(F.indices=null),0===F.positions.length&&(F.positions=null),0===F.normals.length&&(F.normals=null),0===F.uvs.length&&(F.uvs=null),0===F.matricesIndices?.length&&(F.matricesIndices=null),0===F.matricesWeights?.length&&(F.matricesWeights=null),0===F.matricesIndicesExtra?.length&&(F.matricesIndicesExtra=null),0===F.matricesWeightsExtra?.length&&(F.matricesWeightsExtra=null);const H=new n.e(e,t.getScene());return F.applyToMesh(H),m?(H.skeleton=t.skeleton,H.parent=t):(H.position=D.clone(),H.rotation=new i.Pq(L,O,C)),H.computeWorldMatrix(!0),H.refreshBoundingInfo(!0,!0),H}const m={CreateDecal:g};n.e.CreateDecal=(e,t,s,i,r,n)=>g(e,t,{position:s,normal:i,size:r,angle:n})},68437:(e,t,s)=>{s.d(t,{OD:()=>a,WA:()=>o,x3:()=>h});var i=s(9191),r=s(33543),n=s(28509);function a(e){const t=[],s=[],i=[],a=[],o=e.radius||.5,h=e.tessellation||64,l=e.arc&&(e.arc<=0||e.arc>1)?1:e.arc||1,c=0===e.sideOrientation?0:e.sideOrientation||r.P.DEFAULTSIDE;t.push(0,0,0),a.push(.5,.5);const u=2*Math.PI*l,d=1===l?u/h:u/(h-1);let f=0;for(let e=0;e<h;e++){const e=Math.cos(f),s=Math.sin(f),i=(e+1)/2,r=(1-s)/2;t.push(o*e,o*s,0),a.push(i,n.rX?1-r:r),f+=d}1===l&&(t.push(t[3],t[4],t[5]),a.push(a[2],n.rX?1-a[3]:a[3]));const p=t.length/3;for(let e=1;e<p-1;e++)s.push(e+1,0,e);r.P.ComputeNormals(t,s,i),r.P._ComputeSides(c,t,s,i,a,e.frontUVs,e.backUVs);const _=new r.P;return _.indices=s,_.positions=t,_.normals=i,_.uvs=a,_}function o(e,t={},s=null){const r=new i.e(e,s);return t.sideOrientation=i.e._GetDefaultSideOrientation(t.sideOrientation),r._originalBuilderSideOrientation=t.sideOrientation,a(t).applyToMesh(r,t.updatable),r}const h={CreateDisc:o};r.P.CreateDisc=a,i.e.CreateDisc=(e,t,s,i=null,r,n)=>o(e,{radius:t,tessellation:s,sideOrientation:n,updatable:r},i)},26135:(e,t,s)=>{s.d(t,{M:()=>a});var i=s(59688),r=s(70461),n=s(43425);function a(e,t,s=null){let a=t.m||1;a!==Math.floor(a)&&(a=Math.floor(a),r.V.Warn("m not an integer only floor(m) used"));let o=t.n||0;if(o!==Math.floor(o)&&(o=Math.floor(o),r.V.Warn("n not an integer only floor(n) used")),o>a){const e=o;o=a,a=e,r.V.Warn("n > m therefore m and n swapped")}const h=new n.nZ;h.build(a,o);const l={custom:n.M6.BuildGeodesicData(h),size:t.size,sizeX:t.sizeX,sizeY:t.sizeY,sizeZ:t.sizeZ,faceUV:t.faceUV,faceColors:t.faceColors,flat:t.flat,updatable:t.updatable,sideOrientation:t.sideOrientation,frontUVs:t.frontUVs,backUVs:t.backUVs};return(0,i.D6)(e,l,s)}},80098:(e,t,s)=>{s.d(t,{R:()=>d,z:()=>u});var i=s(54983),r=s(39341),n=s(9191),a=s(33543),o=s(70461),h=s(43425),l=s(12359),c=s(28509);function u(e,t){const s=e.size,r=e.sizeX||s||1,n=e.sizeY||s||1,o=e.sizeZ||s||1,h=0===e.sideOrientation?0:e.sideOrientation||a.P.DEFAULTSIDE,l=[],u=[],d=[],f=[];let p=1/0,_=-1/0,g=1/0,m=-1/0;for(let e=0;e<t.vertex.length;e++)p=Math.min(p,t.vertex[e][0]*r),_=Math.max(_,t.vertex[e][0]*r),g=Math.min(g,t.vertex[e][1]*n),m=Math.max(m,t.vertex[e][1]*n);let y=0;for(let e=0;e<t.face.length;e++){const s=t.face[e],a=i.Pq.FromArray(t.vertex[s[0]]),h=i.Pq.FromArray(t.vertex[s[2]]),x=i.Pq.FromArray(t.vertex[s[1]]),A=h.subtract(a),b=x.subtract(a),I=i.Pq.Cross(b,A).normalize();for(let e=0;e<s.length;e++){d.push(I.x,I.y,I.z);const i=t.vertex[s[e]];l.push(i[0]*r,i[1]*n,i[2]*o);const a=(i[1]*n-g)/(m-g);f.push((i[0]*r-p)/(_-p),c.rX?1-a:a)}for(let e=0;e<s.length-2;e++)u.push(y,y+e+2,y+e+1);y+=s.length}a.P._ComputeSides(h,l,u,d,f);const x=new a.P;return x.positions=l,x.indices=u,x.normals=d,x.uvs=f,x}function d(e,t,s=null){const a=t.size,c=t.sizeX||a||1,d=t.sizeY||a||1,f=t.sizeZ||a||1;let p=t.m||1;p!==Math.floor(p)&&(p=Math.floor(p),o.V.Warn("m not an integer only floor(m) used"));let _=t.n||0;if(_!==Math.floor(_)&&(_=Math.floor(_),o.V.Warn("n not an integer only floor(n) used")),_>p){const e=_;_=p,p=e,o.V.Warn("n > m therefore m and n swapped")}const g=new h.nZ;g.build(p,_);const m=h.M6.BuildGeodesicData(g),y=m.toGoldbergPolyhedronData(),x=new l.U(e,s);t.sideOrientation=n.e._GetDefaultSideOrientation(t.sideOrientation),x._originalBuilderSideOrientation=t.sideOrientation,u(t,y).applyToMesh(x,t.updatable),x.goldbergData.nbSharedFaces=m.sharedNodes,x.goldbergData.nbUnsharedFaces=m.poleNodes,x.goldbergData.adjacentFaces=m.adjacentFaces,x.goldbergData.nbFaces=x.goldbergData.nbSharedFaces+x.goldbergData.nbUnsharedFaces,x.goldbergData.nbFacesAtPole=(x.goldbergData.nbUnsharedFaces-12)/12;for(let e=0;e<m.vertex.length;e++)x.goldbergData.faceCenters.push(i.Pq.FromArray(m.vertex[e])),x.goldbergData.faceCenters[e].x*=c,x.goldbergData.faceCenters[e].y*=d,x.goldbergData.faceCenters[e].z*=f,x.goldbergData.faceColors.push(new r.ov(1,1,1,1));for(let e=0;e<y.face.length;e++){const t=y.face[e],s=i.Pq.FromArray(y.vertex[t[0]]),r=i.Pq.FromArray(y.vertex[t[2]]),n=i.Pq.FromArray(y.vertex[t[1]]),a=r.subtract(s),o=n.subtract(s),h=i.Pq.Cross(o,a).normalize(),l=i.Pq.Cross(o,h).normalize();x.goldbergData.faceXaxis.push(o.normalize()),x.goldbergData.faceYaxis.push(h),x.goldbergData.faceZaxis.push(l)}return x}},92411:(e,t,s)=>{s.d(t,{EH:()=>d,LL:()=>y,RI:()=>m,k:()=>f,km:()=>_,ol:()=>g,r_:()=>p});var i=s(54983),r=s(39341),n=s(9191),a=s(33543),o=s(54568),h=s(90066),l=s(69583),c=s(50507),u=s(28509);function d(e){const t=[],s=[],r=[],n=[];let o,h;const l=e.width||e.size||1,c=e.height||e.size||1,d=0|(e.subdivisionsX||e.subdivisions||1),f=0|(e.subdivisionsY||e.subdivisions||1);for(o=0;o<=f;o++)for(h=0;h<=d;h++){const e=new i.Pq(h*l/d-l/2,0,(f-o)*c/f-c/2),t=new i.Pq(0,1,0);s.push(e.x,e.y,e.z),r.push(t.x,t.y,t.z),n.push(h/d,u.rX?o/f:1-o/f)}for(o=0;o<f;o++)for(h=0;h<d;h++)t.push(h+1+(o+1)*(d+1)),t.push(h+1+o*(d+1)),t.push(h+o*(d+1)),t.push(h+(o+1)*(d+1)),t.push(h+1+(o+1)*(d+1)),t.push(h+o*(d+1));const p=new a.P;return p.indices=t,p.positions=s,p.normals=r,p.uvs=n,p}function f(e){const t=void 0!==e.xmin&&null!==e.xmin?e.xmin:-1,s=void 0!==e.zmin&&null!==e.zmin?e.zmin:-1,r=void 0!==e.xmax&&null!==e.xmax?e.xmax:1,n=void 0!==e.zmax&&null!==e.zmax?e.zmax:1,o=e.subdivisions||{w:1,h:1},h=e.precision||{w:1,h:1},l=[],c=[],u=[],d=[];let f,p,_,g;o.h=o.h<1?1:o.h,o.w=o.w<1?1:o.w,h.w=h.w<1?1:h.w,h.h=h.h<1?1:h.h;const m=(r-t)/o.w,y=(n-s)/o.h;function x(e,t,s,r){const n=c.length/3,a=h.w+1;for(f=0;f<h.h;f++)for(p=0;p<h.w;p++){const e=[n+p+f*a,n+(p+1)+f*a,n+(p+1)+(f+1)*a,n+p+(f+1)*a];l.push(e[1]),l.push(e[2]),l.push(e[3]),l.push(e[0]),l.push(e[1]),l.push(e[3])}const o=i.Pq.Zero(),_=new i.Pq(0,1,0);for(f=0;f<=h.h;f++)for(o.z=f*(r-t)/h.h+t,p=0;p<=h.w;p++)o.x=p*(s-e)/h.w+e,o.y=0,c.push(o.x,o.y,o.z),u.push(_.x,_.y,_.z),d.push(p/h.w,f/h.h)}for(_=0;_<o.h;_++)for(g=0;g<o.w;g++)x(t+g*m,s+_*y,t+(g+1)*m,s+(_+1)*y);const A=new a.P;return A.indices=l,A.positions=c,A.normals=u,A.uvs=d,A}function p(e){const t=[],s=[],n=[],o=[];let h,l;const u=e.colorFilter||new r.v9(.3,.59,.11),d=e.alphaFilter||0;let f=!1;if(e.minHeight>e.maxHeight){f=!0;const t=e.maxHeight;e.maxHeight=e.minHeight,e.minHeight=t}for(h=0;h<=e.subdivisions;h++)for(l=0;l<=e.subdivisions;l++){const t=new i.Pq(l*e.width/e.subdivisions-e.width/2,0,(e.subdivisions-h)*e.height/e.subdivisions-e.height/2),r=4*(((t.x+e.width/2)/e.width*(e.bufferWidth-1)|0)+((1-(t.z+e.height/2)/e.height)*(e.bufferHeight-1)|0)*e.bufferWidth);let a=e.buffer[r]/255,p=e.buffer[r+1]/255,_=e.buffer[r+2]/255;const g=e.buffer[r+3]/255;f&&(a=1-a,p=1-p,_=1-_);const m=a*u.r+p*u.g+_*u.b;t.y=g>=d?e.minHeight+(e.maxHeight-e.minHeight)*m:e.minHeight-c.bH,e.heightBuffer&&(e.heightBuffer[h*(e.subdivisions+1)+l]=t.y),s.push(t.x,t.y,t.z),n.push(0,0,0),o.push(l/e.subdivisions,1-h/e.subdivisions)}for(h=0;h<e.subdivisions;h++)for(l=0;l<e.subdivisions;l++){const i=l+1+(h+1)*(e.subdivisions+1),r=l+1+h*(e.subdivisions+1),n=l+h*(e.subdivisions+1),a=l+(h+1)*(e.subdivisions+1),o=s[3*i+1]>=e.minHeight,c=s[3*r+1]>=e.minHeight,u=s[3*n+1]>=e.minHeight;o&&c&&u&&(t.push(i),t.push(r),t.push(n)),s[3*a+1]>=e.minHeight&&o&&u&&(t.push(a),t.push(i),t.push(n))}a.P.ComputeNormals(s,t,n);const p=new a.P;return p.indices=t,p.positions=s,p.normals=n,p.uvs=o,p}function _(e,t={},s){const i=new o.f(e,s);return i._setReady(!1),i._subdivisionsX=t.subdivisionsX||t.subdivisions||1,i._subdivisionsY=t.subdivisionsY||t.subdivisions||1,i._width=t.width||1,i._height=t.height||1,i._maxX=i._width/2,i._maxZ=i._height/2,i._minX=-i._maxX,i._minZ=-i._maxZ,d(t).applyToMesh(i,t.updatable),i._setReady(!0),i}function g(e,t,s=null){const i=new n.e(e,s);return f(t).applyToMesh(i,t.updatable),i}function m(e,t,s={},i=null){const n=s.width||10,a=s.height||10,c=s.subdivisions||1,u=s.minHeight||0,d=s.maxHeight||1,f=s.colorFilter||new r.v9(.3,.59,.11),_=s.alphaFilter||0,g=s.updatable,m=s.onReady;i=i||l.q.LastCreatedScene;const y=new o.f(e,i);let x;y._subdivisionsX=c,y._subdivisionsY=c,y._width=n,y._height=a,y._maxX=y._width/2,y._maxZ=y._height/2,y._minX=-y._maxX,y._minZ=-y._maxZ,y._setReady(!1),s.passHeightBufferInCallback&&(x=new Float32Array((c+1)*(c+1)));const A=(e,t,s)=>{p({width:n,height:a,subdivisions:c,minHeight:u,maxHeight:d,colorFilter:f,buffer:e,bufferWidth:t,bufferHeight:s,alphaFilter:_,heightBuffer:x}).applyToMesh(y,g),m&&m(y,x),y._setReady(!0)};if("string"==typeof t){const e=e=>{const t=e.width,s=e.height;if(i.isDisposed)return;const r=i?.getEngine().resizeImageBitmap(e,t,s);A(r,t,s)};h.S0.LoadImage(t,e,s.onError?s.onError:()=>{},i.offlineProvider)}else A(t.data,t.width,t.height);return y}const y={CreateGround:_,CreateGroundFromHeightMap:m,CreateTiledGround:g};a.P.CreateGround=d,a.P.CreateTiledGround=f,a.P.CreateGroundFromHeightMap=p,n.e.CreateGround=(e,t,s,i,r,n)=>_(e,{width:t,height:s,subdivisions:i,updatable:n},r),n.e.CreateTiledGround=(e,t,s,i,r,n,a,o,h)=>g(e,{xmin:t,zmin:s,xmax:i,zmax:r,subdivisions:n,precision:a,updatable:h},o),n.e.CreateGroundFromHeightMap=(e,t,s,i,r,n,a,o,h,l,c)=>m(e,t,{width:s,height:i,subdivisions:r,minHeight:n,maxHeight:a,updatable:h,onReady:l,alphaFilter:c},o)},53318:(e,t,s)=>{s.d(t,{Ds:()=>h,F:()=>o,o4:()=>l});var i=s(54983),r=s(9191),n=s(33543),a=s(28509);function o(e){const t=e.sideOrientation||n.P.DEFAULTSIDE,s=e.radius||1,r=void 0===e.flat||e.flat,o=0|(e.subdivisions||4),h=e.radiusX||s,l=e.radiusY||s,c=e.radiusZ||s,u=(1+Math.sqrt(5))/2,d=[-1,u,-0,1,u,0,-1,-u,0,1,-u,0,0,-1,-u,0,1,-u,0,-1,u,0,1,u,u,0,1,u,0,-1,-u,0,1,-u,0,-1],f=[0,11,5,0,5,1,0,1,7,0,7,10,12,22,23,1,5,20,5,11,4,23,22,13,22,18,6,7,1,8,14,21,4,14,4,2,16,13,6,15,6,19,3,8,9,4,21,5,13,17,23,6,13,22,19,6,18,9,8,1],p=[0,1,2,3,4,5,6,7,8,9,10,11,0,2,3,3,3,4,7,8,9,9,10,11],_=[5,1,3,1,6,4,0,0,5,3,4,2,2,2,4,0,2,0,1,1,6,0,6,2,0,4,3,3,4,4,3,1,4,2,4,4,0,2,1,1,2,2,3,3,1,3,2,4],g=[0,0,0,0,1,0,0,1,1,0,0,0,1,1,0,0,1,1,1,0],m=[],y=[],x=[],A=[];let b=0;const I=new Array(3),P=new Array(3);let T;for(T=0;T<3;T++)I[T]=i.Pq.Zero(),P[T]=i.I9.Zero();for(let e=0;e<20;e++){for(T=0;T<3;T++){const t=f[3*e+T];I[T].copyFromFloats(d[3*p[t]],d[3*p[t]+1],d[3*p[t]+2]),I[T].normalize(),P[T].copyFromFloats(.134765625*_[2*t]+.05859375+-.0390625*g[e],.2333984375*_[2*t+1]+.025390625+.01953125*g[e])}const t=(e,t,s,n)=>{const u=i.Pq.Lerp(I[0],I[2],t/o),d=i.Pq.Lerp(I[1],I[2],t/o),f=o===t?I[2]:i.Pq.Lerp(u,d,e/(o-t));let p;if(f.normalize(),r){const e=i.Pq.Lerp(I[0],I[2],n/o),t=i.Pq.Lerp(I[1],I[2],n/o);p=i.Pq.Lerp(e,t,s/(o-n))}else p=new i.Pq(f.x,f.y,f.z);p.x/=h,p.y/=l,p.z/=c,p.normalize();const _=i.I9.Lerp(P[0],P[2],t/o),g=i.I9.Lerp(P[1],P[2],t/o),T=o===t?P[2]:i.I9.Lerp(_,g,e/(o-t));y.push(f.x*h,f.y*l,f.z*c),x.push(p.x,p.y,p.z),A.push(T.x,a.rX?1-T.y:T.y),m.push(b),b++};for(let e=0;e<o;e++)for(let s=0;s+e<o;s++)t(s,e,s+1/3,e+1/3),t(s+1,e,s+1/3,e+1/3),t(s,e+1,s+1/3,e+1/3),s+e+1<o&&(t(s+1,e,s+2/3,e+2/3),t(s+1,e+1,s+2/3,e+2/3),t(s,e+1,s+2/3,e+2/3))}n.P._ComputeSides(t,y,m,x,A,e.frontUVs,e.backUVs);const E=new n.P;return E.indices=m,E.positions=y,E.normals=x,E.uvs=A,E}function h(e,t={},s=null){const i=new r.e(e,s);return t.sideOrientation=r.e._GetDefaultSideOrientation(t.sideOrientation),i._originalBuilderSideOrientation=t.sideOrientation,o(t).applyToMesh(i,t.updatable),i}const l={CreateIcoSphere:h};n.P.CreateIcoSphere=o,r.e.CreateIcoSphere=(e,t,s)=>h(e,t,s)},86840:(e,t,s)=>{s.d(t,{O:()=>o,p:()=>a});var i=s(54983),r=s(9191),n=s(60838);function a(e,t,s=null){const a=t.arc?t.arc<=0||t.arc>1?1:t.arc:1,o=void 0===t.closed||t.closed,h=t.shape,l=t.radius||1,c=t.tessellation||64,u=t.clip||0,d=t.updatable,f=r.e._GetDefaultSideOrientation(t.sideOrientation),p=t.cap||r.e.NO_CAP,_=2*Math.PI,g=[],m=t.invertUV||!1;let y=0,x=0;const A=_/c*a;let b,I;for(y=0;y<=c-u;y++){for(I=[],p!=r.e.CAP_START&&p!=r.e.CAP_ALL||(I.push(new i.Pq(0,h[0].y,0)),I.push(new i.Pq(Math.cos(y*A)*h[0].x*l,h[0].y,Math.sin(y*A)*h[0].x*l))),x=0;x<h.length;x++)b=new i.Pq(Math.cos(y*A)*h[x].x*l,h[x].y,Math.sin(y*A)*h[x].x*l),I.push(b);p!=r.e.CAP_END&&p!=r.e.CAP_ALL||(I.push(new i.Pq(Math.cos(y*A)*h[h.length-1].x*l,h[h.length-1].y,Math.sin(y*A)*h[h.length-1].x*l)),I.push(new i.Pq(0,h[h.length-1].y,0))),g.push(I)}return(0,n.fv)(e,{pathArray:g,closeArray:o,sideOrientation:f,updatable:d,invertUV:m,frontUVs:t.frontUVs,backUVs:t.backUVs},s)}const o={CreateLathe:a};r.e.CreateLathe=(e,t,s,i,r,n,o)=>a(e,{shape:t,radius:s,tessellation:i,sideOrientation:o,updatable:n},r)},96487:(e,t,s)=>{s.d(t,{NX:()=>f,dT:()=>p,e8:()=>l,nP:()=>c,sh:()=>d,uz:()=>u});var i=s(54983),r=s(9191),n=s(33543),a=s(22814),o=s(59396),h=s(70461);function l(e){const t=[],s=[],i=e.lines,r=e.colors,a=[];let o=0;for(let e=0;e<i.length;e++){const n=i[e];for(let i=0;i<n.length;i++){const{x:h,y:l,z:c}=n[i];if(s.push(h,l,c),r){const t=r[e],{r:s,g:n,b:o,a:h}=t[i];a.push(s,n,o,h)}i>0&&(t.push(o-1),t.push(o)),o++}}const h=new n.P;return h.indices=t,h.positions=s,r&&(h.colors=a),h}function c(e){const t=e.dashSize||3,s=e.gapSize||1,r=e.dashNb||200,a=e.points,o=[],h=[],l=i.Pq.Zero();let c=0,u=0,d=0,f=0,p=0,_=0,g=0;for(g=0;g<a.length-1;g++)a[g+1].subtractToRef(a[g],l),c+=l.length();for(d=c/r,f=t*d/(t+s),g=0;g<a.length-1;g++){a[g+1].subtractToRef(a[g],l),u=Math.floor(l.length()/d),l.normalize();for(let e=0;e<u;e++)p=d*e,o.push(a[g].x+p*l.x,a[g].y+p*l.y,a[g].z+p*l.z),o.push(a[g].x+(p+f)*l.x,a[g].y+(p+f)*l.y,a[g].z+(p+f)*l.z),h.push(_,_+1),_+=2}const m=new n.P;return m.positions=o,m.indices=h,m}function u(e,t,s=null){const i=t.instance,r=t.lines,n=t.colors;if(i){const e=i.getVerticesData(o.R.PositionKind);let t,s;n&&(t=i.getVerticesData(o.R.ColorKind));let a=0,h=0;for(let i=0;i<r.length;i++){const o=r[i];for(let r=0;r<o.length;r++)e[a]=o[r].x,e[a+1]=o[r].y,e[a+2]=o[r].z,n&&t&&(s=n[i],t[h]=s[r].r,t[h+1]=s[r].g,t[h+2]=s[r].b,t[h+3]=s[r].a,h+=4),a+=3}return i.updateVerticesData(o.R.PositionKind,e,!1,!1),n&&t&&i.updateVerticesData(o.R.ColorKind,t,!1,!1),i.refreshBoundingInfo(),i}const h=!!n,c=new a.l(e,s,null,void 0,void 0,h,t.useVertexAlpha,t.material);return l(t).applyToMesh(c,t.updatable),c}function d(e,t,s=null){const i=t.colors?[t.colors]:null;return u(e,{lines:[t.points],updatable:t.updatable,instance:t.instance,colors:i,useVertexAlpha:t.useVertexAlpha,material:t.material},s)}function f(e,t,s=null){const n=t.points,o=t.instance,l=t.gapSize||1,u=t.dashSize||3;if(o){const e=e=>{const t=i.Pq.Zero(),s=e.length/6;let r=0,a=0,h=0,l=0,c=0,u=0,d=0,f=0;for(d=0;d<n.length-1;d++)n[d+1].subtractToRef(n[d],t),r+=t.length();h=r/s;const p=o._creationDataStorage.dashSize;for(l=p*h/(p+o._creationDataStorage.gapSize),d=0;d<n.length-1;d++)for(n[d+1].subtractToRef(n[d],t),a=Math.floor(t.length()/h),t.normalize(),f=0;f<a&&u<e.length;)c=h*f,e[u]=n[d].x+c*t.x,e[u+1]=n[d].y+c*t.y,e[u+2]=n[d].z+c*t.z,e[u+3]=n[d].x+(c+l)*t.x,e[u+4]=n[d].y+(c+l)*t.y,e[u+5]=n[d].z+(c+l)*t.z,u+=6,f++;for(;u<e.length;)e[u]=n[d].x,e[u+1]=n[d].y,e[u+2]=n[d].z,u+=3};return(t.dashNb||t.dashSize||t.gapSize||t.useVertexAlpha||t.material)&&h.V.Warn("You have used an option other than points with the instance option. Please be aware that these other options will be ignored."),o.updateMeshPositions(e,!1),o}const d=new a.l(e,s,null,void 0,void 0,void 0,t.useVertexAlpha,t.material);return c(t).applyToMesh(d,t.updatable),d._creationDataStorage=new r.Ez,d._creationDataStorage.dashSize=u,d._creationDataStorage.gapSize=l,d}const p={CreateDashedLines:f,CreateLineSystem:u,CreateLines:d};n.P.CreateLineSystem=l,n.P.CreateDashedLines=c,r.e.CreateLines=(e,t,s=null,i=!1,r=null)=>d(e,{points:t,updatable:i,instance:r},s),r.e.CreateDashedLines=(e,t,s,i,r,n=null,a,o)=>f(e,{points:t,dashSize:s,gapSize:i,dashNb:r,updatable:a,instance:o},n)},93260:(e,t,s)=>{s.d(t,{LG:()=>a,QX:()=>h,x:()=>o});var i=s(9191),r=s(33543),n=s(28509);function a(e){const t=[],s=[],i=[],a=[],o=e.width||e.size||1,h=e.height||e.size||1,l=0===e.sideOrientation?0:e.sideOrientation||r.P.DEFAULTSIDE,c=o/2,u=h/2;s.push(-c,-u,0),i.push(0,0,-1),a.push(0,n.rX?1:0),s.push(c,-u,0),i.push(0,0,-1),a.push(1,n.rX?1:0),s.push(c,u,0),i.push(0,0,-1),a.push(1,n.rX?0:1),s.push(-c,u,0),i.push(0,0,-1),a.push(0,n.rX?0:1),t.push(0),t.push(1),t.push(2),t.push(0),t.push(2),t.push(3),r.P._ComputeSides(l,s,t,i,a,e.frontUVs,e.backUVs);const d=new r.P;return d.indices=t,d.positions=s,d.normals=i,d.uvs=a,d}function o(e,t={},s=null){const r=new i.e(e,s);return t.sideOrientation=i.e._GetDefaultSideOrientation(t.sideOrientation),r._originalBuilderSideOrientation=t.sideOrientation,a(t).applyToMesh(r,t.updatable),t.sourcePlane&&(r.translate(t.sourcePlane.normal,-t.sourcePlane.d),r.setDirection(t.sourcePlane.normal.scale(-1))),r}const h={CreatePlane:o};r.P.CreatePlane=a,i.e.CreatePlane=(e,t,s,i,r)=>o(e,{size:t,width:t,height:t,sideOrientation:r,updatable:i},s)},90044:(e,t,s)=>{s.d(t,{To:()=>u,qg:()=>p,sV:()=>f,v1:()=>d});var i=s(54983),r=s(39341),n=s(9191),a=s(33543),o=s(64883),h=s(59396),l=s(69583),c=s(28509);function u(e,t,s,n,o,l,u){const d=s||new Array(3),f=n,p=[],_=u||!1;for(let e=0;e<3;e++)void 0===d[e]&&(d[e]=new i.IU(0,0,1,1)),f&&void 0===f[e]&&(f[e]=new r.ov(1,1,1,1));const g=e.getVerticesData(h.R.PositionKind),m=e.getVerticesData(h.R.NormalKind),y=e.getVerticesData(h.R.UVKind),x=e.getIndices(),A=g.length/9;let b=0,I=0,P=0,T=0,E=0;const M=[0];if(_)for(let e=A;e<g.length/3;e+=4)I=g[3*(e+2)]-g[3*e],P=g[3*(e+2)+2]-g[3*e+2],T=Math.sqrt(I*I+P*P),E+=T,M.push(E);let v=0,D=0;for(let e=0;e<m.length;e+=3)Math.abs(m[e+1])<.001&&(D=1),Math.abs(m[e+1]-1)<.001&&(D=0),Math.abs(m[e+1]+1)<.001&&(D=2),v=e/3,1===D?(b=v-A,y[2*v]=b%4<1.5?_?d[D].x+(d[D].z-d[D].x)*M[Math.floor(b/4)]/E:d[D].x:_?d[D].x+(d[D].z-d[D].x)*M[Math.floor(b/4)+1]/E:d[D].z,y[2*v+1]=b%2==0?c.rX?1-d[D].w:d[D].w:c.rX?1-d[D].y:d[D].y):(y[2*v]=(1-y[2*v])*d[D].x+y[2*v]*d[D].z,y[2*v+1]=(1-y[2*v+1])*d[D].y+y[2*v+1]*d[D].w,c.rX&&(y[2*v+1]=1-y[2*v+1])),f&&p.push(f[D].r,f[D].g,f[D].b,f[D].a);a.P._ComputeSides(t,g,x,m,y,o,l);const S=new a.P;if(S.indices=x,S.positions=g,S.normals=m,S.uvs=y,f){const e=t===a.P.DOUBLESIDE?p.concat(p):p;S.colors=e}return S}function d(e,t,s=null,r=earcut){t.sideOrientation=n.e._GetDefaultSideOrientation(t.sideOrientation);const a=t.shape,h=t.holes||[],c=t.depth||0,d=t.smoothingThreshold||2,f=[];let p=[];for(let e=0;e<a.length;e++)f[e]=new i.I9(a[e].x,a[e].z);f[0].equalsWithEpsilon(f[f.length-1],1e-8)&&f.pop();const _=new o.L(e,f,s||l.q.LastCreatedScene,r);for(let e=0;e<h.length;e++){p=[];for(let t=0;t<h[e].length;t++)p.push(new i.I9(h[e][t].x,h[e][t].z));_.addHole(p)}const g=_.build(!1,c,d);return g._originalBuilderSideOrientation=t.sideOrientation,u(g,t.sideOrientation,t.faceUV,t.faceColors,t.frontUVs,t.backUVs,t.wrap).applyToMesh(g,t.updatable),g}function f(e,t,s=null,i=earcut){return d(e,t,s,i)}const p={ExtrudePolygon:f,CreatePolygon:d};a.P.CreatePolygon=u,n.e.CreatePolygon=(e,t,s,i,r,n,a=earcut)=>d(e,{shape:t,holes:i,updatable:r,sideOrientation:n},s,a),n.e.ExtrudePolygon=(e,t,s,i,r,n,a,o=earcut)=>f(e,{shape:t,holes:r,depth:s,updatable:n,sideOrientation:a},i,o)},59688:(e,t,s)=>{s.d(t,{D6:()=>l,Ei:()=>c,dc:()=>h});var i=s(54983),r=s(39341),n=s(9191),a=s(33543),o=s(28509);function h(e){const t=[];t[0]={vertex:[[0,0,1.732051],[1.632993,0,-.5773503],[-.8164966,1.414214,-.5773503],[-.8164966,-1.414214,-.5773503]],face:[[0,1,2],[0,2,3],[0,3,1],[1,3,2]]},t[1]={vertex:[[0,0,1.414214],[1.414214,0,0],[0,1.414214,0],[-1.414214,0,0],[0,-1.414214,0],[0,0,-1.414214]],face:[[0,1,2],[0,2,3],[0,3,4],[0,4,1],[1,4,5],[1,5,2],[2,5,3],[3,5,4]]},t[2]={vertex:[[0,0,1.070466],[.7136442,0,.7978784],[-.3568221,.618034,.7978784],[-.3568221,-.618034,.7978784],[.7978784,.618034,.3568221],[.7978784,-.618034,.3568221],[-.9341724,.381966,.3568221],[.1362939,1,.3568221],[.1362939,-1,.3568221],[-.9341724,-.381966,.3568221],[.9341724,.381966,-.3568221],[.9341724,-.381966,-.3568221],[-.7978784,.618034,-.3568221],[-.1362939,1,-.3568221],[-.1362939,-1,-.3568221],[-.7978784,-.618034,-.3568221],[.3568221,.618034,-.7978784],[.3568221,-.618034,-.7978784],[-.7136442,0,-.7978784],[0,0,-1.070466]],face:[[0,1,4,7,2],[0,2,6,9,3],[0,3,8,5,1],[1,5,11,10,4],[2,7,13,12,6],[3,9,15,14,8],[4,10,16,13,7],[5,8,14,17,11],[6,12,18,15,9],[10,11,17,19,16],[12,13,16,19,18],[14,15,18,19,17]]},t[3]={vertex:[[0,0,1.175571],[1.051462,0,.5257311],[.3249197,1,.5257311],[-.8506508,.618034,.5257311],[-.8506508,-.618034,.5257311],[.3249197,-1,.5257311],[.8506508,.618034,-.5257311],[.8506508,-.618034,-.5257311],[-.3249197,1,-.5257311],[-1.051462,0,-.5257311],[-.3249197,-1,-.5257311],[0,0,-1.175571]],face:[[0,1,2],[0,2,3],[0,3,4],[0,4,5],[0,5,1],[1,5,7],[1,7,6],[1,6,2],[2,6,8],[2,8,3],[3,8,9],[3,9,4],[4,9,10],[4,10,5],[5,10,7],[6,7,11],[6,11,8],[7,10,11],[8,11,9],[9,11,10]]},t[4]={vertex:[[0,0,1.070722],[.7148135,0,.7971752],[-.104682,.7071068,.7971752],[-.6841528,.2071068,.7971752],[-.104682,-.7071068,.7971752],[.6101315,.7071068,.5236279],[1.04156,.2071068,.1367736],[.6101315,-.7071068,.5236279],[-.3574067,1,.1367736],[-.7888348,-.5,.5236279],[-.9368776,.5,.1367736],[-.3574067,-1,.1367736],[.3574067,1,-.1367736],[.9368776,-.5,-.1367736],[.7888348,.5,-.5236279],[.3574067,-1,-.1367736],[-.6101315,.7071068,-.5236279],[-1.04156,-.2071068,-.1367736],[-.6101315,-.7071068,-.5236279],[.104682,.7071068,-.7971752],[.6841528,-.2071068,-.7971752],[.104682,-.7071068,-.7971752],[-.7148135,0,-.7971752],[0,0,-1.070722]],face:[[0,2,3],[1,6,5],[4,9,11],[7,15,13],[8,16,10],[12,14,19],[17,22,18],[20,21,23],[0,1,5,2],[0,3,9,4],[0,4,7,1],[1,7,13,6],[2,5,12,8],[2,8,10,3],[3,10,17,9],[4,11,15,7],[5,6,14,12],[6,13,20,14],[8,12,19,16],[9,17,18,11],[10,16,22,17],[11,18,21,15],[13,15,21,20],[14,20,23,19],[16,19,23,22],[18,22,23,21]]},t[5]={vertex:[[0,0,1.322876],[1.309307,0,.1889822],[-.9819805,.8660254,.1889822],[.1636634,-1.299038,.1889822],[.3273268,.8660254,-.9449112],[-.8183171,-.4330127,-.9449112]],face:[[0,3,1],[2,4,5],[0,1,4,2],[0,2,5,3],[1,3,5,4]]},t[6]={vertex:[[0,0,1.159953],[1.013464,0,.5642542],[-.3501431,.9510565,.5642542],[-.7715208,-.6571639,.5642542],[.6633206,.9510565,-.03144481],[.8682979,-.6571639,-.3996071],[-1.121664,.2938926,-.03144481],[-.2348831,-1.063314,-.3996071],[.5181548,.2938926,-.9953061],[-.5850262,-.112257,-.9953061]],face:[[0,1,4,2],[0,2,6,3],[1,5,8,4],[3,6,9,7],[5,7,9,8],[0,3,7,5,1],[2,4,8,9,6]]},t[7]={vertex:[[0,0,1.118034],[.8944272,0,.6708204],[-.2236068,.8660254,.6708204],[-.7826238,-.4330127,.6708204],[.6708204,.8660254,.2236068],[1.006231,-.4330127,-.2236068],[-1.006231,.4330127,.2236068],[-.6708204,-.8660254,-.2236068],[.7826238,.4330127,-.6708204],[.2236068,-.8660254,-.6708204],[-.8944272,0,-.6708204],[0,0,-1.118034]],face:[[0,1,4,2],[0,2,6,3],[1,5,8,4],[3,6,10,7],[5,9,11,8],[7,10,11,9],[0,3,7,9,5,1],[2,4,8,11,10,6]]},t[8]={vertex:[[-.729665,.670121,.319155],[-.655235,-.29213,-.754096],[-.093922,-.607123,.537818],[.702196,.595691,.485187],[.776626,-.36656,-.588064]],face:[[1,4,2],[0,1,2],[3,0,2],[4,3,2],[4,1,0,3]]},t[9]={vertex:[[-.868849,-.100041,.61257],[-.329458,.976099,.28078],[-.26629,-.013796,-.477654],[-.13392,-1.034115,.229829],[.738834,.707117,-.307018],[.859683,-.535264,-.338508]],face:[[3,0,2],[5,3,2],[4,5,2],[1,4,2],[0,1,2],[0,3,5,4,1]]},t[10]={vertex:[[-.610389,.243975,.531213],[-.187812,-.48795,-.664016],[-.187812,.9759,-.664016],[.187812,-.9759,.664016],[.798201,.243975,.132803]],face:[[1,3,0],[3,4,0],[3,1,4],[0,2,1],[0,4,2],[2,4,1]]},t[11]={vertex:[[-1.028778,.392027,-.048786],[-.640503,-.646161,.621837],[-.125162,-.395663,-.540059],[.004683,.888447,-.651988],[.125161,.395663,.540059],[.632925,-.791376,.433102],[1.031672,.157063,-.354165]],face:[[3,2,0],[2,1,0],[2,5,1],[0,4,3],[0,1,4],[4,1,5],[2,3,6],[3,4,6],[5,2,6],[4,5,6]]},t[12]={vertex:[[-.669867,.334933,-.529576],[-.669867,.334933,.529577],[-.4043,1.212901,0],[-.334933,-.669867,-.529576],[-.334933,-.669867,.529577],[.334933,.669867,-.529576],[.334933,.669867,.529577],[.4043,-1.212901,0],[.669867,-.334933,-.529576],[.669867,-.334933,.529577]],face:[[8,9,7],[6,5,2],[3,8,7],[5,0,2],[4,3,7],[0,1,2],[9,4,7],[1,6,2],[9,8,5,6],[8,3,0,5],[3,4,1,0],[4,9,6,1]]},t[13]={vertex:[[-.931836,.219976,-.264632],[-.636706,.318353,.692816],[-.613483,-.735083,-.264632],[-.326545,.979634,0],[-.318353,-.636706,.692816],[-.159176,.477529,-.856368],[.159176,-.477529,-.856368],[.318353,.636706,.692816],[.326545,-.979634,0],[.613482,.735082,-.264632],[.636706,-.318353,.692816],[.931835,-.219977,-.264632]],face:[[11,10,8],[7,9,3],[6,11,8],[9,5,3],[2,6,8],[5,0,3],[4,2,8],[0,1,3],[10,4,8],[1,7,3],[10,11,9,7],[11,6,5,9],[6,2,0,5],[2,4,1,0],[4,10,7,1]]},t[14]={vertex:[[-.93465,.300459,-.271185],[-.838689,-.260219,-.516017],[-.711319,.717591,.128359],[-.710334,-.156922,.080946],[-.599799,.556003,-.725148],[-.503838,-.004675,-.969981],[-.487004,.26021,.48049],[-.460089,-.750282,-.512622],[-.376468,.973135,-.325605],[-.331735,-.646985,.084342],[-.254001,.831847,.530001],[-.125239,-.494738,-.966586],[.029622,.027949,.730817],[.056536,-.982543,-.262295],[.08085,1.087391,.076037],[.125583,-.532729,.485984],[.262625,.599586,.780328],[.391387,-.726999,-.716259],[.513854,-.868287,.139347],[.597475,.85513,.326364],[.641224,.109523,.783723],[.737185,-.451155,.538891],[.848705,-.612742,-.314616],[.976075,.365067,.32976],[1.072036,-.19561,.084927]],face:[[15,18,21],[12,20,16],[6,10,2],[3,0,1],[9,7,13],[2,8,4,0],[0,4,5,1],[1,5,11,7],[7,11,17,13],[13,17,22,18],[18,22,24,21],[21,24,23,20],[20,23,19,16],[16,19,14,10],[10,14,8,2],[15,9,13,18],[12,15,21,20],[6,12,16,10],[3,6,2,0],[9,3,1,7],[9,15,12,6,3],[22,17,11,5,4,8,14,19,23,24]]};const s=e.type&&(e.type<0||e.type>=t.length)?0:e.type||0,n=e.size,h=e.sizeX||n||1,l=e.sizeY||n||1,c=e.sizeZ||n||1,u=e.custom||t[s],d=u.face.length,f=e.faceUV||new Array(d),p=e.faceColors,_=void 0===e.flat||e.flat,g=0===e.sideOrientation?0:e.sideOrientation||a.P.DEFAULTSIDE,m=[],y=[],x=[],A=[],b=[];let I=0,P=0;const T=[];let E,M,v,D,S,R,C=0,O=0;if(_)for(O=0;O<d;O++)p&&void 0===p[O]&&(p[O]=new r.ov(1,1,1,1)),f&&void 0===f[O]&&(f[O]=new i.IU(0,0,1,1));if(_)for(O=0;O<d;O++){const e=u.face[O].length;for(v=2*Math.PI/e,D=.5*Math.tan(v/2),S=.5,C=0;C<e;C++)m.push(u.vertex[u.face[O][C]][0]*h,u.vertex[u.face[O][C]][1]*l,u.vertex[u.face[O][C]][2]*c),T.push(I),I++,E=f[O].x+(f[O].z-f[O].x)*(.5+D),M=f[O].y+(f[O].w-f[O].y)*(S-.5),A.push(E,o.rX?1-M:M),R=D*Math.cos(v)-S*Math.sin(v),S=D*Math.sin(v)+S*Math.cos(v),D=R,p&&b.push(p[O].r,p[O].g,p[O].b,p[O].a);for(C=0;C<e-2;C++)y.push(T[0+P],T[C+2+P],T[C+1+P]);P+=e}else{for(C=0;C<u.vertex.length;C++)m.push(u.vertex[C][0]*h,u.vertex[C][1]*l,u.vertex[C][2]*c),A.push(0,o.rX?1:0);for(O=0;O<d;O++)for(C=0;C<u.face[O].length-2;C++)y.push(u.face[O][0],u.face[O][C+2],u.face[O][C+1])}a.P.ComputeNormals(m,y,x),a.P._ComputeSides(g,m,y,x,A,e.frontUVs,e.backUVs);const B=new a.P;return B.positions=m,B.indices=y,B.normals=x,B.uvs=A,p&&_&&(B.colors=b),B}function l(e,t={},s=null){const i=new n.e(e,s);return t.sideOrientation=n.e._GetDefaultSideOrientation(t.sideOrientation),i._originalBuilderSideOrientation=t.sideOrientation,h(t).applyToMesh(i,t.updatable),i}const c={CreatePolyhedron:l};a.P.CreatePolyhedron=h,n.e.CreatePolyhedron=(e,t,s)=>l(e,t,s)},60838:(e,t,s)=>{s.d(t,{Er:()=>c,X:()=>h,fv:()=>l});var i=s(54983),r=s(9191),n=s(59396),a=s(33543),o=s(28509);function h(e){let t=e.pathArray;const s=e.closeArray||!1,i=e.closePath||!1,r=e.invertUV||!1,h=Math.floor(t[0].length/2);let l=e.offset||h;l=l>h?h:Math.floor(l);const c=0===e.sideOrientation?0:e.sideOrientation||a.P.DEFAULTSIDE,u=e.uvs,d=e.colors,f=[],p=[],_=[],g=[],m=[],y=[],x=[],A=[];let b;const I=[],P=[];let T,E,M;if(t.length<2){const e=[],s=[];for(E=0;E<t[0].length-l;E++)e.push(t[0][E]),s.push(t[0][E+l]);t=[e,s]}let v=0;const D=i?1:0,S=s?1:0;let R,C,O,B,L,F;for(b=t[0].length,T=0;T<t.length+S;T++){for(x[T]=0,m[T]=[0],R=T===t.length?t[0]:t[T],C=R.length,b=b<C?b:C,M=0;M<C;)f.push(R[M].x,R[M].y,R[M].z),M>0&&(O=R[M].subtract(R[M-1]).length(),B=O+x[T],m[T].push(B),x[T]=B),M++;i&&(M--,f.push(R[0].x,R[0].y,R[0].z),O=R[M].subtract(R[0]).length(),B=O+x[T],m[T].push(B),x[T]=B),I[T]=C+D,P[T]=v,v+=C+D}let N,w,V=null,U=null;for(E=0;E<b+D;E++)for(A[E]=0,y[E]=[0],T=0;T<t.length-1+S;T++)L=t[T],F=T===t.length-1?t[0]:t[T+1],E===b?(V=L[0],U=F[0]):(V=L[E],U=F[E]),O=U.subtract(V).length(),B=O+A[E],y[E].push(B),A[E]=B;if(u)for(T=0;T<u.length;T++)g.push(u[T].x,o.rX?1-u[T].y:u[T].y);else for(T=0;T<t.length+S;T++)for(E=0;E<b+D;E++)N=0!=x[T]?m[T][E]/x[T]:0,w=0!=A[E]?y[E][T]/A[E]:0,r?g.push(w,N):g.push(N,o.rX?1-w:w);T=0;let k=0,W=I[T]-1,z=I[T+1]-1,q=W<z?W:z,H=P[1]-P[0];const G=I.length-1;for(;k<=q&&T<G;)p.push(k,k+H,k+1),p.push(k+H+1,k+1,k+H),k+=1,k===q&&(T++,H=P[T+1]-P[T],W=I[T]-1,z=I[T+1]-1,k=P[T],q=W<z?W+k:z+k);if(a.P.ComputeNormals(f,p,_),i){let e=0,s=0;for(T=0;T<t.length;T++){e=3*P[T],s=T+1<t.length?3*(P[T+1]-1):_.length-3,_[e]=.5*(_[e]+_[s]),_[e+1]=.5*(_[e+1]+_[s+1]),_[e+2]=.5*(_[e+2]+_[s+2]);const i=Math.sqrt(_[e]*_[e]+_[e+1]*_[e+1]+_[e+2]*_[e+2]);_[e]/=i,_[e+1]/=i,_[e+2]/=i,_[s]=_[e],_[s+1]=_[e+1],_[s+2]=_[e+2]}}if(s){let e=3*P[0],s=3*P[t.length];for(E=0;E<b+D;E++){_[e]=.5*(_[e]+_[s]),_[e+1]=.5*(_[e+1]+_[s+1]),_[e+2]=.5*(_[e+2]+_[s+2]);const t=Math.sqrt(_[e]*_[e]+_[e+1]*_[e+1]+_[e+2]*_[e+2]);_[e]/=t,_[e+1]/=t,_[e+2]/=t,_[s]=_[e],_[s+1]=_[e+1],_[s+2]=_[e+2],e+=3,s+=3}}a.P._ComputeSides(c,f,p,_,g,e.frontUVs,e.backUVs);let K=null;if(d){K=new Float32Array(4*d.length);for(let e=0;e<d.length;e++)K[4*e]=d[e].r,K[4*e+1]=d[e].g,K[4*e+2]=d[e].b,K[4*e+3]=d[e].a}const X=new a.P,j=new Float32Array(f),Y=new Float32Array(_),Z=new Float32Array(g);return X.indices=p,X.positions=j,X.normals=Y,X.uvs=Z,K&&X.set(K,n.R.ColorKind),i&&(X._idx=P),X}function l(e,t,s=null){const l=t.pathArray,c=t.closeArray,u=t.closePath,d=r.e._GetDefaultSideOrientation(t.sideOrientation),f=t.instance,p=t.updatable;if(f){const e=i.AA.Vector3[0].setAll(Number.MAX_VALUE),s=i.AA.Vector3[1].setAll(-Number.MAX_VALUE),h=t=>{let i=l[0].length;const n=f;let a=0;const o=n._originalBuilderSideOrientation===r.e.DOUBLESIDE?2:1;for(let r=1;r<=o;++r)for(let r=0;r<l.length;++r){const o=l[r],h=o.length;i=i<h?i:h;for(let r=0;r<i;++r){const i=o[r];t[a]=i.x,t[a+1]=i.y,t[a+2]=i.z,e.minimizeInPlaceFromFloats(i.x,i.y,i.z),s.maximizeInPlaceFromFloats(i.x,i.y,i.z),a+=3}if(n._creationDataStorage&&n._creationDataStorage.closePath){const e=o[0];t[a]=e.x,t[a+1]=e.y,t[a+2]=e.z,a+=3}}},c=f.getVerticesData(n.R.PositionKind);if(h(c),f.hasBoundingInfo?f.getBoundingInfo().reConstruct(e,s,f._worldMatrix):f.buildBoundingInfo(e,s,f._worldMatrix),f.updateVerticesData(n.R.PositionKind,c,!1,!1),t.colors){const e=f.getVerticesData(n.R.ColorKind);for(let s=0,i=0;s<t.colors.length;s++,i+=4){const r=t.colors[s];e[i]=r.r,e[i+1]=r.g,e[i+2]=r.b,e[i+3]=r.a}f.updateVerticesData(n.R.ColorKind,e,!1,!1)}if(t.uvs){const e=f.getVerticesData(n.R.UVKind);for(let s=0;s<t.uvs.length;s++)e[2*s]=t.uvs[s].x,e[2*s+1]=o.rX?1-t.uvs[s].y:t.uvs[s].y;f.updateVerticesData(n.R.UVKind,e,!1,!1)}if(!f.areNormalsFrozen||f.isFacetDataEnabled){const e=f.getIndices(),t=f.getVerticesData(n.R.NormalKind),s=f.isFacetDataEnabled?f.getFacetDataParameters():null;if(a.P.ComputeNormals(c,e,t,s),f._creationDataStorage&&f._creationDataStorage.closePath){let e=0,s=0;for(let i=0;i<l.length;i++)e=3*f._creationDataStorage.idx[i],s=i+1<l.length?3*(f._creationDataStorage.idx[i+1]-1):t.length-3,t[e]=.5*(t[e]+t[s]),t[e+1]=.5*(t[e+1]+t[s+1]),t[e+2]=.5*(t[e+2]+t[s+2]),t[s]=t[e],t[s+1]=t[e+1],t[s+2]=t[e+2]}f.areNormalsFrozen||f.updateVerticesData(n.R.NormalKind,t,!1,!1)}return f}{const i=new r.e(e,s);i._originalBuilderSideOrientation=d,i._creationDataStorage=new r.Ez;const n=h(t);return u&&(i._creationDataStorage.idx=n._idx),i._creationDataStorage.closePath=u,i._creationDataStorage.closeArray=c,n.applyToMesh(i,p),i}}const c={CreateRibbon:l};a.P.CreateRibbon=h,r.e.CreateRibbon=(e,t,s=!1,i,r,n,a=!1,o,h)=>l(e,{pathArray:t,closeArray:s,closePath:i,offset:r,updatable:a,sideOrientation:o,instance:h},n)},32725:(e,t,s)=>{s.d(t,{Vc:()=>c,ei:()=>h,tF:()=>o});var i=s(54983),r=s(9191),n=s(60838),a=s(74539);function o(e,t,s=null){const i=t.path,n=t.shape,a=t.scale||1,o=t.rotation||0,h=0===t.cap?0:t.cap||r.e.NO_CAP,c=t.updatable,u=r.e._GetDefaultSideOrientation(t.sideOrientation),d=t.instance||null,f=t.invertUV||!1,p=t.closeShape||!1;return l(e,n,i,a,o,null,null,t.closePath||!1,p,h,!1,s,!!c,u,d,f,t.frontUVs||null,t.backUVs||null,t.firstNormal||null,!!t.adjustFrame)}function h(e,t,s=null){const i=t.path,n=t.shape,a=t.scaleFunction||(()=>1),o=t.rotationFunction||(()=>0),h=t.closePath||t.ribbonCloseArray||!1,c=t.closeShape||t.ribbonClosePath||!1,u=0===t.cap?0:t.cap||r.e.NO_CAP,d=t.updatable,f=t.firstNormal||null,p=t.adjustFrame||!1;return l(e,n,i,null,null,a,o,h,c,u,!0,s,!!d,r.e._GetDefaultSideOrientation(t.sideOrientation),t.instance||null,t.invertUV||!1,t.frontUVs||null,t.backUVs||null,f,p)}function l(e,t,s,o,h,l,c,u,d,f,p,_,g,m,y,x,A,b,I,P){const T=(e,t,s,n,a,o,h,l,c,u,d)=>{const f=s.getTangents(),p=s.getNormals(),_=s.getBinormals(),g=s.getDistances();if(d)for(let e=0;e<f.length;e++)if(0==f[e].x&&0==f[e].y&&0==f[e].z&&f[e].copyFrom(f[e-1]),0==p[e].x&&0==p[e].y&&0==p[e].z&&p[e].copyFrom(p[e-1]),0==_[e].x&&0==_[e].y&&0==_[e].z&&_[e].copyFrom(_[e-1]),e>0){let t=f[e-1];i.Pq.Dot(t,f[e])<0&&f[e].scaleInPlace(-1),t=p[e-1],i.Pq.Dot(t,p[e])<0&&p[e].scaleInPlace(-1),t=_[e-1],i.Pq.Dot(t,_[e])<0&&_[e].scaleInPlace(-1)}let m=0;const y=u&&l?l:()=>null!==o?o:0,x=u&&h?h:()=>null!==a?a:1;let A=c===r.e.NO_CAP||c===r.e.CAP_END?0:2;const b=i.AA.Matrix[0];for(let s=0;s<t.length;s++){const r=[],a=y(s,g[s]),o=x(s,g[s]);i.uq.RotationAxisToRef(f[s],m,b);for(let n=0;n<e.length;n++){const a=f[s].scale(e[n].z).add(p[s].scale(e[n].x)).add(_[s].scale(e[n].y)),h=i.Pq.Zero();i.Pq.TransformCoordinatesToRef(a,b,h),h.scaleInPlace(o).addInPlace(t[s]),r[n]=h}n[A]=r,m+=a,A++}const I=e=>{const t=Array(),s=i.Pq.Zero();let r;for(r=0;r<e.length;r++)s.addInPlace(e[r]);for(s.scaleInPlace(1/e.length),r=0;r<e.length;r++)t.push(s);return t};switch(c){case r.e.NO_CAP:break;case r.e.CAP_START:n[0]=I(n[2]),n[1]=n[2];break;case r.e.CAP_END:n[A]=n[A-1],n[A+1]=I(n[A-1]);break;case r.e.CAP_ALL:n[0]=I(n[2]),n[1]=n[2],n[A]=n[A-1],n[A+1]=I(n[A-1])}return n};let E,M;if(y){const e=y._creationDataStorage;return E=I?e.path3D.update(s,I):e.path3D.update(s),M=T(t,s,e.path3D,e.pathArray,o,h,l,c,e.cap,p,P),(0,n.fv)("",{pathArray:M,closeArray:!1,closePath:!1,offset:0,updatable:!1,sideOrientation:0,instance:y},_||void 0)}E=I?new a.tO(s,I):new a.tO(s),M=T(t,s,E,new Array,o,h,l,c,f=f<0||f>3?0:f,p,P);const v=(0,n.fv)(e,{pathArray:M,closeArray:u,closePath:d,updatable:g,sideOrientation:m,invertUV:x,frontUVs:A||void 0,backUVs:b||void 0},_);return v._creationDataStorage.pathArray=M,v._creationDataStorage.path3D=E,v._creationDataStorage.cap=f,v}const c={ExtrudeShape:o,ExtrudeShapeCustom:h};r.e.ExtrudeShape=(e,t,s,i,n,a,h=null,l,c,u)=>o(e,{shape:t,path:s,scale:i,rotation:n,cap:0===a?0:a||r.e.NO_CAP,sideOrientation:c,instance:u,updatable:l},h),r.e.ExtrudeShapeCustom=(e,t,s,i,n,a,o,l,c,u,d,f)=>h(e,{shape:t,path:s,scaleFunction:i,rotationFunction:n,ribbonCloseArray:a,ribbonClosePath:o,cap:0===l?0:l||r.e.NO_CAP,sideOrientation:d,instance:f,updatable:u},c)},90197:(e,t,s)=>{s.d(t,{W$:()=>o,_6:()=>h,z2:()=>l});var i=s(54983),r=s(9191),n=s(33543),a=s(28509);function o(e){const t=0|(e.segments||32),s=e.diameterX||e.diameter||1,r=e.diameterY||e.diameter||1,o=e.diameterZ||e.diameter||1,h=e.arc&&(e.arc<=0||e.arc>1)?1:e.arc||1,l=e.slice&&e.slice<=0?1:e.slice||1,c=0===e.sideOrientation?0:e.sideOrientation||n.P.DEFAULTSIDE,u=!!e.dedupTopBottomIndices,d=new i.Pq(s/2,r/2,o/2),f=2+t,p=2*f,_=[],g=[],m=[],y=[];for(let e=0;e<=f;e++){const t=e/f,s=t*Math.PI*l;for(let e=0;e<=p;e++){const r=e/p,n=r*Math.PI*2*h,o=i.uq.RotationZ(-s),l=i.uq.RotationY(n),c=i.Pq.TransformCoordinates(i.Pq.Up(),o),u=i.Pq.TransformCoordinates(c,l),f=u.multiply(d),_=u.divide(d).normalize();g.push(f.x,f.y,f.z),m.push(_.x,_.y,_.z),y.push(r,a.rX?1-t:t)}if(e>0){const t=g.length/3;for(let s=t-2*(p+1);s+p+2<t;s++)u?(e>1&&(_.push(s),_.push(s+1),_.push(s+p+1)),(e<f||l<1)&&(_.push(s+p+1),_.push(s+1),_.push(s+p+2))):(_.push(s),_.push(s+1),_.push(s+p+1),_.push(s+p+1),_.push(s+1),_.push(s+p+2))}}n.P._ComputeSides(c,g,_,m,y,e.frontUVs,e.backUVs);const x=new n.P;return x.indices=_,x.positions=g,x.normals=m,x.uvs=y,x}function h(e,t={},s=null){const i=new r.e(e,s);return t.sideOrientation=r.e._GetDefaultSideOrientation(t.sideOrientation),i._originalBuilderSideOrientation=t.sideOrientation,o(t).applyToMesh(i,t.updatable),i}const l={CreateSphere:h};n.P.CreateSphere=o,r.e.CreateSphere=(e,t,s,i,r,n)=>h(e,{segments:t,diameterX:s,diameterY:s,diameterZ:s,sideOrientation:n,updatable:r},i)},95495:(e,t,s)=>{s.d(t,{c:()=>u,r:()=>c});var i=s(74539),r=s(54983),n=s(9191),a=s(34116),o=s(90044);class h{constructor(e){this._paths=[],this._tempPaths=[],this._holes=[],this._resolution=e}moveTo(e,t){this._currentPath=new i.Cu(e,t),this._tempPaths.push(this._currentPath)}lineTo(e,t){this._currentPath.addLineTo(e,t)}quadraticCurveTo(e,t,s,i){this._currentPath.addQuadraticCurveTo(e,t,s,i,this._resolution)}bezierCurveTo(e,t,s,i,r,n){this._currentPath.addBezierCurveTo(e,t,s,i,r,n,this._resolution)}extractHoles(){for(const e of this._tempPaths)e.area()>0?this._holes.push(e):this._paths.push(e);if(!this._paths.length&&this._holes.length){const e=this._holes;this._holes=this._paths,this._paths=e}this._tempPaths.length=0}get paths(){return this._paths}get holes(){return this._holes}}function l(e,t,s,i,r,n){const a=n.glyphs[e]||n.glyphs["?"];if(!a)return null;const o=new h(r);if(a.o){const e=a.o.split(" ");for(let r=0,n=e.length;r<n;)switch(e[r++]){case"m":{const n=parseInt(e[r++])*t+s,a=parseInt(e[r++])*t+i;o.moveTo(n,a);break}case"l":{const n=parseInt(e[r++])*t+s,a=parseInt(e[r++])*t+i;o.lineTo(n,a);break}case"q":{const n=parseInt(e[r++])*t+s,a=parseInt(e[r++])*t+i,h=parseInt(e[r++])*t+s,l=parseInt(e[r++])*t+i;o.quadraticCurveTo(h,l,n,a);break}case"b":{const n=parseInt(e[r++])*t+s,a=parseInt(e[r++])*t+i,h=parseInt(e[r++])*t+s,l=parseInt(e[r++])*t+i,c=parseInt(e[r++])*t+s,u=parseInt(e[r++])*t+i;o.bezierCurveTo(h,l,c,u,n,a);break}}}return o.extractHoles(),{offsetX:a.ha*t,shapePath:o}}function c(e,t,s,i){const r=Array.from(e),n=t/i.resolution,a=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*n,o=[];let h=0,c=0;for(let e=0;e<r.length;e++){const t=r[e];if("\n"===t)h=0,c-=a;else{const e=l(t,n,h,c,s,i);e&&(h+=e.offsetX,o.push(e.shapePath))}}return o}function u(e,t,s,i={size:50,resolution:8,depth:1},h=null,l=earcut){const u=c(t,i.size||50,i.resolution||8,s),d=[];let f=0;for(const t of u){if(!t.paths.length)continue;const s=t.holes.slice();for(const a of t.paths){const t=[],c=[],u=a.getPoints();for(const e of u)c.push(new r.Pq(e.x,0,e.y));const p=s.slice();for(const e of p){const i=e.getPoints();let n=!1;for(const e of i)if(a.isPointInside(e)){n=!0;break}if(!n)continue;const o=[];for(const e of i)o.push(new r.Pq(e.x,0,e.y));t.push(o),s.splice(s.indexOf(e),1)}if(!t.length&&s.length)for(const e of s){const s=e.getPoints(),i=[];for(const e of s)i.push(new r.Pq(e.x,0,e.y));t.push(i)}const _=(0,o.sV)(e,{shape:c,holes:t.length?t:void 0,depth:i.depth||1,faceUV:i.faceUV||i.perLetterFaceUV?.(f),faceColors:i.faceColors||i.perLetterFaceColors?.(f),sideOrientation:n.e._GetDefaultSideOrientation(i.sideOrientation||n.e.DOUBLESIDE)},h,l);d.push(_),f++}}const p=n.e.MergeMeshes(d,!0,!0);if(p){const t=p.getBoundingInfo().boundingBox;p.position.x+=-(t.minimumWorld.x+t.maximumWorld.x)/2,p.position.y+=-(t.minimumWorld.y+t.maximumWorld.y)/2,p.position.z+=-(t.minimumWorld.z+t.maximumWorld.z)/2+t.extendSize.z,p.name=e;const s=new a.V("pivot",h);s.rotation.x=-Math.PI/2,p.parent=s,p.bakeCurrentTransformIntoVertices(),p.parent=null,s.dispose()}return p}},38585:(e,t,s)=>{s.d(t,{UY:()=>l,Xk:()=>u,uk:()=>c});var i=s(54983),r=s(39341),n=s(9191),a=s(33543),o=s(57088),h=s(28509);function l(e){const t=e.faceUV||new Array(6),s=e.faceColors,l=e.pattern||n.e.NO_FLIP,c=e.width||e.size||1,u=e.height||e.size||1,d=e.depth||e.size||1,f=e.tileWidth||e.tileSize||1,p=e.tileHeight||e.tileSize||1,_=e.alignHorizontal||0,g=e.alignVertical||0,m=0===e.sideOrientation?0:e.sideOrientation||a.P.DEFAULTSIDE;for(let e=0;e<6;e++)void 0===t[e]&&(t[e]=new i.IU(0,0,1,1)),s&&void 0===s[e]&&(s[e]=new r.ov(1,1,1,1));const y=c/2,x=u/2,A=d/2,b=[];for(let e=0;e<2;e++)b[e]=(0,o.jR)({pattern:l,tileWidth:f,tileHeight:p,width:c,height:u,alignVertical:g,alignHorizontal:_,sideOrientation:m});for(let e=2;e<4;e++)b[e]=(0,o.jR)({pattern:l,tileWidth:f,tileHeight:p,width:d,height:u,alignVertical:g,alignHorizontal:_,sideOrientation:m});let I=g;g===n.e.BOTTOM?I=n.e.TOP:g===n.e.TOP&&(I=n.e.BOTTOM);for(let e=4;e<6;e++)b[e]=(0,o.jR)({pattern:l,tileWidth:f,tileHeight:p,width:c,height:d,alignVertical:I,alignHorizontal:_,sideOrientation:m});let P=[],T=[],E=[],M=[];const v=[],D=[],S=[],R=[];let C=0,O=0;for(let e=0;e<6;e++){const r=b[e].positions.length;D[e]=[],S[e]=[];for(let t=0;t<r/3;t++)D[e].push(new i.Pq(b[e].positions[3*t],b[e].positions[3*t+1],b[e].positions[3*t+2])),S[e].push(new i.Pq(b[e].normals[3*t],b[e].normals[3*t+1],b[e].normals[3*t+2]));C=b[e].uvs.length,R[e]=[];for(let s=0;s<C;s+=2)R[e][s]=t[e].x+(t[e].z-t[e].x)*b[e].uvs[s],R[e][s+1]=t[e].y+(t[e].w-t[e].y)*b[e].uvs[s+1],h.rX&&(R[e][s+1]=1-R[e][s+1]);if(E=E.concat(R[e]),M=M.concat(b[e].indices.map((e=>e+O))),O+=D[e].length,s)for(let t=0;t<4;t++)v.push(s[e].r,s[e].g,s[e].b,s[e].a)}const B=new i.Pq(0,0,A),L=i.uq.RotationY(Math.PI);P=D[0].map((e=>i.Pq.TransformNormal(e,L).add(B))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]),T=S[0].map((e=>i.Pq.TransformNormal(e,L))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]),P=P.concat(D[1].map((e=>e.subtract(B))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),T=T.concat(S[1].map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]));const F=new i.Pq(y,0,0),N=i.uq.RotationY(-Math.PI/2);P=P.concat(D[2].map((e=>i.Pq.TransformNormal(e,N).add(F))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),T=T.concat(S[2].map((e=>i.Pq.TransformNormal(e,N))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]));const w=i.uq.RotationY(Math.PI/2);P=P.concat(D[3].map((e=>i.Pq.TransformNormal(e,w).subtract(F))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),T=T.concat(S[3].map((e=>i.Pq.TransformNormal(e,w))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]));const V=new i.Pq(0,x,0),U=i.uq.RotationX(Math.PI/2);P=P.concat(D[4].map((e=>i.Pq.TransformNormal(e,U).add(V))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),T=T.concat(S[4].map((e=>i.Pq.TransformNormal(e,U))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]));const k=i.uq.RotationX(-Math.PI/2);P=P.concat(D[5].map((e=>i.Pq.TransformNormal(e,k).subtract(V))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),T=T.concat(S[5].map((e=>i.Pq.TransformNormal(e,k))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),a.P._ComputeSides(m,P,M,T,E);const W=new a.P;if(W.indices=M,W.positions=P,W.normals=T,W.uvs=E,s){const e=m===a.P.DOUBLESIDE?v.concat(v):v;W.colors=e}return W}function c(e,t,s=null){const i=new n.e(e,s);return t.sideOrientation=n.e._GetDefaultSideOrientation(t.sideOrientation),i._originalBuilderSideOrientation=t.sideOrientation,l(t).applyToMesh(i,t.updatable),i}const u={CreateTiledBox:c};a.P.CreateTiledBox=l},57088:(e,t,s)=>{s.d(t,{HU:()=>a,jR:()=>n,wA:()=>o});var i=s(9191),r=s(33543);function n(e){const t=e.pattern||i.e.NO_FLIP,s=e.tileWidth||e.tileSize||1,n=e.tileHeight||e.tileSize||1,a=e.alignHorizontal||0,o=e.alignVertical||0,h=e.width||e.size||1,l=Math.floor(h/s);let c=h-l*s;const u=e.height||e.size||1,d=Math.floor(u/n);let f=u-d*n;const p=s*l/2,_=n*d/2;let g=0,m=0,y=0,x=0,A=0,b=0;if(c>0||f>0){switch(y=-p,x=-_,A=p,b=_,a){case i.e.CENTER:c/=2,y-=c,A+=c;break;case i.e.LEFT:A+=c,g=-c/2;break;case i.e.RIGHT:y-=c,g=c/2}switch(o){case i.e.CENTER:f/=2,x-=f,b+=f;break;case i.e.BOTTOM:b+=f,m=-f/2;break;case i.e.TOP:x-=f,m=f/2}}const I=[],P=[],T=[];T[0]=[0,0,1,0,1,1,0,1],T[1]=[0,0,1,0,1,1,0,1],t!==i.e.ROTATE_TILE&&t!==i.e.ROTATE_ROW||(T[1]=[1,1,0,1,0,0,1,0]),t!==i.e.FLIP_TILE&&t!==i.e.FLIP_ROW||(T[1]=[1,0,0,0,0,1,1,1]),t!==i.e.FLIP_N_ROTATE_TILE&&t!==i.e.FLIP_N_ROTATE_ROW||(T[1]=[0,1,1,1,1,0,0,0]);let E=[];const M=[],v=[];let D=0;for(let e=0;e<d;e++)for(let r=0;r<l;r++)I.push(r*s-p+g,e*n-_+m,0),I.push((r+1)*s-p+g,e*n-_+m,0),I.push((r+1)*s-p+g,(e+1)*n-_+m,0),I.push(r*s-p+g,(e+1)*n-_+m,0),v.push(D,D+1,D+3,D+1,D+2,D+3),E=t===i.e.FLIP_TILE||t===i.e.ROTATE_TILE||t===i.e.FLIP_N_ROTATE_TILE?E.concat(T[(r%2+e%2)%2]):t===i.e.FLIP_ROW||t===i.e.ROTATE_ROW||t===i.e.FLIP_N_ROTATE_ROW?E.concat(T[e%2]):E.concat(T[0]),M.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1),D+=4;if(c>0||f>0){const e=f>0&&(o===i.e.CENTER||o===i.e.TOP),r=f>0&&(o===i.e.CENTER||o===i.e.BOTTOM),h=c>0&&(a===i.e.CENTER||a===i.e.RIGHT),u=c>0&&(a===i.e.CENTER||a===i.e.LEFT);let T,S,R,C,O=[];if(e&&h&&(I.push(y+g,x+m,0),I.push(-p+g,x+m,0),I.push(-p+g,x+f+m,0),I.push(y+g,x+f+m,0),v.push(D,D+1,D+3,D+1,D+2,D+3),D+=4,T=1-c/s,S=1-f/n,R=1,C=1,O=[T,S,R,S,R,C,T,C],t===i.e.ROTATE_ROW&&(O=[1-T,1-S,1-R,1-S,1-R,1-C,1-T,1-C]),t===i.e.FLIP_ROW&&(O=[1-T,S,1-R,S,1-R,C,1-T,C]),t===i.e.FLIP_N_ROTATE_ROW&&(O=[T,1-S,R,1-S,R,1-C,T,1-C]),E=E.concat(O),M.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)),e&&u&&(I.push(p+g,x+m,0),I.push(A+g,x+m,0),I.push(A+g,x+f+m,0),I.push(p+g,x+f+m,0),v.push(D,D+1,D+3,D+1,D+2,D+3),D+=4,T=0,S=1-f/n,R=c/s,C=1,O=[T,S,R,S,R,C,T,C],(t===i.e.ROTATE_ROW||t===i.e.ROTATE_TILE&&l%2==0)&&(O=[1-T,1-S,1-R,1-S,1-R,1-C,1-T,1-C]),(t===i.e.FLIP_ROW||t===i.e.FLIP_TILE&&l%2==0)&&(O=[1-T,S,1-R,S,1-R,C,1-T,C]),(t===i.e.FLIP_N_ROTATE_ROW||t===i.e.FLIP_N_ROTATE_TILE&&l%2==0)&&(O=[T,1-S,R,1-S,R,1-C,T,1-C]),E=E.concat(O),M.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)),r&&h&&(I.push(y+g,_+m,0),I.push(-p+g,_+m,0),I.push(-p+g,b+m,0),I.push(y+g,b+m,0),v.push(D,D+1,D+3,D+1,D+2,D+3),D+=4,T=1-c/s,S=0,R=1,C=f/n,O=[T,S,R,S,R,C,T,C],(t===i.e.ROTATE_ROW&&d%2==1||t===i.e.ROTATE_TILE&&d%1==0)&&(O=[1-T,1-S,1-R,1-S,1-R,1-C,1-T,1-C]),(t===i.e.FLIP_ROW&&d%2==1||t===i.e.FLIP_TILE&&d%2==0)&&(O=[1-T,S,1-R,S,1-R,C,1-T,C]),(t===i.e.FLIP_N_ROTATE_ROW&&d%2==1||t===i.e.FLIP_N_ROTATE_TILE&&d%2==0)&&(O=[T,1-S,R,1-S,R,1-C,T,1-C]),E=E.concat(O),M.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)),r&&u&&(I.push(p+g,_+m,0),I.push(A+g,_+m,0),I.push(A+g,b+m,0),I.push(p+g,b+m,0),v.push(D,D+1,D+3,D+1,D+2,D+3),D+=4,T=0,S=0,R=c/s,C=f/n,O=[T,S,R,S,R,C,T,C],(t===i.e.ROTATE_ROW&&d%2==1||t===i.e.ROTATE_TILE&&(d+l)%2==1)&&(O=[1-T,1-S,1-R,1-S,1-R,1-C,1-T,1-C]),(t===i.e.FLIP_ROW&&d%2==1||t===i.e.FLIP_TILE&&(d+l)%2==1)&&(O=[1-T,S,1-R,S,1-R,C,1-T,C]),(t===i.e.FLIP_N_ROTATE_ROW&&d%2==1||t===i.e.FLIP_N_ROTATE_TILE&&(d+l)%2==1)&&(O=[T,1-S,R,1-S,R,1-C,T,1-C]),E=E.concat(O),M.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)),e){const e=[];T=0,S=1-f/n,R=1,C=1,e[0]=[T,S,R,S,R,C,T,C],e[1]=[T,S,R,S,R,C,T,C],t!==i.e.ROTATE_TILE&&t!==i.e.ROTATE_ROW||(e[1]=[1-T,1-S,1-R,1-S,1-R,1-C,1-T,1-C]),t!==i.e.FLIP_TILE&&t!==i.e.FLIP_ROW||(e[1]=[1-T,S,1-R,S,1-R,C,1-T,C]),t!==i.e.FLIP_N_ROTATE_TILE&&t!==i.e.FLIP_N_ROTATE_ROW||(e[1]=[T,1-S,R,1-S,R,1-C,T,1-C]);for(let r=0;r<l;r++)I.push(r*s-p+g,x+m,0),I.push((r+1)*s-p+g,x+m,0),I.push((r+1)*s-p+g,x+f+m,0),I.push(r*s-p+g,x+f+m,0),v.push(D,D+1,D+3,D+1,D+2,D+3),D+=4,E=t===i.e.FLIP_TILE||t===i.e.ROTATE_TILE||t===i.e.FLIP_N_ROTATE_TILE?E.concat(e[(r+1)%2]):t===i.e.FLIP_ROW||t===i.e.ROTATE_ROW||t===i.e.FLIP_N_ROTATE_ROW?E.concat(e[1]):E.concat(e[0]),M.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)}if(r){const e=[];T=0,S=0,R=1,C=f/n,e[0]=[T,S,R,S,R,C,T,C],e[1]=[T,S,R,S,R,C,T,C],t!==i.e.ROTATE_TILE&&t!==i.e.ROTATE_ROW||(e[1]=[1-T,1-S,1-R,1-S,1-R,1-C,1-T,1-C]),t!==i.e.FLIP_TILE&&t!==i.e.FLIP_ROW||(e[1]=[1-T,S,1-R,S,1-R,C,1-T,C]),t!==i.e.FLIP_N_ROTATE_TILE&&t!==i.e.FLIP_N_ROTATE_ROW||(e[1]=[T,1-S,R,1-S,R,1-C,T,1-C]);for(let r=0;r<l;r++)I.push(r*s-p+g,b-f+m,0),I.push((r+1)*s-p+g,b-f+m,0),I.push((r+1)*s-p+g,b+m,0),I.push(r*s-p+g,b+m,0),v.push(D,D+1,D+3,D+1,D+2,D+3),D+=4,E=t===i.e.FLIP_TILE||t===i.e.ROTATE_TILE||t===i.e.FLIP_N_ROTATE_TILE?E.concat(e[(r+d)%2]):t===i.e.FLIP_ROW||t===i.e.ROTATE_ROW||t===i.e.FLIP_N_ROTATE_ROW?E.concat(e[d%2]):E.concat(e[0]),M.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)}if(h){const e=[];T=1-c/s,S=0,R=1,C=1,e[0]=[T,S,R,S,R,C,T,C],e[1]=[T,S,R,S,R,C,T,C],t!==i.e.ROTATE_TILE&&t!==i.e.ROTATE_ROW||(e[1]=[1-T,1-S,1-R,1-S,1-R,1-C,1-T,1-C]),t!==i.e.FLIP_TILE&&t!==i.e.FLIP_ROW||(e[1]=[1-T,S,1-R,S,1-R,C,1-T,C]),t!==i.e.FLIP_N_ROTATE_TILE&&t!==i.e.FLIP_N_ROTATE_ROW||(e[1]=[T,1-S,R,1-S,R,1-C,T,1-C]);for(let s=0;s<d;s++)I.push(y+g,s*n-_+m,0),I.push(y+c+g,s*n-_+m,0),I.push(y+c+g,(s+1)*n-_+m,0),I.push(y+g,(s+1)*n-_+m,0),v.push(D,D+1,D+3,D+1,D+2,D+3),D+=4,E=t===i.e.FLIP_TILE||t===i.e.ROTATE_TILE||t===i.e.FLIP_N_ROTATE_TILE?E.concat(e[(s+1)%2]):t===i.e.FLIP_ROW||t===i.e.ROTATE_ROW||t===i.e.FLIP_N_ROTATE_ROW?E.concat(e[s%2]):E.concat(e[0]),M.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)}if(u){const e=[];T=0,S=0,R=c/n,C=1,e[0]=[T,S,R,S,R,C,T,C],e[1]=[T,S,R,S,R,C,T,C],t!==i.e.ROTATE_TILE&&t!==i.e.ROTATE_ROW||(e[1]=[1-T,1-S,1-R,1-S,1-R,1-C,1-T,1-C]),t!==i.e.FLIP_TILE&&t!==i.e.FLIP_ROW||(e[1]=[1-T,S,1-R,S,1-R,C,1-T,C]),t!==i.e.FLIP_N_ROTATE_TILE&&t!==i.e.FLIP_N_ROTATE_ROW||(e[1]=[T,1-S,R,1-S,R,1-C,T,1-C]);for(let s=0;s<d;s++)I.push(A-c+g,s*n-_+m,0),I.push(A+g,s*n-_+m,0),I.push(A+g,(s+1)*n-_+m,0),I.push(A-c+g,(s+1)*n-_+m,0),v.push(D,D+1,D+3,D+1,D+2,D+3),D+=4,E=t===i.e.FLIP_TILE||t===i.e.ROTATE_TILE||t===i.e.FLIP_N_ROTATE_TILE?E.concat(e[(s+l)%2]):t===i.e.FLIP_ROW||t===i.e.ROTATE_ROW||t===i.e.FLIP_N_ROTATE_ROW?E.concat(e[s%2]):E.concat(e[0]),M.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)}}const S=0===e.sideOrientation?0:e.sideOrientation||r.P.DEFAULTSIDE;r.P._ComputeSides(S,I,v,P,E,e.frontUVs,e.backUVs);const R=new r.P;R.indices=v,R.positions=I,R.normals=P,R.uvs=E;const C=S===r.P.DOUBLESIDE?M.concat(M):M;return R.colors=C,R}function a(e,t,s=null){const r=new i.e(e,s);return t.sideOrientation=i.e._GetDefaultSideOrientation(t.sideOrientation),r._originalBuilderSideOrientation=t.sideOrientation,n(t).applyToMesh(r,t.updatable),r}const o={CreateTiledPlane:a};r.P.CreateTiledPlane=n},84285:(e,t,s)=>{s.d(t,{YA:()=>h,qq:()=>o,vt:()=>l});var i=s(54983),r=s(9191),n=s(33543),a=s(28509);function o(e){const t=[],s=[],r=[],o=[],h=e.diameter||1,l=e.thickness||.5,c=0|(e.tessellation||16),u=0===e.sideOrientation?0:e.sideOrientation||n.P.DEFAULTSIDE,d=c+1;for(let e=0;e<=c;e++){const n=e/c,u=e*Math.PI*2/c-Math.PI/2,f=i.uq.Translation(h/2,0,0).multiply(i.uq.RotationY(u));for(let h=0;h<=c;h++){const u=1-h/c,p=h*Math.PI*2/c+Math.PI,_=Math.cos(p),g=Math.sin(p);let m=new i.Pq(_,g,0),y=m.scale(l/2);const x=new i.I9(n,u);y=i.Pq.TransformCoordinates(y,f),m=i.Pq.TransformNormal(m,f),s.push(y.x,y.y,y.z),r.push(m.x,m.y,m.z),o.push(x.x,a.rX?1-x.y:x.y);const A=(e+1)%d,b=(h+1)%d;t.push(e*d+h),t.push(e*d+b),t.push(A*d+h),t.push(e*d+b),t.push(A*d+b),t.push(A*d+h)}}n.P._ComputeSides(u,s,t,r,o,e.frontUVs,e.backUVs);const f=new n.P;return f.indices=t,f.positions=s,f.normals=r,f.uvs=o,f}function h(e,t={},s){const i=new r.e(e,s);return t.sideOrientation=r.e._GetDefaultSideOrientation(t.sideOrientation),i._originalBuilderSideOrientation=t.sideOrientation,o(t).applyToMesh(i,t.updatable),i}const l={CreateTorus:h};n.P.CreateTorus=o,r.e.CreateTorus=(e,t,s,i,r,n,a)=>h(e,{diameter:t,thickness:s,tessellation:i,sideOrientation:a,updatable:n},r)},81699:(e,t,s)=>{s.d(t,{Mi:()=>o,VR:()=>l,sF:()=>h});var i=s(54983),r=s(9191),n=s(33543),a=s(28509);function o(e){const t=[],s=[],r=[],o=[],h=e.radius||2,l=e.tube||.5,c=e.radialSegments||32,u=e.tubularSegments||32,d=e.p||2,f=e.q||3,p=0===e.sideOrientation?0:e.sideOrientation||n.P.DEFAULTSIDE,_=e=>{const t=Math.cos(e),s=Math.sin(e),r=f/d*e,n=Math.cos(r),a=h*(2+n)*.5*t,o=h*(2+n)*s*.5,l=h*Math.sin(r)*.5;return new i.Pq(a,o,l)};let g,m;for(g=0;g<=c;g++){const e=g%c/c*2*d*Math.PI,t=_(e),r=_(e+.01),n=r.subtract(t);let h=r.add(t);const f=i.Pq.Cross(n,h);for(h=i.Pq.Cross(f,n),f.normalize(),h.normalize(),m=0;m<u;m++){const e=m%u/u*2*Math.PI,i=-l*Math.cos(e),r=l*Math.sin(e);s.push(t.x+i*h.x+r*f.x),s.push(t.y+i*h.y+r*f.y),s.push(t.z+i*h.z+r*f.z),o.push(g/c),o.push(a.rX?1-m/u:m/u)}}for(g=0;g<c;g++)for(m=0;m<u;m++){const e=(m+1)%u,s=g*u+m,i=(g+1)*u+m,r=(g+1)*u+e,n=g*u+e;t.push(n),t.push(i),t.push(s),t.push(n),t.push(r),t.push(i)}n.P.ComputeNormals(s,t,r),n.P._ComputeSides(p,s,t,r,o,e.frontUVs,e.backUVs);const y=new n.P;return y.indices=t,y.positions=s,y.normals=r,y.uvs=o,y}function h(e,t={},s){const i=new r.e(e,s);return t.sideOrientation=r.e._GetDefaultSideOrientation(t.sideOrientation),i._originalBuilderSideOrientation=t.sideOrientation,o(t).applyToMesh(i,t.updatable),i}const l={CreateTorusKnot:h};n.P.CreateTorusKnot=o,r.e.CreateTorusKnot=(e,t,s,i,r,n,a,o,l,c)=>h(e,{radius:t,tube:s,radialSegments:i,tubularSegments:r,p:n,q:a,sideOrientation:c,updatable:l},o)},18280:(e,t,s)=>{s.d(t,{V:()=>o,a:()=>h});var i=s(54983),r=s(9191),n=s(60838),a=s(74539);function o(e,t,s=null){const o=t.path;let h=t.instance,l=1;void 0!==t.radius?l=t.radius:h&&(l=h._creationDataStorage.radius);const c=t.tessellation||64,u=t.radiusFunction||null;let d=t.cap||r.e.NO_CAP;const f=t.invertUV||!1,p=t.updatable,_=r.e._GetDefaultSideOrientation(t.sideOrientation);t.arc=t.arc&&(t.arc<=0||t.arc>1)?1:t.arc||1;const g=(e,t,s,n,a,o,h,l)=>{const c=t.getTangents(),u=t.getNormals(),d=t.getDistances(),f=2*Math.PI/a*l,p=o||(()=>n);let _,g,m,y;const x=i.AA.Matrix[0];let A=h===r.e.NO_CAP||h===r.e.CAP_END?0:2;for(let t=0;t<e.length;t++){g=p(t,d[t]),_=Array(),m=u[t];for(let s=0;s<a;s++)i.uq.RotationAxisToRef(c[t],f*s,x),y=_[s]?_[s]:i.Pq.Zero(),i.Pq.TransformCoordinatesToRef(m,x,y),y.scaleInPlace(g).addInPlace(e[t]),_[s]=y;s[A]=_,A++}const b=(t,s)=>{const i=Array();for(let r=0;r<t;r++)i.push(e[s]);return i};switch(h){case r.e.NO_CAP:break;case r.e.CAP_START:s[0]=b(a,0),s[1]=s[2].slice(0);break;case r.e.CAP_END:s[A]=s[A-1].slice(0),s[A+1]=b(a,e.length-1);break;case r.e.CAP_ALL:s[0]=b(a,0),s[1]=s[2].slice(0),s[A]=s[A-1].slice(0),s[A+1]=b(a,e.length-1)}return s};let m,y;if(h){const e=h._creationDataStorage,s=t.arc||e.arc;return m=e.path3D.update(o),y=g(o,m,e.pathArray,l,e.tessellation,u,e.cap,s),h=(0,n.fv)("",{pathArray:y,instance:h}),e.path3D=m,e.pathArray=y,e.arc=s,e.radius=l,h}m=new a.tO(o),d=d<0||d>3?0:d,y=g(o,m,new Array,l,c,u,d,t.arc);const x=(0,n.fv)(e,{pathArray:y,closePath:!0,closeArray:!1,updatable:p,sideOrientation:_,invertUV:f,frontUVs:t.frontUVs,backUVs:t.backUVs},s);return x._creationDataStorage.pathArray=y,x._creationDataStorage.path3D=m,x._creationDataStorage.tessellation=c,x._creationDataStorage.cap=d,x._creationDataStorage.arc=t.arc,x._creationDataStorage.radius=l,x}const h={CreateTube:o};r.e.CreateTube=(e,t,s,i,r,n,a,h,l,c)=>o(e,{path:t,radius:s,tessellation:i,radiusFunction:r,arc:1,cap:n,updatable:h,sideOrientation:l,instance:c},a)},43425:(e,t,s)=>{s.d(t,{M6:()=>c,HS:()=>l,nZ:()=>h});var i=s(54983),r=s(49111),n=s(50507),a=s(70461);class o{constructor(e=0,t=0){this.x=e,this.y=t,e!==Math.floor(e)&&(e=Math.floor(e),a.V.Warn("x is not an integer, floor(x) used")),t!==Math.floor(t)&&(t=Math.floor(t),a.V.Warn("y is not an integer, floor(y) used"))}clone(){return new o(this.x,this.y)}rotate60About(e){const t=this.x;return this.x=e.x+e.y-this.y,this.y=t+this.y-e.x,this}rotateNeg60About(e){const t=this.x;return this.x=t+this.y-e.y,this.y=e.x+e.y-t,this}rotate120(e,t){e!==Math.floor(e)&&(e=Math.floor(e),a.V.Warn("m not an integer only floor(m) used")),t!==Math.floor(t)&&(t=Math.floor(t),a.V.Warn("n not an integer only floor(n) used"));const s=this.x;return this.x=e-s-this.y,this.y=t+s,this}rotateNeg120(e,t){e!==Math.floor(e)&&(e=Math.floor(e),a.V.Warn("m is not an integer, floor(m) used")),t!==Math.floor(t)&&(t=Math.floor(t),a.V.Warn("n is not an integer,   floor(n) used"));const s=this.x;return this.x=this.y-t,this.y=e+t-s-this.y,this}toCartesianOrigin(e,t){const s=i.Pq.Zero();return s.x=e.x+2*this.x*t+this.y*t,s.y=e.y+Math.sqrt(3)*this.y*t,s}static Zero(){return new o(0,0)}}class h{constructor(){this.cartesian=[],this.vertices=[],this.max=[],this.min=[],this.closestTo=[],this.innerFacets=[],this.isoVecsABOB=[],this.isoVecsOBOA=[],this.isoVecsBAOA=[],this.vertexTypes=[],this.IDATA=new l("icosahedron","Regular",[[0,n.a6,-1],[-n.a6,1,0],[-1,0,-n.a6],[1,0,-n.a6],[n.a6,1,0],[0,n.a6,1],[-1,0,n.a6],[-n.a6,-1,0],[0,-n.a6,-1],[n.a6,-1,0],[1,0,n.a6],[0,-n.a6,1]],[[0,2,1],[0,3,2],[0,4,3],[0,5,4],[0,1,5],[7,6,1],[8,7,2],[9,8,3],[10,9,4],[6,10,5],[2,7,1],[3,8,2],[4,9,3],[5,10,4],[1,6,5],[11,6,7],[11,7,8],[11,8,9],[11,9,10],[11,10,6]])}setIndices(){let e=12;const t={},s=this.m,i=this.n;let n,a,h,l,c,u=s,d=1,f=0;0!==i&&(u=(0,r.HighestCommonFactor)(s,i)),d=s/u,f=i/u;const p=o.Zero(),_=new o(s,i),g=new o(-i,s+i),m=o.Zero(),y=o.Zero(),x=o.Zero();let A,b,I,P,T=[];const E=[],M=this.vertByDist,v=(s,i,r,n)=>{A=s+"|"+r,b=i+"|"+n,A in t||b in t?A in t&&!(b in t)?t[b]=t[A]:b in t&&!(A in t)&&(t[A]=t[b]):(t[A]=e,t[b]=e,e++),M[r][0]>2?E[t[A]]=[-M[r][0],M[r][1],t[A]]:E[t[A]]=[T[M[r][0]],M[r][1],t[A]]};this.IDATA.edgematch=[[1,"B"],[2,"B"],[3,"B"],[4,"B"],[0,"B"],[10,"O",14,"A"],[11,"O",10,"A"],[12,"O",11,"A"],[13,"O",12,"A"],[14,"O",13,"A"],[0,"O"],[1,"O"],[2,"O"],[3,"O"],[4,"O"],[19,"B",5,"A"],[15,"B",6,"A"],[16,"B",7,"A"],[17,"B",8,"A"],[18,"B",9,"A"]];for(let r=0;r<20;r++){if(T=this.IDATA.face[r],h=T[2],l=T[1],c=T[0],I=p.x+"|"+p.y,A=r+"|"+I,A in t||(t[A]=h,E[h]=[T[M[I][0]],M[I][1]]),I=_.x+"|"+_.y,A=r+"|"+I,A in t||(t[A]=l,E[l]=[T[M[I][0]],M[I][1]]),I=g.x+"|"+g.y,A=r+"|"+I,A in t||(t[A]=c,E[c]=[T[M[I][0]],M[I][1]]),n=this.IDATA.edgematch[r][0],a=this.IDATA.edgematch[r][1],"B"===a)for(let e=1;e<u;e++)y.x=s-e*(d+f),y.y=i+e*d,x.x=-e*f,x.y=e*(d+f),I=y.x+"|"+y.y,P=x.x+"|"+x.y,v(r,n,I,P);if("O"===a)for(let e=1;e<u;e++)x.x=-e*f,x.y=e*(d+f),m.x=e*d,m.y=e*f,I=x.x+"|"+x.y,P=m.x+"|"+m.y,v(r,n,I,P);if(n=this.IDATA.edgematch[r][2],a=this.IDATA.edgematch[r][3],a&&"A"===a)for(let e=1;e<u;e++)m.x=e*d,m.y=e*f,y.x=s-(u-e)*(d+f),y.y=i+(u-e)*d,I=m.x+"|"+m.y,P=y.x+"|"+y.y,v(r,n,I,P);for(let s=0;s<this.vertices.length;s++)I=this.vertices[s].x+"|"+this.vertices[s].y,A=r+"|"+I,A in t||(t[A]=e++,M[I][0]>2?E[t[A]]=[-M[I][0],M[I][1],t[A]]:E[t[A]]=[T[M[I][0]],M[I][1],t[A]])}this.closestTo=E,this.vecToidx=t}calcCoeffs(){const e=this.m,t=this.n,s=Math.sqrt(3)/3,i=e*e+t*t+e*t;this.coau=(e+t)/i,this.cobu=-t/i,this.coav=-s*(e-t)/i,this.cobv=s*(2*e+t)/i}createInnerFacets(){const e=this.m,t=this.n;for(let s=0;s<t+e+1;s++)for(let e=this.min[s];e<this.max[s]+1;e++)e<this.max[s]&&e<this.max[s+1]+1&&this.innerFacets.push(["|"+e+"|"+s,"|"+e+"|"+(s+1),"|"+(e+1)+"|"+s]),s>0&&e<this.max[s-1]&&e+1<this.max[s]+1&&this.innerFacets.push(["|"+e+"|"+s,"|"+(e+1)+"|"+s,"|"+(e+1)+"|"+(s-1)])}edgeVecsABOB(){const e=this.m,t=this.n,s=new o(-t,e+t);for(let i=1;i<e+t;i++){const e=new o(this.min[i],i),t=new o(this.min[i-1],i-1),r=new o(this.min[i+1],i+1),n=e.clone(),a=t.clone(),h=r.clone();n.rotate60About(s),a.rotate60About(s),h.rotate60About(s);const l=new o(this.max[n.y],n.y),c=new o(this.max[n.y-1],n.y-1),u=new o(this.max[n.y-1]-1,n.y-1);n.x===l.x&&n.y===l.y||(n.x!==c.x?(this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([e,c,u]),this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([e,u,l])):n.y===h.y?(this.vertexTypes.push([1,1,0]),this.isoVecsABOB.push([e,t,c]),this.vertexTypes.push([1,0,1]),this.isoVecsABOB.push([e,c,r])):(this.vertexTypes.push([1,1,0]),this.isoVecsABOB.push([e,t,c]),this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([e,c,l])))}}mapABOBtoOBOA(){const e=new o(0,0);for(let t=0;t<this.isoVecsABOB.length;t++){const s=[];for(let i=0;i<3;i++)e.x=this.isoVecsABOB[t][i].x,e.y=this.isoVecsABOB[t][i].y,0===this.vertexTypes[t][i]&&e.rotateNeg120(this.m,this.n),s.push(e.clone());this.isoVecsOBOA.push(s)}}mapABOBtoBAOA(){const e=new o(0,0);for(let t=0;t<this.isoVecsABOB.length;t++){const s=[];for(let i=0;i<3;i++)e.x=this.isoVecsABOB[t][i].x,e.y=this.isoVecsABOB[t][i].y,1===this.vertexTypes[t][i]&&e.rotate120(this.m,this.n),s.push(e.clone());this.isoVecsBAOA.push(s)}}MapToFace(e,t){const s=this.IDATA.face[e],r=s[2],n=s[1],a=s[0],o=i.Pq.FromArray(this.IDATA.vertex[r]),h=i.Pq.FromArray(this.IDATA.vertex[n]),l=i.Pq.FromArray(this.IDATA.vertex[a]),c=h.subtract(o),u=l.subtract(o),d=c.scale(this.coau).add(u.scale(this.cobu)),f=c.scale(this.coav).add(u.scale(this.cobv)),p=[];let _,g=i.AA.Vector3[0];for(let s=0;s<this.cartesian.length;s++)g=d.scale(this.cartesian[s].x).add(f.scale(this.cartesian[s].y)).add(o),p[s]=[g.x,g.y,g.z],_=e+"|"+this.vertices[s].x+"|"+this.vertices[s].y,t.vertex[this.vecToidx[_]]=[g.x,g.y,g.z]}build(e,t){const s=[],i=o.Zero(),n=new o(e,t),a=new o(-t,e+t);s.push(i,n,a);for(let i=t;i<e+1;i++)for(let t=0;t<e+1-i;t++)s.push(new o(t,i));if(t>0){const i=(0,r.HighestCommonFactor)(e,t),n=e/i,a=t/i;for(let r=1;r<i;r++)s.push(new o(r*n,r*a)),s.push(new o(-r*a,r*(n+a))),s.push(new o(e-r*(n+a),t+r*n));const h=e/t;for(let i=1;i<t;i++)for(let r=0;r<i*h;r++)s.push(new o(r,i)),s.push(new o(r,i).rotate120(e,t)),s.push(new o(r,i).rotateNeg120(e,t))}s.sort(((e,t)=>e.x-t.x)),s.sort(((e,t)=>e.y-t.y));const h=new Array(e+t+1),l=new Array(e+t+1);for(let e=0;e<h.length;e++)h[e]=1/0,l[e]=-1/0;let c=0,u=0;const d=s.length;for(let e=0;e<d;e++)u=s[e].x,c=s[e].y,h[c]=Math.min(u,h[c]),l[c]=Math.max(u,l[c]);const f=(s,i)=>{const r=s.clone();return"A"===i&&r.rotateNeg120(e,t),"B"===i&&r.rotate120(e,t),r.x<0?r.y:r.x+r.y},p=[],_=[],g=[],m=[],y={},x=[];let A=-1,b=-1;for(let e=0;e<d;e++)p[e]=s[e].toCartesianOrigin(new o(0,0),.5),_[e]=f(s[e],"O"),g[e]=f(s[e],"A"),m[e]=f(s[e],"B"),_[e]===g[e]&&g[e]===m[e]?(A=3,b=_[e]):_[e]===g[e]?(A=4,b=_[e]):g[e]===m[e]?(A=5,b=g[e]):m[e]===_[e]&&(A=6,b=_[e]),_[e]<g[e]&&_[e]<m[e]&&(A=2,b=_[e]),g[e]<_[e]&&g[e]<m[e]&&(A=1,b=g[e]),m[e]<g[e]&&m[e]<_[e]&&(A=0,b=m[e]),x.push([A,b,s[e].x,s[e].y]);x.sort(((e,t)=>e[2]-t[2])),x.sort(((e,t)=>e[3]-t[3])),x.sort(((e,t)=>e[1]-t[1])),x.sort(((e,t)=>e[0]-t[0]));for(let e=0;e<x.length;e++)y[x[e][2]+"|"+x[e][3]]=[x[e][0],x[e][1],e];return this.m=e,this.n=t,this.vertices=s,this.vertByDist=y,this.cartesian=p,this.min=h,this.max=l,this}}class l{constructor(e,t,s,i){this.name=e,this.category=t,this.vertex=s,this.face=i}}class c extends l{innerToData(e,t){for(let s=0;s<t.innerFacets.length;s++)this.face.push(t.innerFacets[s].map((s=>t.vecToidx[e+s])))}mapABOBtoDATA(e,t){const s=t.IDATA.edgematch[e][0];for(let i=0;i<t.isoVecsABOB.length;i++){const r=[];for(let n=0;n<3;n++)0===t.vertexTypes[i][n]?r.push(e+"|"+t.isoVecsABOB[i][n].x+"|"+t.isoVecsABOB[i][n].y):r.push(s+"|"+t.isoVecsABOB[i][n].x+"|"+t.isoVecsABOB[i][n].y);this.face.push([t.vecToidx[r[0]],t.vecToidx[r[1]],t.vecToidx[r[2]]])}}mapOBOAtoDATA(e,t){const s=t.IDATA.edgematch[e][0];for(let i=0;i<t.isoVecsOBOA.length;i++){const r=[];for(let n=0;n<3;n++)1===t.vertexTypes[i][n]?r.push(e+"|"+t.isoVecsOBOA[i][n].x+"|"+t.isoVecsOBOA[i][n].y):r.push(s+"|"+t.isoVecsOBOA[i][n].x+"|"+t.isoVecsOBOA[i][n].y);this.face.push([t.vecToidx[r[0]],t.vecToidx[r[1]],t.vecToidx[r[2]]])}}mapBAOAtoDATA(e,t){const s=t.IDATA.edgematch[e][2];for(let i=0;i<t.isoVecsBAOA.length;i++){const r=[];for(let n=0;n<3;n++)1===t.vertexTypes[i][n]?r.push(e+"|"+t.isoVecsBAOA[i][n].x+"|"+t.isoVecsBAOA[i][n].y):r.push(s+"|"+t.isoVecsBAOA[i][n].x+"|"+t.isoVecsBAOA[i][n].y);this.face.push([t.vecToidx[r[0]],t.vecToidx[r[1]],t.vecToidx[r[2]]])}}orderData(e){const t=[];for(let e=0;e<13;e++)t[e]=[];const s=e.closestTo;for(let e=0;e<s.length;e++)s[e][0]>-1?s[e][1]>0&&t[s[e][0]].push([e,s[e][1]]):t[12].push([e,s[e][0]]);const i=[];for(let e=0;e<12;e++)i[e]=e;let r=12;for(let e=0;e<12;e++){t[e].sort(((e,t)=>e[1]-t[1]));for(let s=0;s<t[e].length;s++)i[t[e][s][0]]=r++}for(let e=0;e<t[12].length;e++)i[t[12][e][0]]=r++;for(let e=0;e<this.vertex.length;e++)this.vertex[e].push(i[e]);this.vertex.sort(((e,t)=>e[3]-t[3]));for(let e=0;e<this.vertex.length;e++)this.vertex[e].pop();for(let e=0;e<this.face.length;e++)for(let t=0;t<this.face[e].length;t++)this.face[e][t]=i[this.face[e][t]];this.sharedNodes=t[12].length,this.poleNodes=this.vertex.length-this.sharedNodes}setOrder(e,t){const s=[],i=[];let r=t.pop();i.push(r);let n=this.face[r].indexOf(e);n=(n+2)%3;let a=this.face[r][n];s.push(a);let o=0;for(;t.length>0;)r=t[o],this.face[r].indexOf(a)>-1?(n=(this.face[r].indexOf(a)+1)%3,a=this.face[r][n],s.push(a),i.push(r),t.splice(o,1),o=0):o++;return this.adjacentFaces.push(s),i}toGoldbergPolyhedronData(){const e=new l("GeoDual","Goldberg",[],[]);e.name="GD dual";const t=this.vertex.length,s=new Array(t);for(let e=0;e<t;e++)s[e]=[];for(let e=0;e<this.face.length;e++)for(let t=0;t<3;t++)s[this.face[e][t]].push(e);let i=0,r=0,n=0,a=[],o=[];this.adjacentFaces=[];for(let t=0;t<s.length;t++)e.face[t]=this.setOrder(t,s[t].concat([])),s[t].forEach((t=>{i=0,r=0,n=0,a=this.face[t];for(let e=0;e<3;e++)o=this.vertex[a[e]],i+=o[0],r+=o[1],n+=o[2];e.vertex[t]=[i/3,r/3,n/3]}));return e}static BuildGeodesicData(e){const t=new c("Geodesic-m-n","Geodesic",[[0,n.a6,-1],[-n.a6,1,0],[-1,0,-n.a6],[1,0,-n.a6],[n.a6,1,0],[0,n.a6,1],[-1,0,n.a6],[-n.a6,-1,0],[0,-n.a6,-1],[n.a6,-1,0],[1,0,n.a6],[0,-n.a6,1]],[]);e.setIndices(),e.calcCoeffs(),e.createInnerFacets(),e.edgeVecsABOB(),e.mapABOBtoOBOA(),e.mapABOBtoBAOA();for(let s=0;s<e.IDATA.face.length;s++)e.MapToFace(s,t),t.innerToData(s,e),"B"===e.IDATA.edgematch[s][1]&&t.mapABOBtoDATA(s,e),"O"===e.IDATA.edgematch[s][1]&&t.mapOBOAtoDATA(s,e),"A"===e.IDATA.edgematch[s][3]&&t.mapBAOAtoDATA(s,e);return t.orderData(e),t.vertex=t.vertex.map((function(e){const t=e[0],s=e[1],i=e[2],r=Math.sqrt(t*t+s*s+i*i);return e[0]*=1/r,e[1]*=1/r,e[2]*=1/r,e})),t}}},84254:(e,t,s)=>{s.d(t,{V:()=>g});var i=s(54983),r=s(39341),n=s(33543),a=s(59396),o=s(103),h=s(90777),l=s(54611),c=s(90066),u=s(88836),d=s(53679),f=s(69583),p=s(28509),_=s(74863);class g{get boundingBias(){return this._boundingBias}set boundingBias(e){this._boundingBias?this._boundingBias.copyFrom(e):this._boundingBias=e.clone(),this._updateBoundingInfo(!0,null)}static CreateGeometryForMesh(e){const t=new g(g.RandomId(),e.getScene());return t.applyToMesh(e),t}get meshes(){return this._meshes}constructor(e,t,s,i=!1,r=null){this.delayLoadState=0,this._totalVertices=0,this._isDisposed=!1,this._indexBufferIsUpdatable=!1,this._positionsCache=[],this._parentContainer=null,this.useBoundingInfoFromGeometry=!1,this._scene=t||f.q.LastCreatedScene,this._scene&&(this.id=e,this.uniqueId=this._scene.getUniqueId(),this._engine=this._scene.getEngine(),this._meshes=[],this._vertexBuffers={},this._indices=[],this._updatable=i,s?this.setAllVerticesData(s,i):this._totalVertices=0,this._engine.getCaps().vertexArrayObject&&(this._vertexArrayObjects={}),r&&(this.applyToMesh(r),r.computeWorldMatrix(!0)))}get extend(){return this._extend}getScene(){return this._scene}getEngine(){return this._engine}isReady(){return 1===this.delayLoadState||0===this.delayLoadState}get doNotSerialize(){for(let e=0;e<this._meshes.length;e++)if(!this._meshes[e].doNotSerialize)return!1;return!0}_rebuild(){this._vertexArrayObjects&&(this._vertexArrayObjects={}),0!==this._meshes.length&&this._indices&&(this._indexBuffer=this._engine.createIndexBuffer(this._indices,this._updatable,"Geometry_"+this.id+"_IndexBuffer"));const e=new Set;for(const t in this._vertexBuffers)e.add(this._vertexBuffers[t].getWrapperBuffer());e.forEach((e=>{e._rebuild()}))}setAllVerticesData(e,t){e.applyToGeometry(this,t),this._notifyUpdate()}setVerticesData(e,t,s=!1,i){s&&Array.isArray(t)&&(t=new Float32Array(t));const r=new a.R(this._engine,t,e,{updatable:s,postponeInternalCreation:0===this._meshes.length,stride:i,label:"Geometry_"+this.id+"_"+e});this.setVerticesBuffer(r)}removeVerticesData(e){this._vertexBuffers[e]&&(this._vertexBuffers[e].dispose(),delete this._vertexBuffers[e]),this._vertexArrayObjects&&this._disposeVertexArrayObjects()}setVerticesBuffer(e,t=null,s=!0){const r=e.getKind();this._vertexBuffers[r]&&s&&this._vertexBuffers[r].dispose(),e._buffer&&e._buffer._increaseReferences(),this._vertexBuffers[r]=e;const n=this._meshes,o=n.length;if(r===a.R.PositionKind){this._totalVertices=t??e._maxVerticesCount,this._updateExtend(e.getFloatData(this._totalVertices)),this._resetPointsArrayCache();const s=this._extend&&this._extend.minimum||new i.Pq(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),r=this._extend&&this._extend.maximum||new i.Pq(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let e=0;e<o;e++){const t=n[e];t.buildBoundingInfo(s,r),t._createGlobalSubMesh(t.isUnIndexed),t.computeWorldMatrix(!0),t.synchronizeInstances()}}this._notifyUpdate(r)}updateVerticesDataDirectly(e,t,s,i=!1){const r=this.getVertexBuffer(e);r&&(r.updateDirectly(t,s,i),this._notifyUpdate(e))}updateVerticesData(e,t,s=!1){const i=this.getVertexBuffer(e);i&&(i.update(t),e===a.R.PositionKind&&this._updateBoundingInfo(s,t),this._notifyUpdate(e))}_updateBoundingInfo(e,t){if(e&&this._updateExtend(t),this._resetPointsArrayCache(),e){const e=this._meshes;for(const t of e){t.hasBoundingInfo?t.getBoundingInfo().reConstruct(this._extend.minimum,this._extend.maximum):t.buildBoundingInfo(this._extend.minimum,this._extend.maximum);const e=t.subMeshes;for(const t of e)t.refreshBoundingInfo()}}}_bind(e,t,s,i){if(!e)return;void 0===t&&(t=this._indexBuffer);const r=this.getVertexBuffers();if(!r)return;if(t!=this._indexBuffer||!this._vertexArrayObjects&&!i)return void this._engine.bindBuffers(r,t,e,s);const n=i||this._vertexArrayObjects,a=this._engine;n[e.key]||(n[e.key]=a.recordVertexArrayObject(r,t,e,s)),a.bindVertexArrayObject(n[e.key],t)}getTotalVertices(){return this.isReady()?this._totalVertices:0}getVerticesData(e,t,s){const i=this.getVertexBuffer(e);return i?i.getFloatData(this._totalVertices,s||t&&1!==this._meshes.length):null}copyVerticesData(e,t){const s=this.getVertexBuffer(e);if(!s)return;t[e]||(t[e]=new Float32Array(this._totalVertices*s.getSize()));const i=s.getData();i&&(0,_.g)(i,s.getSize(),s.type,s.byteOffset,s.byteStride,s.normalized,this._totalVertices,t[e])}isVertexBufferUpdatable(e){const t=this._vertexBuffers[e];return!!t&&t.isUpdatable()}getVertexBuffer(e){return this.isReady()?this._vertexBuffers[e]:null}getVertexBuffers(){return this.isReady()?this._vertexBuffers:null}isVerticesDataPresent(e){return this._vertexBuffers?void 0!==this._vertexBuffers[e]:!!this._delayInfo&&-1!==this._delayInfo.indexOf(e)}getVerticesDataKinds(){const e=[];let t;if(!this._vertexBuffers&&this._delayInfo)for(t in this._delayInfo)e.push(t);else for(t in this._vertexBuffers)e.push(t);return e}updateIndices(e,t,s=!1){if(this._indexBuffer)if(this._indexBufferIsUpdatable){const i=e.length!==this._indices.length;if(s||(this._indices=e.slice()),this._engine.updateDynamicIndexBuffer(this._indexBuffer,e,t),i)for(const e of this._meshes)e._createGlobalSubMesh(!0)}else this.setIndices(e,null,!0)}setIndexBuffer(e,t,s){this._indices=[],this._indexBufferIsUpdatable=!1,this._indexBuffer=e,this._totalVertices=t,this._totalIndices=s,e.is32Bits||(e.is32Bits=this._totalIndices>65535);for(const e of this._meshes)e._createGlobalSubMesh(!0),e.synchronizeInstances();this._notifyUpdate()}setIndices(e,t=null,s=!1,i=!1){this._indexBuffer&&this._engine._releaseBuffer(this._indexBuffer),this._indices=e,this._indexBufferIsUpdatable=s,0!==this._meshes.length&&this._indices&&(this._indexBuffer=this._engine.createIndexBuffer(this._indices,s,"Geometry_"+this.id+"_IndexBuffer")),null!=t&&(this._totalVertices=t);for(const e of this._meshes)e._createGlobalSubMesh(!i),e.synchronizeInstances();this._notifyUpdate()}getTotalIndices(){return this.isReady()?void 0!==this._totalIndices?this._totalIndices:this._indices.length:0}getIndices(e,t){if(!this.isReady())return null;const s=this._indices;return t||e&&1!==this._meshes.length?s.slice():s}getIndexBuffer(){return this.isReady()?this._indexBuffer:null}_releaseVertexArrayObject(e=null){e&&this._vertexArrayObjects&&this._vertexArrayObjects[e.key]&&(this._engine.releaseVertexArrayObject(this._vertexArrayObjects[e.key]),delete this._vertexArrayObjects[e.key])}releaseForMesh(e,t){const s=this._meshes,i=s.indexOf(e);-1!==i&&(s.splice(i,1),this._vertexArrayObjects&&e._invalidateInstanceVertexArrayObject(),e._geometry=null,0===s.length&&t&&this.dispose())}applyToMesh(e){if(e._geometry===this)return;const t=e._geometry;t&&t.releaseForMesh(e),this._vertexArrayObjects&&e._invalidateInstanceVertexArrayObject();const s=this._meshes;e._geometry=this,e._internalAbstractMeshDataInfo._positions=null,this._scene.pushGeometry(this),s.push(e),this.isReady()?this._applyToMesh(e):this._boundingInfo&&e.setBoundingInfo(this._boundingInfo)}_updateExtend(e=null){if(this.useBoundingInfoFromGeometry&&this._boundingInfo)this._extend={minimum:this._boundingInfo.minimum.clone(),maximum:this._boundingInfo.maximum.clone()};else{if(!e&&!(e=this.getVerticesData(a.R.PositionKind)))return;this._extend=(0,d.b8)(e,0,this._totalVertices,this.boundingBias,3)}}_applyToMesh(e){const t=this._meshes.length;for(const s in this._vertexBuffers)1===t&&this._vertexBuffers[s].create(),s===a.R.PositionKind&&(this._extend||this._updateExtend(),e.buildBoundingInfo(this._extend.minimum,this._extend.maximum),e._createGlobalSubMesh(e.isUnIndexed),e._updateBoundingInfo());1===t&&this._indices&&this._indices.length>0&&(this._indexBuffer=this._engine.createIndexBuffer(this._indices,this._updatable,"Geometry_"+this.id+"_IndexBuffer")),e._syncGeometryWithMorphTargetManager(),e.synchronizeInstances()}_notifyUpdate(e){this.onGeometryUpdated&&this.onGeometryUpdated(this,e),this._vertexArrayObjects&&this._disposeVertexArrayObjects();for(const e of this._meshes)e._markSubMeshesAsAttributesDirty()}load(e,t){2!==this.delayLoadState&&(this.isReady()?t&&t():(this.delayLoadState=2,this._queueLoad(e,t)))}_queueLoad(e,t){this.delayLoadingFile&&(e.addPendingData(this),e._loadFile(this.delayLoadingFile,(s=>{if(!this._delayLoadingFunction)return;this._delayLoadingFunction(JSON.parse(s),this),this.delayLoadState=1,this._delayInfo=[],e.removePendingData(this);const i=this._meshes,r=i.length;for(let e=0;e<r;e++)this._applyToMesh(i[e]);t&&t()}),void 0,!0))}toLeftHanded(){const e=this.getIndices(!1);if(null!=e&&e.length>0){for(let t=0;t<e.length;t+=3){const s=e[t+0];e[t+0]=e[t+2],e[t+2]=s}this.setIndices(e)}const t=this.getVerticesData(a.R.PositionKind,!1);if(null!=t&&t.length>0){for(let e=0;e<t.length;e+=3)t[e+2]=-t[e+2];this.setVerticesData(a.R.PositionKind,t,!1)}const s=this.getVerticesData(a.R.NormalKind,!1);if(null!=s&&s.length>0){for(let e=0;e<s.length;e+=3)s[e+2]=-s[e+2];this.setVerticesData(a.R.NormalKind,s,!1)}}_resetPointsArrayCache(){this._positions=null}_generatePointsArray(){if(this._positions)return!0;const e=this.getVerticesData(a.R.PositionKind);if(!e||0===e.length)return!1;for(let t=3*this._positionsCache.length,s=this._positionsCache.length;t<e.length;t+=3,++s)this._positionsCache[s]=i.Pq.FromArray(e,t);for(let t=0,s=0;t<e.length;t+=3,++s)this._positionsCache[s].set(e[0+t],e[1+t],e[2+t]);return this._positionsCache.length=e.length/3,this._positions=this._positionsCache,!0}isDisposed(){return this._isDisposed}_disposeVertexArrayObjects(){if(this._vertexArrayObjects){for(const e in this._vertexArrayObjects)this._engine.releaseVertexArrayObject(this._vertexArrayObjects[e]);this._vertexArrayObjects={};const e=this._meshes,t=e.length;for(let s=0;s<t;s++)e[s]._invalidateInstanceVertexArrayObject()}}dispose(){const e=this._meshes,t=e.length;let s;for(s=0;s<t;s++)this.releaseForMesh(e[s]);this._meshes.length=0,this._disposeVertexArrayObjects();for(const e in this._vertexBuffers)this._vertexBuffers[e].dispose();if(this._vertexBuffers={},this._totalVertices=0,this._indexBuffer&&this._engine._releaseBuffer(this._indexBuffer),this._indexBuffer=null,this._indices=[],this.delayLoadState=0,this.delayLoadingFile=null,this._delayLoadingFunction=null,this._delayInfo=[],this._boundingInfo=null,this._scene.removeGeometry(this),this._parentContainer){const e=this._parentContainer.geometries.indexOf(this);e>-1&&this._parentContainer.geometries.splice(e,1),this._parentContainer=null}this._isDisposed=!0}copy(e){const t=new n.P;t.indices=[];const s=this.getIndices();if(s)for(let e=0;e<s.length;e++)t.indices.push(s[e]);let i,r=!1,a=!1;for(i in this._vertexBuffers){const e=this.getVerticesData(i);if(e&&(e instanceof Float32Array?t.set(new Float32Array(e),i):t.set(e.slice(0),i),!a)){const e=this.getVertexBuffer(i);e&&(r=e.isUpdatable(),a=!r)}}const o=new g(e,this._scene,t,r);for(i in o.delayLoadState=this.delayLoadState,o.delayLoadingFile=this.delayLoadingFile,o._delayLoadingFunction=this._delayLoadingFunction,this._delayInfo)o._delayInfo=o._delayInfo||[],o._delayInfo.push(i);return o._boundingInfo=new l.j(this._extend.minimum,this._extend.maximum),o}serialize(){const e={};return e.id=this.id,e.uniqueId=this.uniqueId,e.updatable=this._updatable,u.Y&&u.Y.HasTags(this)&&(e.tags=u.Y.GetTags(this)),e}_toNumberArray(e){return Array.isArray(e)?e:Array.prototype.slice.call(e)}clearCachedData(){this._indices=[],this._resetPointsArrayCache();for(const e in this._vertexBuffers)Object.prototype.hasOwnProperty.call(this._vertexBuffers,e)&&(this._vertexBuffers[e]._buffer._data=null)}serializeVerticeData(){const e=this.serialize();return this.isVerticesDataPresent(a.R.PositionKind)&&(e.positions=this._toNumberArray(this.getVerticesData(a.R.PositionKind)),this.isVertexBufferUpdatable(a.R.PositionKind)&&(e.positions._updatable=!0)),this.isVerticesDataPresent(a.R.NormalKind)&&(e.normals=this._toNumberArray(this.getVerticesData(a.R.NormalKind)),this.isVertexBufferUpdatable(a.R.NormalKind)&&(e.normals._updatable=!0)),this.isVerticesDataPresent(a.R.TangentKind)&&(e.tangents=this._toNumberArray(this.getVerticesData(a.R.TangentKind)),this.isVertexBufferUpdatable(a.R.TangentKind)&&(e.tangents._updatable=!0)),this.isVerticesDataPresent(a.R.UVKind)&&(e.uvs=this._toNumberArray(this.getVerticesData(a.R.UVKind)),this.isVertexBufferUpdatable(a.R.UVKind)&&(e.uvs._updatable=!0)),this.isVerticesDataPresent(a.R.UV2Kind)&&(e.uvs2=this._toNumberArray(this.getVerticesData(a.R.UV2Kind)),this.isVertexBufferUpdatable(a.R.UV2Kind)&&(e.uvs2._updatable=!0)),this.isVerticesDataPresent(a.R.UV3Kind)&&(e.uvs3=this._toNumberArray(this.getVerticesData(a.R.UV3Kind)),this.isVertexBufferUpdatable(a.R.UV3Kind)&&(e.uvs3._updatable=!0)),this.isVerticesDataPresent(a.R.UV4Kind)&&(e.uvs4=this._toNumberArray(this.getVerticesData(a.R.UV4Kind)),this.isVertexBufferUpdatable(a.R.UV4Kind)&&(e.uvs4._updatable=!0)),this.isVerticesDataPresent(a.R.UV5Kind)&&(e.uvs5=this._toNumberArray(this.getVerticesData(a.R.UV5Kind)),this.isVertexBufferUpdatable(a.R.UV5Kind)&&(e.uvs5._updatable=!0)),this.isVerticesDataPresent(a.R.UV6Kind)&&(e.uvs6=this._toNumberArray(this.getVerticesData(a.R.UV6Kind)),this.isVertexBufferUpdatable(a.R.UV6Kind)&&(e.uvs6._updatable=!0)),this.isVerticesDataPresent(a.R.ColorKind)&&(e.colors=this._toNumberArray(this.getVerticesData(a.R.ColorKind)),this.isVertexBufferUpdatable(a.R.ColorKind)&&(e.colors._updatable=!0)),this.isVerticesDataPresent(a.R.MatricesIndicesKind)&&(e.matricesIndices=this._toNumberArray(this.getVerticesData(a.R.MatricesIndicesKind)),e.matricesIndices._isExpanded=!0,this.isVertexBufferUpdatable(a.R.MatricesIndicesKind)&&(e.matricesIndices._updatable=!0)),this.isVerticesDataPresent(a.R.MatricesWeightsKind)&&(e.matricesWeights=this._toNumberArray(this.getVerticesData(a.R.MatricesWeightsKind)),this.isVertexBufferUpdatable(a.R.MatricesWeightsKind)&&(e.matricesWeights._updatable=!0)),e.indices=this._toNumberArray(this.getIndices()),e}static ExtractFromMesh(e,t){const s=e._geometry;return s?s.copy(t):null}static RandomId(){return c.S0.RandomId()}static _GetGeometryByLoadedUniqueId(e,t){for(let s=0;s<t.geometries.length;s++)if(t.geometries[s]._loadedUniqueId===e)return t.geometries[s];return null}static _ImportGeometry(e,t){const s=t.getScene(),i=e.geometryUniqueId,n=e.geometryId;if(i||n){const e=i?this._GetGeometryByLoadedUniqueId(i,s):s.getGeometryById(n);e&&e.applyToMesh(t)}else if(e instanceof ArrayBuffer){const s=t._binaryInfo;if(s.positionsAttrDesc&&s.positionsAttrDesc.count>0){const i=new Float32Array(e,s.positionsAttrDesc.offset,s.positionsAttrDesc.count);t.setVerticesData(a.R.PositionKind,i,!1)}if(s.normalsAttrDesc&&s.normalsAttrDesc.count>0){const i=new Float32Array(e,s.normalsAttrDesc.offset,s.normalsAttrDesc.count);t.setVerticesData(a.R.NormalKind,i,!1)}if(s.tangetsAttrDesc&&s.tangetsAttrDesc.count>0){const i=new Float32Array(e,s.tangetsAttrDesc.offset,s.tangetsAttrDesc.count);t.setVerticesData(a.R.TangentKind,i,!1)}if(s.uvsAttrDesc&&s.uvsAttrDesc.count>0){const i=new Float32Array(e,s.uvsAttrDesc.offset,s.uvsAttrDesc.count);if(p.rX)for(let e=1;e<i.length;e+=2)i[e]=1-i[e];t.setVerticesData(a.R.UVKind,i,!1)}if(s.uvs2AttrDesc&&s.uvs2AttrDesc.count>0){const i=new Float32Array(e,s.uvs2AttrDesc.offset,s.uvs2AttrDesc.count);if(p.rX)for(let e=1;e<i.length;e+=2)i[e]=1-i[e];t.setVerticesData(a.R.UV2Kind,i,!1)}if(s.uvs3AttrDesc&&s.uvs3AttrDesc.count>0){const i=new Float32Array(e,s.uvs3AttrDesc.offset,s.uvs3AttrDesc.count);if(p.rX)for(let e=1;e<i.length;e+=2)i[e]=1-i[e];t.setVerticesData(a.R.UV3Kind,i,!1)}if(s.uvs4AttrDesc&&s.uvs4AttrDesc.count>0){const i=new Float32Array(e,s.uvs4AttrDesc.offset,s.uvs4AttrDesc.count);if(p.rX)for(let e=1;e<i.length;e+=2)i[e]=1-i[e];t.setVerticesData(a.R.UV4Kind,i,!1)}if(s.uvs5AttrDesc&&s.uvs5AttrDesc.count>0){const i=new Float32Array(e,s.uvs5AttrDesc.offset,s.uvs5AttrDesc.count);if(p.rX)for(let e=1;e<i.length;e+=2)i[e]=1-i[e];t.setVerticesData(a.R.UV5Kind,i,!1)}if(s.uvs6AttrDesc&&s.uvs6AttrDesc.count>0){const i=new Float32Array(e,s.uvs6AttrDesc.offset,s.uvs6AttrDesc.count);if(p.rX)for(let e=1;e<i.length;e+=2)i[e]=1-i[e];t.setVerticesData(a.R.UV6Kind,i,!1)}if(s.colorsAttrDesc&&s.colorsAttrDesc.count>0){const i=new Float32Array(e,s.colorsAttrDesc.offset,s.colorsAttrDesc.count);t.setVerticesData(a.R.ColorKind,i,!1,s.colorsAttrDesc.stride)}if(s.matricesIndicesAttrDesc&&s.matricesIndicesAttrDesc.count>0){const i=new Int32Array(e,s.matricesIndicesAttrDesc.offset,s.matricesIndicesAttrDesc.count),r=[];for(let e=0;e<i.length;e++){const t=i[e];r.push(255&t),r.push((65280&t)>>8),r.push((16711680&t)>>16),r.push(t>>24&255)}t.setVerticesData(a.R.MatricesIndicesKind,r,!1)}if(s.matricesIndicesExtraAttrDesc&&s.matricesIndicesExtraAttrDesc.count>0){const i=new Int32Array(e,s.matricesIndicesExtraAttrDesc.offset,s.matricesIndicesExtraAttrDesc.count),r=[];for(let e=0;e<i.length;e++){const t=i[e];r.push(255&t),r.push((65280&t)>>8),r.push((16711680&t)>>16),r.push(t>>24&255)}t.setVerticesData(a.R.MatricesIndicesExtraKind,r,!1)}if(s.matricesWeightsAttrDesc&&s.matricesWeightsAttrDesc.count>0){const i=new Float32Array(e,s.matricesWeightsAttrDesc.offset,s.matricesWeightsAttrDesc.count);t.setVerticesData(a.R.MatricesWeightsKind,i,!1)}if(s.indicesAttrDesc&&s.indicesAttrDesc.count>0){const i=new Int32Array(e,s.indicesAttrDesc.offset,s.indicesAttrDesc.count);t.setIndices(i,null)}if(s.subMeshesAttrDesc&&s.subMeshesAttrDesc.count>0){const i=new Int32Array(e,s.subMeshesAttrDesc.offset,5*s.subMeshesAttrDesc.count);t.subMeshes=[];for(let e=0;e<s.subMeshesAttrDesc.count;e++){const s=i[5*e+0],r=i[5*e+1],n=i[5*e+2],a=i[5*e+3],h=i[5*e+4];o.K.AddToMesh(s,r,n,a,h,t)}}}else if(e.positions&&e.normals&&e.indices){if(t.setVerticesData(a.R.PositionKind,e.positions,e.positions._updatable),t.setVerticesData(a.R.NormalKind,e.normals,e.normals._updatable),e.tangents&&t.setVerticesData(a.R.TangentKind,e.tangents,e.tangents._updatable),e.uvs&&t.setVerticesData(a.R.UVKind,e.uvs,e.uvs._updatable),e.uvs2&&t.setVerticesData(a.R.UV2Kind,e.uvs2,e.uvs2._updatable),e.uvs3&&t.setVerticesData(a.R.UV3Kind,e.uvs3,e.uvs3._updatable),e.uvs4&&t.setVerticesData(a.R.UV4Kind,e.uvs4,e.uvs4._updatable),e.uvs5&&t.setVerticesData(a.R.UV5Kind,e.uvs5,e.uvs5._updatable),e.uvs6&&t.setVerticesData(a.R.UV6Kind,e.uvs6,e.uvs6._updatable),e.colors&&t.setVerticesData(a.R.ColorKind,r.ov.CheckColors4(e.colors,e.positions.length/3),e.colors._updatable),e.matricesIndices)if(e.matricesIndices._isExpanded)delete e.matricesIndices._isExpanded,t.setVerticesData(a.R.MatricesIndicesKind,e.matricesIndices,e.matricesIndices._updatable);else{const s=[];for(let t=0;t<e.matricesIndices.length;t++){const i=e.matricesIndices[t];s.push(255&i),s.push((65280&i)>>8),s.push((16711680&i)>>16),s.push(i>>24&255)}t.setVerticesData(a.R.MatricesIndicesKind,s,e.matricesIndices._updatable)}if(e.matricesIndicesExtra)if(e.matricesIndicesExtra._isExpanded)delete e.matricesIndices._isExpanded,t.setVerticesData(a.R.MatricesIndicesExtraKind,e.matricesIndicesExtra,e.matricesIndicesExtra._updatable);else{const s=[];for(let t=0;t<e.matricesIndicesExtra.length;t++){const i=e.matricesIndicesExtra[t];s.push(255&i),s.push((65280&i)>>8),s.push((16711680&i)>>16),s.push(i>>24&255)}t.setVerticesData(a.R.MatricesIndicesExtraKind,s,e.matricesIndicesExtra._updatable)}e.matricesWeights&&(g._CleanMatricesWeights(e,t),t.setVerticesData(a.R.MatricesWeightsKind,e.matricesWeights,e.matricesWeights._updatable)),e.matricesWeightsExtra&&t.setVerticesData(a.R.MatricesWeightsExtraKind,e.matricesWeightsExtra,e.matricesWeights._updatable),t.setIndices(e.indices,null)}if(e.subMeshes){t.subMeshes=[];for(let s=0;s<e.subMeshes.length;s++){const i=e.subMeshes[s];o.K.AddToMesh(i.materialIndex,i.verticesStart,i.verticesCount,i.indexStart,i.indexCount,t)}}t._shouldGenerateFlatShading&&(t.convertToFlatShadedMesh(),t._shouldGenerateFlatShading=!1),t.computeWorldMatrix(!0),s.onMeshImportedObservable.notifyObservers(t)}static _CleanMatricesWeights(e,t){const s=.001;if(!h.B.CleanBoneMatrixWeights)return;let i=0;if(!(e.skeletonId>-1))return;{const s=t.getScene().getLastSkeletonById(e.skeletonId);if(!s)return;i=s.bones.length}const r=t.getVerticesData(a.R.MatricesIndicesKind),n=t.getVerticesData(a.R.MatricesIndicesExtraKind),o=e.matricesWeights,l=e.matricesWeightsExtra,c=e.numBoneInfluencer,u=o.length;for(let e=0;e<u;e+=4){let t=0,a=-1;for(let i=0;i<4;i++){const r=o[e+i];t+=r,r<s&&a<0&&(a=i)}if(l)for(let i=0;i<4;i++){const r=l[e+i];t+=r,r<s&&a<0&&(a=i+4)}if((a<0||a>c-1)&&(a=c-1),t>s){const s=1/t;for(let t=0;t<4;t++)o[e+t]*=s;if(l)for(let t=0;t<4;t++)l[e+t]*=s}else a>=4?(l[e+a-4]=1-t,n[e+a-4]=i):(o[e+a]=1-t,r[e+a]=i)}t.setVerticesData(a.R.MatricesIndicesKind,r),e.matricesWeightsExtra&&t.setVerticesData(a.R.MatricesIndicesExtraKind,n)}static Parse(e,t,s){const r=new g(e.id,t,void 0,e.updatable);return r._loadedUniqueId=e.uniqueId,u.Y&&u.Y.AddTagsTo(r,e.tags),e.delayLoadingFile?(r.delayLoadState=4,r.delayLoadingFile=s+e.delayLoadingFile,r._boundingInfo=new l.j(i.Pq.FromArray(e.boundingBoxMinimum),i.Pq.FromArray(e.boundingBoxMaximum)),r._delayInfo=[],e.hasUVs&&r._delayInfo.push(a.R.UVKind),e.hasUVs2&&r._delayInfo.push(a.R.UV2Kind),e.hasUVs3&&r._delayInfo.push(a.R.UV3Kind),e.hasUVs4&&r._delayInfo.push(a.R.UV4Kind),e.hasUVs5&&r._delayInfo.push(a.R.UV5Kind),e.hasUVs6&&r._delayInfo.push(a.R.UV6Kind),e.hasColors&&r._delayInfo.push(a.R.ColorKind),e.hasMatricesIndices&&r._delayInfo.push(a.R.MatricesIndicesKind),e.hasMatricesWeights&&r._delayInfo.push(a.R.MatricesWeightsKind),r._delayLoadingFunction=n.P.ImportVertexData):n.P.ImportVertexData(e,r),t.pushGeometry(r,!0),r}}},12359:(e,t,s)=>{s.d(t,{U:()=>h});var i=s(54983),r=s(59396),n=s(9191),a=s(39341),o=s(70461);n.e._GoldbergMeshParser=(e,t)=>h.Parse(e,t);class h extends n.e{constructor(){super(...arguments),this.goldbergData={faceColors:[],faceCenters:[],faceZaxis:[],faceXaxis:[],faceYaxis:[],nbSharedFaces:0,nbUnsharedFaces:0,nbFaces:0,nbFacesAtPole:0,adjacentFaces:[]}}relatedGoldbergFace(e,t){return void 0===t?(e>this.goldbergData.nbUnsharedFaces-1&&(o.V.Warn("Maximum number of unshared faces used"),e=this.goldbergData.nbUnsharedFaces-1),this.goldbergData.nbUnsharedFaces+e):(e>11&&(o.V.Warn("Last pole used"),e=11),t>this.goldbergData.nbFacesAtPole-1&&(o.V.Warn("Maximum number of faces at a pole used"),t=this.goldbergData.nbFacesAtPole-1),12+e*this.goldbergData.nbFacesAtPole+t)}_changeGoldbergFaceColors(e){for(let t=0;t<e.length;t++){const s=e[t][0],i=e[t][1],r=e[t][2];for(let e=s;e<i+1;e++)this.goldbergData.faceColors[e]=r}const t=[];for(let e=0;e<12;e++)for(let s=0;s<5;s++)t.push(this.goldbergData.faceColors[e].r,this.goldbergData.faceColors[e].g,this.goldbergData.faceColors[e].b,this.goldbergData.faceColors[e].a);for(let e=12;e<this.goldbergData.faceColors.length;e++)for(let s=0;s<6;s++)t.push(this.goldbergData.faceColors[e].r,this.goldbergData.faceColors[e].g,this.goldbergData.faceColors[e].b,this.goldbergData.faceColors[e].a);return t}setGoldbergFaceColors(e){const t=this._changeGoldbergFaceColors(e);this.setVerticesData(r.R.ColorKind,t)}updateGoldbergFaceColors(e){const t=this._changeGoldbergFaceColors(e);this.updateVerticesData(r.R.ColorKind,t)}_changeGoldbergFaceUVs(e){const t=this.getVerticesData(r.R.UVKind);for(let s=0;s<e.length;s++){const i=e[s][0],r=e[s][1],n=e[s][2],a=e[s][3],o=e[s][4],h=[],l=[];let c,u;for(let e=0;e<5;e++)c=n.x+a*Math.cos(o+e*Math.PI/2.5),u=n.y+a*Math.sin(o+e*Math.PI/2.5),c<0&&(c=0),c>1&&(c=1),h.push(c,u);for(let e=0;e<6;e++)c=n.x+a*Math.cos(o+e*Math.PI/3),u=n.y+a*Math.sin(o+e*Math.PI/3),c<0&&(c=0),c>1&&(c=1),l.push(c,u);for(let e=i;e<Math.min(12,r+1);e++)for(let s=0;s<5;s++)t[10*e+2*s]=h[2*s],t[10*e+2*s+1]=h[2*s+1];for(let e=Math.max(12,i);e<r+1;e++)for(let s=0;s<6;s++)t[12*e-24+2*s]=l[2*s],t[12*e-23+2*s]=l[2*s+1]}return t}setGoldbergFaceUVs(e){const t=this._changeGoldbergFaceUVs(e);this.setVerticesData(r.R.UVKind,t)}updateGoldbergFaceUVs(e){const t=this._changeGoldbergFaceUVs(e);this.updateVerticesData(r.R.UVKind,t)}placeOnGoldbergFaceAt(e,t,s){const r=i.Pq.RotationFromAxis(this.goldbergData.faceXaxis[t],this.goldbergData.faceYaxis[t],this.goldbergData.faceZaxis[t]);e.rotation=r,e.position=this.goldbergData.faceCenters[t].add(this.goldbergData.faceXaxis[t].scale(s.x)).add(this.goldbergData.faceYaxis[t].scale(s.y)).add(this.goldbergData.faceZaxis[t].scale(s.z))}serialize(e){super.serialize(e),e.type="GoldbergMesh";const t={};if(t.adjacentFaces=this.goldbergData.adjacentFaces,t.nbSharedFaces=this.goldbergData.nbSharedFaces,t.nbUnsharedFaces=this.goldbergData.nbUnsharedFaces,t.nbFaces=this.goldbergData.nbFaces,t.nbFacesAtPole=this.goldbergData.nbFacesAtPole,this.goldbergData.faceColors){t.faceColors=[];for(const e of this.goldbergData.faceColors)t.faceColors.push(e.asArray())}if(this.goldbergData.faceCenters){t.faceCenters=[];for(const e of this.goldbergData.faceCenters)t.faceCenters.push(e.asArray())}if(this.goldbergData.faceZaxis){t.faceZaxis=[];for(const e of this.goldbergData.faceZaxis)t.faceZaxis.push(e.asArray())}if(this.goldbergData.faceYaxis){t.faceYaxis=[];for(const e of this.goldbergData.faceYaxis)t.faceYaxis.push(e.asArray())}if(this.goldbergData.faceXaxis){t.faceXaxis=[];for(const e of this.goldbergData.faceXaxis)t.faceXaxis.push(e.asArray())}e.goldbergData=t}static Parse(e,t){const s=e.goldbergData;s.faceColors=s.faceColors.map((e=>a.ov.FromArray(e))),s.faceCenters=s.faceCenters.map((e=>i.Pq.FromArray(e))),s.faceZaxis=s.faceZaxis.map((e=>i.Pq.FromArray(e))),s.faceXaxis=s.faceXaxis.map((e=>i.Pq.FromArray(e))),s.faceYaxis=s.faceYaxis.map((e=>i.Pq.FromArray(e)));const r=new h(e.name,t);return r.goldbergData=s,r}}},54568:(e,t,s)=>{s.d(t,{f:()=>a});var i=s(54983),r=s(59396),n=s(9191);n.e._GroundMeshParser=(e,t)=>a.Parse(e,t);class a extends n.e{constructor(e,t){super(e,t),this.generateOctree=!1}getClassName(){return"GroundMesh"}get subdivisions(){return Math.min(this._subdivisionsX,this._subdivisionsY)}get subdivisionsX(){return this._subdivisionsX}get subdivisionsY(){return this._subdivisionsY}optimize(e,t=32){this._subdivisionsX=e,this._subdivisionsY=e,this.subdivide(e);this.createOrUpdateSubmeshesOctree&&this.createOrUpdateSubmeshesOctree(t)}getHeightAtCoordinates(e,t){const s=this.getWorldMatrix(),r=i.AA.Matrix[5];s.invertToRef(r);const n=i.AA.Vector3[8];if(i.Pq.TransformCoordinatesFromFloatsToRef(e,0,t,r,n),e=n.x,t=n.z,e<this._minX||e>=this._maxX||t<=this._minZ||t>this._maxZ)return this.position.y;this._heightQuads&&0!=this._heightQuads.length||(this._initHeightQuads(),this._computeHeightQuads());const a=this._getFacetAt(e,t),o=-(a.x*e+a.z*t+a.w)/a.y;return i.Pq.TransformCoordinatesFromFloatsToRef(0,o,0,s,n),n.y}getNormalAtCoordinates(e,t){const s=new i.Pq(0,1,0);return this.getNormalAtCoordinatesToRef(e,t,s),s}getNormalAtCoordinatesToRef(e,t,s){const r=this.getWorldMatrix(),n=i.AA.Matrix[5];r.invertToRef(n);const a=i.AA.Vector3[8];if(i.Pq.TransformCoordinatesFromFloatsToRef(e,0,t,n,a),e=a.x,t=a.z,e<this._minX||e>this._maxX||t<this._minZ||t>this._maxZ)return this;this._heightQuads&&0!=this._heightQuads.length||(this._initHeightQuads(),this._computeHeightQuads());const o=this._getFacetAt(e,t);return i.Pq.TransformNormalFromFloatsToRef(o.x,o.y,o.z,r,s),this}updateCoordinateHeights(){return this._heightQuads&&0!=this._heightQuads.length||this._initHeightQuads(),this._computeHeightQuads(),this}_getFacetAt(e,t){const s=Math.floor((e+this._maxX)*this._subdivisionsX/this._width),i=Math.floor(-(t+this._maxZ)*this._subdivisionsY/this._height+this._subdivisionsY),r=this._heightQuads[i*this._subdivisionsX+s];let n;return n=t<r.slope.x*e+r.slope.y?r.facet1:r.facet2,n}_initHeightQuads(){const e=this._subdivisionsX,t=this._subdivisionsY;this._heightQuads=new Array;for(let s=0;s<t;s++)for(let t=0;t<e;t++){const r={slope:i.I9.Zero(),facet1:new i.IU(0,0,0,0),facet2:new i.IU(0,0,0,0)};this._heightQuads[s*e+t]=r}return this}_computeHeightQuads(){const e=this.getVerticesData(r.R.PositionKind);if(!e)return this;const t=i.AA.Vector3[3],s=i.AA.Vector3[2],n=i.AA.Vector3[1],a=i.AA.Vector3[0],o=i.AA.Vector3[4],h=i.AA.Vector3[5],l=i.AA.Vector3[6],c=i.AA.Vector3[7],u=i.AA.Vector3[8];let d=0,f=0,p=0,_=0,g=0,m=0,y=0;const x=this._subdivisionsX,A=this._subdivisionsY;for(let r=0;r<A;r++)for(let A=0;A<x;A++){d=3*A,f=r*(x+1)*3,p=(r+1)*(x+1)*3,t.x=e[f+d],t.y=e[f+d+1],t.z=e[f+d+2],s.x=e[f+d+3],s.y=e[f+d+4],s.z=e[f+d+5],n.x=e[p+d],n.y=e[p+d+1],n.z=e[p+d+2],a.x=e[p+d+3],a.y=e[p+d+4],a.z=e[p+d+5],_=(a.z-t.z)/(a.x-t.x),g=t.z-_*t.x,s.subtractToRef(t,o),n.subtractToRef(t,h),a.subtractToRef(t,l),i.Pq.CrossToRef(l,h,c),i.Pq.CrossToRef(o,l,u),c.normalize(),u.normalize(),m=-(c.x*t.x+c.y*t.y+c.z*t.z),y=-(u.x*s.x+u.y*s.y+u.z*s.z);const b=this._heightQuads[r*x+A];b.slope.copyFromFloats(_,g),b.facet1.copyFromFloats(c.x,c.y,c.z,m),b.facet2.copyFromFloats(u.x,u.y,u.z,y)}return this}serialize(e){super.serialize(e),e.subdivisionsX=this._subdivisionsX,e.subdivisionsY=this._subdivisionsY,e.minX=this._minX,e.maxX=this._maxX,e.minZ=this._minZ,e.maxZ=this._maxZ,e.width=this._width,e.height=this._height}static Parse(e,t){const s=new a(e.name,t);return s._subdivisionsX=e.subdivisionsX||1,s._subdivisionsY=e.subdivisionsY||1,s._minX=e.minX,s._maxX=e.maxX,s._minZ=e.minZ,s._maxZ=e.maxZ,s._width=e.width,s._height=e.height,s}}},28900:(e,t,s)=>{s.d(t,{Z:()=>d});var i=s(54983),r=s(70461),n=s(45413),a=s(9191),o=s(34829),h=s(34116),l=s(59396),c=s(90066),u=s(88252);a.e._instancedMeshFactory=(e,t)=>{const s=new d(e,t);if(t.instancedBuffers){s.instancedBuffers={};for(const e in t.instancedBuffers)s.instancedBuffers[e]=t.instancedBuffers[e]}return s};class d extends n.u{constructor(e,t){super(e,t.getScene()),this._indexInSourceMeshInstanceArray=-1,this._distanceToCamera=0,t.addInstance(this),this._sourceMesh=t,this._unIndexed=t._unIndexed,this.position.copyFrom(t.position),this.rotation.copyFrom(t.rotation),this.scaling.copyFrom(t.scaling),t.rotationQuaternion&&(this.rotationQuaternion=t.rotationQuaternion.clone()),this.animations=t.animations.slice();for(const e of t.getAnimationRanges())null!=e&&this.createAnimationRange(e.name,e.from,e.to);this.infiniteDistance=t.infiniteDistance,this.setPivotMatrix(t.getPivotMatrix()),this.refreshBoundingInfo(!0,!0),this._syncSubMeshes()}getClassName(){return"InstancedMesh"}get lightSources(){return this._sourceMesh._lightSources}_resyncLightSources(){}_resyncLightSource(){}_removeLightSource(){}get receiveShadows(){return this._sourceMesh.receiveShadows}set receiveShadows(e){this._sourceMesh?.receiveShadows!==e&&c.S0.Warn("Setting receiveShadows on an instanced mesh has no effect")}get material(){return this._sourceMesh.material}set material(e){this._sourceMesh?.material!==e&&c.S0.Warn("Setting material on an instanced mesh has no effect")}get visibility(){return this._sourceMesh.visibility}set visibility(e){this._sourceMesh?.visibility!==e&&c.S0.Warn("Setting visibility on an instanced mesh has no effect")}get skeleton(){return this._sourceMesh.skeleton}set skeleton(e){this._sourceMesh?.skeleton!==e&&c.S0.Warn("Setting skeleton on an instanced mesh has no effect")}get renderingGroupId(){return this._sourceMesh.renderingGroupId}set renderingGroupId(e){this._sourceMesh&&e!==this._sourceMesh.renderingGroupId&&r.V.Warn("Note - setting renderingGroupId of an instanced mesh has no effect on the scene")}getTotalVertices(){return this._sourceMesh?this._sourceMesh.getTotalVertices():0}getTotalIndices(){return this._sourceMesh.getTotalIndices()}get sourceMesh(){return this._sourceMesh}createInstance(e){return this._sourceMesh.createInstance(e)}isReady(e=!1){return this._sourceMesh.isReady(e,!0)}getVerticesData(e,t,s){return this._sourceMesh.getVerticesData(e,t,s)}copyVerticesData(e,t){this._sourceMesh.copyVerticesData(e,t)}setVerticesData(e,t,s,i){return this.sourceMesh&&this.sourceMesh.setVerticesData(e,t,s,i),this.sourceMesh}updateVerticesData(e,t,s,i){return this.sourceMesh&&this.sourceMesh.updateVerticesData(e,t,s,i),this.sourceMesh}setIndices(e,t=null){return this.sourceMesh&&this.sourceMesh.setIndices(e,t),this.sourceMesh}isVerticesDataPresent(e){return this._sourceMesh.isVerticesDataPresent(e)}getIndices(){return this._sourceMesh.getIndices()}get _positions(){return this._sourceMesh._positions}refreshBoundingInfo(e=!1,t=!1){if(this.hasBoundingInfo&&this.getBoundingInfo().isLocked)return this;let s;s="object"==typeof e?e:{applySkeleton:e,applyMorph:t};const i=this._sourceMesh.geometry?this._sourceMesh.geometry.boundingBias:null;return this._refreshBoundingInfo(this._sourceMesh._getData(s,null,l.R.PositionKind),i),this}_preActivate(){return this._currentLOD&&this._currentLOD._preActivate(),this}_activate(e,t){if(super._activate(e,t),this._sourceMesh.subMeshes||r.V.Warn("Instances should only be created for meshes with geometry."),this._currentLOD){if(this._currentLOD._getWorldMatrixDeterminant()>=0!=this._getWorldMatrixDeterminant()>=0)return this._internalAbstractMeshDataInfo._actAsRegularMesh=!0,!0;if(this._internalAbstractMeshDataInfo._actAsRegularMesh=!1,this._currentLOD._registerInstanceForRenderId(this,e),t){if(!this._currentLOD._internalAbstractMeshDataInfo._isActiveIntermediate)return this._currentLOD._internalAbstractMeshDataInfo._onlyForInstancesIntermediate=!0,!0}else if(!this._currentLOD._internalAbstractMeshDataInfo._isActive)return this._currentLOD._internalAbstractMeshDataInfo._onlyForInstances=!0,!0}return!1}_postActivate(){this._sourceMesh.edgesShareWithInstances&&this._sourceMesh._edgesRenderer&&this._sourceMesh._edgesRenderer.isEnabled&&this._sourceMesh._renderingGroup?(this._sourceMesh._renderingGroup._edgesRenderers.pushNoDuplicate(this._sourceMesh._edgesRenderer),this._sourceMesh._edgesRenderer.customInstances.push(this.getWorldMatrix())):this._edgesRenderer&&this._edgesRenderer.isEnabled&&this._sourceMesh._renderingGroup&&this._sourceMesh._renderingGroup._edgesRenderers.push(this._edgesRenderer)}getWorldMatrix(){if(this._currentLOD&&this._currentLOD.billboardMode!==h.V.BILLBOARDMODE_NONE&&this._currentLOD._masterMesh!==this){this._billboardWorldMatrix||(this._billboardWorldMatrix=new i.uq);const e=this._currentLOD._masterMesh;return this._currentLOD._masterMesh=this,i.AA.Vector3[7].copyFrom(this._currentLOD.position),this._currentLOD.position.set(0,0,0),this._billboardWorldMatrix.copyFrom(this._currentLOD.computeWorldMatrix(!0)),this._currentLOD.position.copyFrom(i.AA.Vector3[7]),this._currentLOD._masterMesh=e,this._billboardWorldMatrix}return super.getWorldMatrix()}get isAnInstance(){return!0}getLOD(e){if(!e)return this;const t=this.sourceMesh.getLODLevels();if(t&&0!==t.length){const t=this.getBoundingInfo();this._currentLOD=this.sourceMesh.getLOD(e,t.boundingSphere)}else this._currentLOD=this.sourceMesh;return this._currentLOD}_preActivateForIntermediateRendering(e){return this.sourceMesh._preActivateForIntermediateRendering(e)}_syncSubMeshes(){if(this.releaseSubMeshes(),this._sourceMesh.subMeshes)for(let e=0;e<this._sourceMesh.subMeshes.length;e++)this._sourceMesh.subMeshes[e].clone(this,this._sourceMesh);return this}_generatePointsArray(){return this._sourceMesh._generatePointsArray()}_updateBoundingInfo(){return this.hasBoundingInfo?this.getBoundingInfo().update(this.worldMatrixFromCache):this.buildBoundingInfo(this.absolutePosition,this.absolutePosition,this.worldMatrixFromCache),this._updateSubMeshesBoundingInfo(this.worldMatrixFromCache),this}clone(e,t=null,s,i){const r=(i||this._sourceMesh).createInstance(e);if(o.r.DeepCopy(this,r,["name","subMeshes","uniqueId","parent","lightSources","receiveShadows","material","visibility","skeleton","sourceMesh","isAnInstance","facetNb","isFacetDataEnabled","isBlocked","useBones","hasInstances","collider","edgesRenderer","forward","up","right","absolutePosition","absoluteScaling","absoluteRotationQuaternion","isWorldMatrixFrozen","nonUniformScaling","behaviors","worldMatrixFromCache","hasThinInstances","hasBoundingInfo"],[]),this.refreshBoundingInfo(),t&&(r.parent=t),!s)for(let e=0;e<this.getScene().meshes.length;e++){const t=this.getScene().meshes[e];t.parent===this&&t.clone(t.name,r)}return r.computeWorldMatrix(!0),this.onClonedObservable.notifyObservers(r),r}dispose(e,t=!1){this._sourceMesh.removeInstance(this),super.dispose(e,t)}_serializeAsParent(e){super._serializeAsParent(e),e.parentId=this._sourceMesh.uniqueId,e.parentInstanceIndex=this._indexInSourceMeshInstanceArray}instantiateHierarchy(e=null,t,s){const i=this.clone("Clone of "+(this.name||this.id),e||this.parent,!0,t&&t.newSourcedMesh);i&&s&&s(this,i);for(const e of this.getChildTransformNodes(!0))e.instantiateHierarchy(i,t,s);return i}}a.e.prototype.registerInstancedBuffer=function(e,t){if(this._userInstancedBuffersStorage?.vertexBuffers[e]?.dispose(),!this.instancedBuffers){this.instancedBuffers={};for(const e of this.instances)e.instancedBuffers={}}this._userInstancedBuffersStorage||(this._userInstancedBuffersStorage={data:{},vertexBuffers:{},strides:{},sizes:{},vertexArrayObjects:this.getEngine().getCaps().vertexArrayObject?{}:void 0}),this.instancedBuffers[e]=null,this._userInstancedBuffersStorage.strides[e]=t,this._userInstancedBuffersStorage.sizes[e]=32*t,this._userInstancedBuffersStorage.data[e]=new Float32Array(this._userInstancedBuffersStorage.sizes[e]),this._userInstancedBuffersStorage.vertexBuffers[e]=new l.R(this.getEngine(),this._userInstancedBuffersStorage.data[e],e,!0,!1,t,!0);for(const t of this.instances)t.instancedBuffers[e]=null;this._invalidateInstanceVertexArrayObject(),this._markSubMeshesAsAttributesDirty()},a.e.prototype._processInstancedBuffers=function(e,t){const s=e?e.length:0;for(const i in this.instancedBuffers){let r=this._userInstancedBuffersStorage.sizes[i];const n=this._userInstancedBuffersStorage.strides[i],a=(s+1)*n;for(;r<a;)r*=2;this._userInstancedBuffersStorage.data[i].length!=r&&(this._userInstancedBuffersStorage.data[i]=new Float32Array(r),this._userInstancedBuffersStorage.sizes[i]=r,this._userInstancedBuffersStorage.vertexBuffers[i]&&(this._userInstancedBuffersStorage.vertexBuffers[i].dispose(),this._userInstancedBuffersStorage.vertexBuffers[i]=null));const o=this._userInstancedBuffersStorage.data[i];let h=0;if(t){const e=this.instancedBuffers[i];e.toArray?e.toArray(o,h):e.copyToArray?e.copyToArray(o,h):o[h]=e,h+=n}for(let t=0;t<s;t++){const s=e[t].instancedBuffers[i];s.toArray?s.toArray(o,h):s.copyToArray?s.copyToArray(o,h):o[h]=s,h+=n}this._userInstancedBuffersStorage.vertexBuffers[i]?this._userInstancedBuffersStorage.vertexBuffers[i].updateDirectly(o,0):(this._userInstancedBuffersStorage.vertexBuffers[i]=new l.R(this.getEngine(),this._userInstancedBuffersStorage.data[i],i,!0,!1,n,!0),this._invalidateInstanceVertexArrayObject())}},a.e.prototype._invalidateInstanceVertexArrayObject=function(){if(this._userInstancedBuffersStorage&&void 0!==this._userInstancedBuffersStorage.vertexArrayObjects){for(const e in this._userInstancedBuffersStorage.vertexArrayObjects)this.getEngine().releaseVertexArrayObject(this._userInstancedBuffersStorage.vertexArrayObjects[e]);this._userInstancedBuffersStorage.vertexArrayObjects={}}},a.e.prototype._disposeInstanceSpecificData=function(){for(this._instanceDataStorage.instancesBuffer&&(this._instanceDataStorage.instancesBuffer.dispose(),this._instanceDataStorage.instancesBuffer=null);this.instances.length;)this.instances[0].dispose();for(const e in this.instancedBuffers)this._userInstancedBuffersStorage.vertexBuffers[e]&&this._userInstancedBuffersStorage.vertexBuffers[e].dispose();this._invalidateInstanceVertexArrayObject(),this.instancedBuffers={}},(0,u.Y5)("BABYLON.InstancedMesh",d)},22814:(e,t,s)=>{s.d(t,{Q:()=>c,l:()=>l});var i=s(39341),r=s(59396),n=s(9191),a=s(28900),o=s(93803),h=s(27225);n.e._LinesMeshParser=(e,t)=>l.Parse(e,t);class l extends n.e{_isShaderMaterial(e){return"ShaderMaterial"===e.getClassName()}constructor(e,t=null,n=null,a=null,o,c,u,d){super(e,t,n,a,o),this.useVertexColor=c,this.useVertexAlpha=u,this.color=new i.v9(1,1,1),this.alpha=1,this._shaderLanguage=0,a&&(this.color=a.color.clone(),this.alpha=a.alpha,this.useVertexColor=a.useVertexColor,this.useVertexAlpha=a.useVertexAlpha),this.intersectionThreshold=.1;const f={attributes:[r.R.PositionKind],uniforms:["world","viewProjection"],needAlphaBlending:!0,defines:[],useClipPlane:null,shaderLanguage:0};u?f.defines.push("#define VERTEXALPHA"):f.needAlphaBlending=!1,c?(f.defines.push("#define VERTEXCOLOR"),f.attributes.push(r.R.ColorKind)):(f.uniforms.push("color"),this._color4=new i.ov),d?this.material=d:(this.getScene().getEngine().isWebGPU&&!l.ForceGLSL&&(this._shaderLanguage=1),f.shaderLanguage=this._shaderLanguage,f.extraInitializationsAsync=async()=>{1===this._shaderLanguage?await Promise.all([s.e(723).then(s.bind(s,88723)),s.e(201).then(s.bind(s,90201))]):await Promise.all([s.e(468).then(s.bind(s,88468)),s.e(310).then(s.bind(s,97310))])},this.material=new h.B("colorShader",this.getScene(),"color",f,!1),this.material.doNotSerialize=!0)}isReady(){return!!this._lineMaterial.isReady(this,!!this._userInstancedBuffersStorage||this.hasThinInstances)&&super.isReady()}getClassName(){return"LinesMesh"}get material(){return this._lineMaterial}set material(e){this._lineMaterial=e,this._lineMaterial.fillMode=o.i.LineListDrawMode}get checkCollisions(){return!1}set checkCollisions(e){}_bind(e,t){if(!this._geometry)return this;const s=this.isUnIndexed?null:this._geometry.getIndexBuffer();if(!this._userInstancedBuffersStorage||this.hasThinInstances?this._geometry._bind(t,s):this._geometry._bind(t,s,this._userInstancedBuffersStorage.vertexBuffers,this._userInstancedBuffersStorage.vertexArrayObjects),!this.useVertexColor&&this._isShaderMaterial(this._lineMaterial)){const{r:e,g:t,b:s}=this.color;this._color4.set(e,t,s,this.alpha),this._lineMaterial.setColor4("color",this._color4)}return this}_draw(e,t,s){if(!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;const i=this.getScene().getEngine();return this._unIndexed?i.drawArraysType(o.i.LineListDrawMode,e.verticesStart,e.verticesCount,s):i.drawElementsType(o.i.LineListDrawMode,e.indexStart,e.indexCount,s),this}dispose(e,t=!1,s){s||this._lineMaterial.dispose(!1,!1,!0),super.dispose(e)}clone(e,t=null,s){return new l(e,this.getScene(),t,this,s)}createInstance(e){const t=new c(e,this);if(this.instancedBuffers){t.instancedBuffers={};for(const e in this.instancedBuffers)t.instancedBuffers[e]=this.instancedBuffers[e]}return t}serialize(e){super.serialize(e),e.color=this.color.asArray(),e.alpha=this.alpha}static Parse(e,t){const s=new l(e.name,t);return s.color=i.v9.FromArray(e.color),s.alpha=e.alpha,s}}l.ForceGLSL=!1;class c extends a.Z{constructor(e,t){super(e,t),this.intersectionThreshold=t.intersectionThreshold}getClassName(){return"InstancedLinesMesh"}}},9191:(e,t,s)=>{s.d(t,{Ez:()=>M,_h:()=>D,e:()=>C});var i=s(6740),r=s(90066),n=s(34829),a=s(88836),o=s(60799),h=s(63832),l=s(54983),c=s(39341),u=s(69346),d=s(59396),f=s(33543),p=s(84254),_=s(45413),g=s(103),m=s(93803),y=s(89617),x=s(90777),A=s(16265),b=s(70461),I=s(88252),P=s(60299),T=s(43981),E=s(74180);class M{}class v{constructor(){this.visibleInstances={},this.batchCache=new D,this.batchCacheReplacementModeInFrozenMode=new D,this.instancesBufferSize=2048}}class D{constructor(){this.mustReturn=!1,this.visibleInstances=new Array,this.renderSelf=[],this.hardwareInstancedRendering=[]}}class S{constructor(){this.instancesCount=0,this.matrixBuffer=null,this.previousMatrixBuffer=null,this.matrixBufferSize=512,this.matrixData=null,this.boundingVectors=[],this.worldMatrices=null}}class R{constructor(){this._areNormalsFrozen=!1,this._source=null,this.meshMap=null,this._preActivateId=-1,this._LODLevels=new Array,this._useLODScreenCoverage=!1,this._effectiveMaterial=null,this._forcedInstanceCount=0,this._overrideRenderingFillMode=null}}class C extends _.u{static _GetDefaultSideOrientation(e){return e||C.FRONTSIDE}get useLODScreenCoverage(){return this._internalMeshDataInfo._useLODScreenCoverage}set useLODScreenCoverage(e){this._internalMeshDataInfo._useLODScreenCoverage=e,this._sortLODLevels()}get computeBonesUsingShaders(){return this._internalAbstractMeshDataInfo._computeBonesUsingShaders}set computeBonesUsingShaders(e){this._internalAbstractMeshDataInfo._computeBonesUsingShaders!==e&&(e&&this._internalMeshDataInfo._sourcePositions&&(this.setVerticesData(d.R.PositionKind,this._internalMeshDataInfo._sourcePositions,!0),this._internalMeshDataInfo._sourceNormals&&this.setVerticesData(d.R.NormalKind,this._internalMeshDataInfo._sourceNormals,!0),this._internalMeshDataInfo._sourcePositions=null,this._internalMeshDataInfo._sourceNormals=null),this._internalAbstractMeshDataInfo._computeBonesUsingShaders=e,this._markSubMeshesAsAttributesDirty())}get onBeforeRenderObservable(){return this._internalMeshDataInfo._onBeforeRenderObservable||(this._internalMeshDataInfo._onBeforeRenderObservable=new i.cP),this._internalMeshDataInfo._onBeforeRenderObservable}get onBeforeBindObservable(){return this._internalMeshDataInfo._onBeforeBindObservable||(this._internalMeshDataInfo._onBeforeBindObservable=new i.cP),this._internalMeshDataInfo._onBeforeBindObservable}get onAfterRenderObservable(){return this._internalMeshDataInfo._onAfterRenderObservable||(this._internalMeshDataInfo._onAfterRenderObservable=new i.cP),this._internalMeshDataInfo._onAfterRenderObservable}get onBetweenPassObservable(){return this._internalMeshDataInfo._onBetweenPassObservable||(this._internalMeshDataInfo._onBetweenPassObservable=new i.cP),this._internalMeshDataInfo._onBetweenPassObservable}get onBeforeDrawObservable(){return this._internalMeshDataInfo._onBeforeDrawObservable||(this._internalMeshDataInfo._onBeforeDrawObservable=new i.cP),this._internalMeshDataInfo._onBeforeDrawObservable}set onBeforeDraw(e){this._onBeforeDrawObserver&&this.onBeforeDrawObservable.remove(this._onBeforeDrawObserver),this._onBeforeDrawObserver=this.onBeforeDrawObservable.add(e)}get hasInstances(){return this.instances.length>0}get hasThinInstances(){return(this.forcedInstanceCount||this._thinInstanceDataStorage.instancesCount||0)>0}get forcedInstanceCount(){return this._internalMeshDataInfo._forcedInstanceCount}set forcedInstanceCount(e){this._internalMeshDataInfo._forcedInstanceCount=e}get sideOrientation(){return this._internalMeshDataInfo._sideOrientation}set sideOrientation(e){this._internalMeshDataInfo._sideOrientation=e,this._internalAbstractMeshDataInfo._sideOrientationHint=this._scene.useRightHandedSystem&&1===e||!this._scene.useRightHandedSystem&&0===e}get overrideMaterialSideOrientation(){return this.sideOrientation}set overrideMaterialSideOrientation(e){this.sideOrientation=e,this.material&&(this.material.sideOrientation=null)}get overrideRenderingFillMode(){return this._internalMeshDataInfo._overrideRenderingFillMode}set overrideRenderingFillMode(e){this._internalMeshDataInfo._overrideRenderingFillMode=e}get material(){return this._internalAbstractMeshDataInfo._material}set material(e){e&&(this.material&&null===this.material.sideOrientation||this._internalAbstractMeshDataInfo._sideOrientationHint)&&(e.sideOrientation=null),this._setMaterial(e)}get source(){return this._internalMeshDataInfo._source}get cloneMeshMap(){return this._internalMeshDataInfo.meshMap}get isUnIndexed(){return this._unIndexed}set isUnIndexed(e){this._unIndexed!==e&&(this._unIndexed=e,this._markSubMeshesAsAttributesDirty())}get worldMatrixInstancedBuffer(){return this._instanceDataStorage.instancesData}get previousWorldMatrixInstancedBuffer(){return this._instanceDataStorage.instancesPreviousData}get manualUpdateOfWorldMatrixInstancedBuffer(){return this._instanceDataStorage.manualUpdate}set manualUpdateOfWorldMatrixInstancedBuffer(e){this._instanceDataStorage.manualUpdate=e}get manualUpdateOfPreviousWorldMatrixInstancedBuffer(){return this._instanceDataStorage.previousManualUpdate}set manualUpdateOfPreviousWorldMatrixInstancedBuffer(e){this._instanceDataStorage.previousManualUpdate=e}get forceWorldMatrixInstancedBufferUpdate(){return this._instanceDataStorage.forceMatrixUpdates}set forceWorldMatrixInstancedBufferUpdate(e){this._instanceDataStorage.forceMatrixUpdates=e}_copySource(e,t,s=!0){const i=this.getScene();if(e._geometry&&e._geometry.applyToMesh(this),n.r.DeepCopy(e,this,["name","material","skeleton","instances","parent","uniqueId","source","metadata","morphTargetManager","hasInstances","worldMatrixInstancedBuffer","previousWorldMatrixInstancedBuffer","hasLODLevels","geometry","isBlocked","areNormalsFrozen","facetNb","isFacetDataEnabled","lightSources","useBones","isAnInstance","collider","edgesRenderer","forward","up","right","absolutePosition","absoluteScaling","absoluteRotationQuaternion","isWorldMatrixFrozen","nonUniformScaling","behaviors","worldMatrixFromCache","hasThinInstances","cloneMeshMap","hasBoundingInfo","physicsBody","physicsImpostor"],["_poseMatrix"]),this._internalMeshDataInfo._source=e,i.useClonedMeshMap&&(e._internalMeshDataInfo.meshMap||(e._internalMeshDataInfo.meshMap={}),e._internalMeshDataInfo.meshMap[this.uniqueId]=this),this._originalBuilderSideOrientation=e._originalBuilderSideOrientation,this._creationDataStorage=e._creationDataStorage,e._ranges){const t=e._ranges;for(const e in t)Object.prototype.hasOwnProperty.call(t,e)&&t[e]&&this.createAnimationRange(e,t[e].from,t[e].to)}if(e.metadata&&e.metadata.clone?this.metadata=e.metadata.clone():this.metadata=e.metadata,this._internalMetadata=e._internalMetadata,a.Y&&a.Y.HasTags(e)&&a.Y.AddTagsTo(this,a.Y.GetTags(e,!0)),this.setEnabled(e.isEnabled(!1)),this.parent=e.parent,this.setPivotMatrix(e.getPivotMatrix(),this._postMultiplyPivotMatrix),this.id=this.name+"."+e.id,this.material=e.material,!t){const t=e.getDescendants(!0);for(let e=0;e<t.length;e++){const s=t[e];s.clone&&s.clone(this.name+"."+s.name,this)}}if(e.morphTargetManager&&(this.morphTargetManager=e.morphTargetManager),i.getPhysicsEngine){const t=i.getPhysicsEngine();if(s&&t)if(1===t.getPluginVersion()){const s=t.getImpostorForPhysicsObject(e);s&&(this.physicsImpostor=s.clone(this))}else 2===t.getPluginVersion()&&e.physicsBody&&e.physicsBody.clone(this)}for(let t=0;t<i.particleSystems.length;t++){const s=i.particleSystems[t];s.emitter===e&&s.clone(s.name,this)}this.skeleton=e.skeleton,this.refreshBoundingInfo(!0,!0),this.computeWorldMatrix(!0)}constructor(e,t=null,s=null,r=null,n,a=!0){super(e,t),this._internalMeshDataInfo=new R,this.delayLoadState=0,this.instances=[],this._creationDataStorage=null,this._geometry=null,this._instanceDataStorage=new v,this._thinInstanceDataStorage=new S,this._shouldGenerateFlatShading=!1,this._originalBuilderSideOrientation=C.DEFAULTSIDE,this.ignoreCameraMaxZ=!1,t=this.getScene(),this._scene.useRightHandedSystem?this.sideOrientation=0:this.sideOrientation=1,this._onBeforeDraw=(e,t,s)=>{e&&s&&(this._uniformBuffer?this.transferToEffect(t):s.bindOnlyWorldMatrix(t))},r&&this._copySource(r,n,a),null!==s&&(this.parent=s),this._instanceDataStorage.hardwareInstancedRendering=this.getEngine().getCaps().instancedArrays,this._internalMeshDataInfo._onMeshReadyObserverAdded=e=>{e.unregisterOnNextCall=!0,this.isReady(!0)?this.onMeshReadyObservable.notifyObservers(this):this._internalMeshDataInfo._checkReadinessObserver||(this._internalMeshDataInfo._checkReadinessObserver=this._scene.onBeforeRenderObservable.add((()=>{this.isReady(!0)&&(this._scene.onBeforeRenderObservable.remove(this._internalMeshDataInfo._checkReadinessObserver),this._internalMeshDataInfo._checkReadinessObserver=null,this.onMeshReadyObservable.notifyObservers(this))})))},this.onMeshReadyObservable=new i.cP(this._internalMeshDataInfo._onMeshReadyObserverAdded),r&&r.onClonedObservable.notifyObservers(this)}instantiateHierarchy(e=null,t,s){const i=0===this.getTotalVertices()||t&&t.doNotInstantiate&&(!0===t.doNotInstantiate||t.doNotInstantiate(this))?this.clone("Clone of "+(this.name||this.id),e||this.parent,!0):this.createInstance("instance of "+(this.name||this.id));i.parent=e||this.parent,i.position=this.position.clone(),i.scaling=this.scaling.clone(),this.rotationQuaternion?i.rotationQuaternion=this.rotationQuaternion.clone():i.rotation=this.rotation.clone(),s&&s(this,i);for(const e of this.getChildTransformNodes(!0))"InstancedMesh"===e.getClassName()&&"Mesh"===i.getClassName()&&e.sourceMesh===this?e.instantiateHierarchy(i,{doNotInstantiate:t&&t.doNotInstantiate||!1,newSourcedMesh:i},s):e.instantiateHierarchy(i,t,s);return i}getClassName(){return"Mesh"}get _isMesh(){return!0}toString(e){let t=super.toString(e);if(t+=", n vertices: "+this.getTotalVertices(),t+=", parent: "+(this._waitingParentId?this._waitingParentId:this.parent?this.parent.name:"NONE"),this.animations)for(let s=0;s<this.animations.length;s++)t+=", animation[0]: "+this.animations[s].toString(e);if(e)if(this._geometry){const e=this.getIndices(),s=this.getVerticesData(d.R.PositionKind);s&&e&&(t+=", flat shading: "+(s.length/3===e.length?"YES":"NO"))}else t+=", flat shading: UNKNOWN";return t}_unBindEffect(){super._unBindEffect();for(const e of this.instances)e._unBindEffect()}get hasLODLevels(){return this._internalMeshDataInfo._LODLevels.length>0}getLODLevels(){return this._internalMeshDataInfo._LODLevels}_sortLODLevels(){const e=this._internalMeshDataInfo._useLODScreenCoverage?-1:1;this._internalMeshDataInfo._LODLevels.sort(((t,s)=>t.distanceOrScreenCoverage<s.distanceOrScreenCoverage?e:t.distanceOrScreenCoverage>s.distanceOrScreenCoverage?-e:0))}addLODLevel(e,t){if(t&&t._masterMesh)return b.V.Warn("You cannot use a mesh as LOD level twice"),this;const s=new E.L(e,t);return this._internalMeshDataInfo._LODLevels.push(s),t&&(t._masterMesh=this),this._sortLODLevels(),this}getLODLevelAtDistance(e){const t=this._internalMeshDataInfo;for(let s=0;s<t._LODLevels.length;s++){const i=t._LODLevels[s];if(i.distanceOrScreenCoverage===e)return i.mesh}return null}removeLODLevel(e){const t=this._internalMeshDataInfo;for(let s=0;s<t._LODLevels.length;s++)t._LODLevels[s].mesh===e&&(t._LODLevels.splice(s,1),e&&(e._masterMesh=null));return this._sortLODLevels(),this}getLOD(e,t){const s=this._internalMeshDataInfo;if(!s._LODLevels||0===s._LODLevels.length)return this;const i=t||this.getBoundingInfo().boundingSphere,r=e.mode===h.i.ORTHOGRAPHIC_CAMERA?e.minZ:i.centerWorld.subtract(e.globalPosition).length();let n=r,a=1;if(s._useLODScreenCoverage){const t=e.screenArea;let s=i.radiusWorld*e.minZ/r;s=s*s*Math.PI,n=s/t,a=-1}if(a*s._LODLevels[s._LODLevels.length-1].distanceOrScreenCoverage>a*n)return this.onLODLevelSelection&&this.onLODLevelSelection(n,this,this),this;for(let e=0;e<s._LODLevels.length;e++){const t=s._LODLevels[e];if(a*t.distanceOrScreenCoverage<a*n){if(t.mesh){if(4===t.mesh.delayLoadState)return t.mesh._checkDelayState(),this;if(2===t.mesh.delayLoadState)return this;t.mesh._preActivate(),t.mesh._updateSubMeshesBoundingInfo(this.worldMatrixFromCache)}return this.onLODLevelSelection&&this.onLODLevelSelection(n,this,t.mesh),t.mesh}}return this.onLODLevelSelection&&this.onLODLevelSelection(n,this,this),this}get geometry(){return this._geometry}getTotalVertices(){return null===this._geometry||void 0===this._geometry?0:this._geometry.getTotalVertices()}getVerticesData(e,t,s,i){if(!this._geometry)return null;let r=i?void 0:this._userInstancedBuffersStorage?.vertexBuffers[e]?.getFloatData(this.instances.length+1,s||t&&1!==this._geometry.meshes.length);return r||(r=this._geometry.getVerticesData(e,t,s)),r}copyVerticesData(e,t){this._geometry&&this._geometry.copyVerticesData(e,t)}getVertexBuffer(e,t){return this._geometry?(t?void 0:this._userInstancedBuffersStorage?.vertexBuffers[e])??this._geometry.getVertexBuffer(e):null}isVerticesDataPresent(e,t){return this._geometry?!t&&void 0!==this._userInstancedBuffersStorage?.vertexBuffers[e]||this._geometry.isVerticesDataPresent(e):!!this._delayInfo&&-1!==this._delayInfo.indexOf(e)}isVertexBufferUpdatable(e,t){if(!this._geometry)return!!this._delayInfo&&-1!==this._delayInfo.indexOf(e);if(!t){const t=this._userInstancedBuffersStorage?.vertexBuffers[e];if(t)return t.isUpdatable()}return this._geometry.isVertexBufferUpdatable(e)}getVerticesDataKinds(e){if(!this._geometry){const e=[];return this._delayInfo&&this._delayInfo.forEach((function(t){e.push(t)})),e}const t=this._geometry.getVerticesDataKinds();if(!e&&this._userInstancedBuffersStorage)for(const e in this._userInstancedBuffersStorage.vertexBuffers)-1===t.indexOf(e)&&t.push(e);return t}getTotalIndices(){return this._geometry?this._geometry.getTotalIndices():0}getIndices(e,t){return this._geometry?this._geometry.getIndices(e,t):[]}get isBlocked(){return null!==this._masterMesh&&void 0!==this._masterMesh}isReady(e=!1,t=!1){if(2===this.delayLoadState)return!1;if(!super.isReady(e))return!1;if(!this.subMeshes||0===this.subMeshes.length)return!0;if(!e)return!0;const s=this.getEngine(),i=this.getScene(),r=t||s.getCaps().instancedArrays&&(this.instances.length>0||this.hasThinInstances);this.computeWorldMatrix();const n=this.material||i.defaultMaterial;if(n)if(n._storeEffectOnSubMeshes)for(const e of this.subMeshes){const t=e.getMaterial();if(t)if(t._storeEffectOnSubMeshes){if(!t.isReadyForSubMesh(this,e,r))return!1}else if(!t.isReady(this,r))return!1}else if(!n.isReady(this,r))return!1;const a=s.currentRenderPassId;for(const e of this.lightSources){const t=e.getShadowGenerators();if(!t)continue;const i=t.values();for(let e=i.next();!0!==e.done;e=i.next()){const t=e.value;if(t&&(!t.getShadowMap()?.renderList||t.getShadowMap()?.renderList&&-1!==t.getShadowMap()?.renderList?.indexOf(this))){const e=t.getShadowMap().renderPassIds??[s.currentRenderPassId];for(let i=0;i<e.length;++i){s.currentRenderPassId=e[i];for(const e of this.subMeshes)if(!t.isReady(e,r,e.getMaterial()?.needAlphaBlendingForMesh(this)??!1))return s.currentRenderPassId=a,!1}s.currentRenderPassId=a}}}for(const e of this._internalMeshDataInfo._LODLevels)if(e.mesh&&!e.mesh.isReady(r))return!1;return!0}get areNormalsFrozen(){return this._internalMeshDataInfo._areNormalsFrozen}freezeNormals(){return this._internalMeshDataInfo._areNormalsFrozen=!0,this}unfreezeNormals(){return this._internalMeshDataInfo._areNormalsFrozen=!1,this}set overridenInstanceCount(e){this._instanceDataStorage.overridenInstanceCount=e}_preActivate(){const e=this._internalMeshDataInfo,t=this.getScene().getRenderId();return e._preActivateId===t||(e._preActivateId=t,this._instanceDataStorage.visibleInstances=null),this}_preActivateForIntermediateRendering(e){return this._instanceDataStorage.visibleInstances&&(this._instanceDataStorage.visibleInstances.intermediateDefaultRenderId=e),this}_registerInstanceForRenderId(e,t){return this._instanceDataStorage.visibleInstances||(this._instanceDataStorage.visibleInstances={defaultRenderId:t,selfDefaultRenderId:this._renderId}),this._instanceDataStorage.visibleInstances[t]||(void 0!==this._instanceDataStorage.previousRenderId&&this._instanceDataStorage.isFrozen&&(this._instanceDataStorage.visibleInstances[this._instanceDataStorage.previousRenderId]=null),this._instanceDataStorage.previousRenderId=t,this._instanceDataStorage.visibleInstances[t]=new Array),this._instanceDataStorage.visibleInstances[t].push(e),this}_afterComputeWorldMatrix(){super._afterComputeWorldMatrix(),this.hasThinInstances&&(this.doNotSyncBoundingInfo||this.thinInstanceRefreshBoundingInfo(!1))}_postActivate(){this.edgesShareWithInstances&&this.edgesRenderer&&this.edgesRenderer.isEnabled&&this._renderingGroup&&(this._renderingGroup._edgesRenderers.pushNoDuplicate(this.edgesRenderer),this.edgesRenderer.customInstances.push(this.getWorldMatrix()))}refreshBoundingInfo(e=!1,t=!1){if(this.hasBoundingInfo&&this.getBoundingInfo().isLocked)return this;let s;s="object"==typeof e?e:{applySkeleton:e,applyMorph:t};const i=this.geometry?this.geometry.boundingBias:null;return this._refreshBoundingInfo(this._getData(s,null,d.R.PositionKind),i),this}_createGlobalSubMesh(e){const t=this.getTotalVertices();if(!t||!this.getIndices())return null;if(this.subMeshes&&this.subMeshes.length>0){const s=this.getIndices();if(!s)return null;const i=s.length;let r=!1;if(e)r=!0;else for(const e of this.subMeshes){if(e.indexStart+e.indexCount>i){r=!0;break}if(e.verticesStart+e.verticesCount>t){r=!0;break}}if(!r)return this.subMeshes[0]}return this.releaseSubMeshes(),new g.K(0,0,t,0,this.getTotalIndices(),this)}subdivide(e){if(e<1)return;const t=this.getTotalIndices();let s=t/e|0,i=0;for(;s%3!=0;)s++;this.releaseSubMeshes();for(let r=0;r<e&&!(i>=t);r++)g.K.CreateFromIndices(0,i,r===e-1?t-i:s,this,void 0,!1),i+=s;this.refreshBoundingInfo(),this.synchronizeInstances()}setVerticesData(e,t,s=!1,i){if(this._geometry)this._geometry.setVerticesData(e,t,s,i);else{const i=new f.P;i.set(t,e);const r=this.getScene();new p.V(p.V.RandomId(),r,i,s,this)}return this}removeVerticesData(e){this._geometry&&this._geometry.removeVerticesData(e)}markVerticesDataAsUpdatable(e,t=!0){const s=this.getVertexBuffer(e);s&&s.isUpdatable()!==t&&this.setVerticesData(e,this.getVerticesData(e),t)}setVerticesBuffer(e,t=!0){return this._geometry||(this._geometry=p.V.CreateGeometryForMesh(this)),this._geometry.setVerticesBuffer(e,null,t),this}updateVerticesData(e,t,s,i){return this._geometry?(i?(this.makeGeometryUnique(),this.updateVerticesData(e,t,s,!1)):this._geometry.updateVerticesData(e,t,s),this):this}updateMeshPositions(e,t=!0){const s=this.getVerticesData(d.R.PositionKind);if(!s)return this;if(e(s),this.updateVerticesData(d.R.PositionKind,s,!1,!1),t){const e=this.getIndices(),t=this.getVerticesData(d.R.NormalKind);if(!t)return this;f.P.ComputeNormals(s,e,t),this.updateVerticesData(d.R.NormalKind,t,!1,!1)}return this}makeGeometryUnique(){if(!this._geometry)return this;if(1===this._geometry.meshes.length)return this;const e=this._geometry,t=this._geometry.copy(p.V.RandomId());return e.releaseForMesh(this,!0),t.applyToMesh(this),this}setIndexBuffer(e,t,s){let i=this._geometry;i||(i=new p.V(p.V.RandomId(),this.getScene(),void 0,void 0,this)),i.setIndexBuffer(e,t,s)}setIndices(e,t=null,s=!1,i=!1){if(this._geometry)this._geometry.setIndices(e,t,s,i);else{const t=new f.P;t.indices=e;const i=this.getScene();new p.V(p.V.RandomId(),i,t,s,this)}return this}updateIndices(e,t,s=!1){return this._geometry?(this._geometry.updateIndices(e,t,s),this):this}toLeftHanded(){return this._geometry?(this._geometry.toLeftHanded(),this):this}_bind(e,t,s,i=!0){if(!this._geometry)return this;const r=this.getScene().getEngine();let n;if(this._unIndexed)n=this._getRenderingFillMode(s)===m.i.WireFrameFillMode?e._getLinesIndexBuffer(this.getIndices(),r):null;else switch(this._getRenderingFillMode(s)){case m.i.PointFillMode:n=null;break;case m.i.WireFrameFillMode:n=e._getLinesIndexBuffer(this.getIndices(),r);break;default:case m.i.TriangleFillMode:n=this._geometry.getIndexBuffer()}return this._bindDirect(t,n,i)}_bindDirect(e,t,s=!0){return this._geometry?(this.morphTargetManager&&this.morphTargetManager.isUsingTextureForTargets&&this.morphTargetManager._bind(e),s&&this._userInstancedBuffersStorage&&!this.hasThinInstances?this._geometry._bind(e,t,this._userInstancedBuffersStorage.vertexBuffers,this._userInstancedBuffersStorage.vertexArrayObjects):this._geometry._bind(e,t),this):this}_draw(e,t,s){if(!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;this._internalMeshDataInfo._onBeforeDrawObservable&&this._internalMeshDataInfo._onBeforeDrawObservable.notifyObservers(this);const i=this.getScene().getEngine();return this._unIndexed&&t!==m.i.WireFrameFillMode||t==m.i.PointFillMode?i.drawArraysType(t,e.verticesStart,e.verticesCount,this.forcedInstanceCount||s):t==m.i.WireFrameFillMode?i.drawElementsType(t,0,e._linesIndexCount,this.forcedInstanceCount||s):i.drawElementsType(t,e.indexStart,e.indexCount,this.forcedInstanceCount||s),this}registerBeforeRender(e){return this.onBeforeRenderObservable.add(e),this}unregisterBeforeRender(e){return this.onBeforeRenderObservable.removeCallback(e),this}registerAfterRender(e){return this.onAfterRenderObservable.add(e),this}unregisterAfterRender(e){return this.onAfterRenderObservable.removeCallback(e),this}_getInstancesRenderList(e,t=!1){if(this._instanceDataStorage.isFrozen){if(t)return this._instanceDataStorage.batchCacheReplacementModeInFrozenMode.hardwareInstancedRendering[e]=!1,this._instanceDataStorage.batchCacheReplacementModeInFrozenMode.renderSelf[e]=!0,this._instanceDataStorage.batchCacheReplacementModeInFrozenMode;if(this._instanceDataStorage.previousBatch)return this._instanceDataStorage.previousBatch}const s=this.getScene(),i=s._isInIntermediateRendering(),r=i?this._internalAbstractMeshDataInfo._onlyForInstancesIntermediate:this._internalAbstractMeshDataInfo._onlyForInstances,n=this._instanceDataStorage.batchCache;if(n.mustReturn=!1,n.renderSelf[e]=t||!r&&this.isEnabled()&&this.isVisible,n.visibleInstances[e]=null,this._instanceDataStorage.visibleInstances&&!t){const t=this._instanceDataStorage.visibleInstances,r=s.getRenderId(),a=i?t.intermediateDefaultRenderId:t.defaultRenderId;n.visibleInstances[e]=t[r],!n.visibleInstances[e]&&a&&(n.visibleInstances[e]=t[a])}return n.hardwareInstancedRendering[e]=!t&&this._instanceDataStorage.hardwareInstancedRendering&&null!==n.visibleInstances[e]&&void 0!==n.visibleInstances[e],this._instanceDataStorage.previousBatch=n,n}_renderWithInstances(e,t,s,i,r){const n=s.visibleInstances[e._id],a=n?n.length:0,o=this._instanceDataStorage,h=o.instancesBufferSize;let c=o.instancesBuffer,u=o.instancesPreviousBuffer;const f=16*(a+1)*4;for(;o.instancesBufferSize<f;)o.instancesBufferSize*=2;o.instancesData&&h==o.instancesBufferSize||(o.instancesData=new Float32Array(o.instancesBufferSize/4)),(this._scene.needsPreviousWorldMatrices&&!o.instancesPreviousData||h!=o.instancesBufferSize)&&(o.instancesPreviousData=new Float32Array(o.instancesBufferSize/4));let p=0,_=0;const g=s.renderSelf[e._id],m=!c||h!==o.instancesBufferSize||this._scene.needsPreviousWorldMatrices&&!o.instancesPreviousBuffer;if(this._instanceDataStorage.manualUpdate||o.isFrozen&&!m)_=(g?1:0)+a;else{const t=this.getWorldMatrix();if(g&&(this._scene.needsPreviousWorldMatrices&&(o.masterMeshPreviousWorldMatrix?(o.masterMeshPreviousWorldMatrix.copyToArray(o.instancesPreviousData,p),o.masterMeshPreviousWorldMatrix.copyFrom(t)):(o.masterMeshPreviousWorldMatrix=t.clone(),o.masterMeshPreviousWorldMatrix.copyToArray(o.instancesPreviousData,p))),t.copyToArray(o.instancesData,p),p+=16,_++),n){if(C.INSTANCEDMESH_SORT_TRANSPARENT&&this._scene.activeCamera&&e.getMaterial()?.needAlphaBlendingForMesh(e.getRenderingMesh())){const e=this._scene.activeCamera.globalPosition;for(let t=0;t<n.length;t++){const s=n[t];s._distanceToCamera=l.Pq.Distance(s.getBoundingInfo().boundingSphere.centerWorld,e)}n.sort(((e,t)=>e._distanceToCamera>t._distanceToCamera?-1:e._distanceToCamera<t._distanceToCamera?1:0))}for(let e=0;e<n.length;e++){const t=n[e],s=t.getWorldMatrix();s.copyToArray(o.instancesData,p),this._scene.needsPreviousWorldMatrices&&(t._previousWorldMatrix?(t._previousWorldMatrix.copyToArray(o.instancesPreviousData,p),t._previousWorldMatrix.copyFrom(s)):(t._previousWorldMatrix=s.clone(),t._previousWorldMatrix.copyToArray(o.instancesPreviousData,p))),p+=16,_++}}}return m?(c&&c.dispose(),u&&u.dispose(),c=new d.h(r,o.instancesData,!0,16,!1,!0),o.instancesBuffer=c,this._userInstancedBuffersStorage||(this._userInstancedBuffersStorage={data:{},vertexBuffers:{},strides:{},sizes:{},vertexArrayObjects:this.getEngine().getCaps().vertexArrayObject?{}:void 0}),this._userInstancedBuffersStorage.vertexBuffers.world0=c.createVertexBuffer("world0",0,4),this._userInstancedBuffersStorage.vertexBuffers.world1=c.createVertexBuffer("world1",4,4),this._userInstancedBuffersStorage.vertexBuffers.world2=c.createVertexBuffer("world2",8,4),this._userInstancedBuffersStorage.vertexBuffers.world3=c.createVertexBuffer("world3",12,4),this._scene.needsPreviousWorldMatrices&&(u=new d.h(r,o.instancesPreviousData,!0,16,!1,!0),o.instancesPreviousBuffer=u,this._userInstancedBuffersStorage.vertexBuffers.previousWorld0=u.createVertexBuffer("previousWorld0",0,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld1=u.createVertexBuffer("previousWorld1",4,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld2=u.createVertexBuffer("previousWorld2",8,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld3=u.createVertexBuffer("previousWorld3",12,4)),this._invalidateInstanceVertexArrayObject()):this._instanceDataStorage.isFrozen&&!this._instanceDataStorage.forceMatrixUpdates||(c.updateDirectly(o.instancesData,0,_),!this._scene.needsPreviousWorldMatrices||this._instanceDataStorage.manualUpdate&&!this._instanceDataStorage.previousManualUpdate||u.updateDirectly(o.instancesPreviousData,0,_)),this._processInstancedBuffers(n,g),this.getScene()._activeIndices.addCount(e.indexCount*_,!1),r._currentDrawContext&&(r._currentDrawContext.useInstancing=!0),this._bind(e,i,t),this._draw(e,t,_),!this._scene.needsPreviousWorldMatrices||m||!this._instanceDataStorage.manualUpdate||this._instanceDataStorage.isFrozen&&!this._instanceDataStorage.forceMatrixUpdates||this._instanceDataStorage.previousManualUpdate||u.updateDirectly(o.instancesData,0,_),r.unbindInstanceAttributes(),this}_renderWithThinInstances(e,t,s,i){const r=this._thinInstanceDataStorage?.instancesCount??0;this.getScene()._activeIndices.addCount(e.indexCount*r,!1),i._currentDrawContext&&(i._currentDrawContext.useInstancing=!0),this._bind(e,s,t),this._draw(e,t,r),this._scene.needsPreviousWorldMatrices&&!this._thinInstanceDataStorage.previousMatrixData&&this._thinInstanceDataStorage.matrixData&&(this._thinInstanceDataStorage.previousMatrixBuffer?this._thinInstanceDataStorage.previousMatrixBuffer.updateDirectly(this._thinInstanceDataStorage.matrixData,0,r):this._thinInstanceDataStorage.previousMatrixBuffer=this._thinInstanceCreateMatrixBuffer("previousWorld",this._thinInstanceDataStorage.matrixData,!1)),i.unbindInstanceAttributes()}_processInstancedBuffers(e,t){}_processRendering(e,t,s,i,r,n,a,o){const h=this.getScene(),l=h.getEngine();if(i=this._getRenderingFillMode(i),n&&t.getRenderingMesh().hasThinInstances)return this._renderWithThinInstances(t,i,s,l),this;if(n)this._renderWithInstances(t,i,r,s,l);else{l._currentDrawContext&&(l._currentDrawContext.useInstancing=!1);let s=0;r.renderSelf[t._id]&&(a&&a(!1,e.getWorldMatrix(),o),s++,this._draw(t,i,this._instanceDataStorage.overridenInstanceCount));const n=r.visibleInstances[t._id];if(n){const e=n.length;s+=e;for(let s=0;s<e;s++){const e=n[s].getWorldMatrix();a&&a(!0,e,o),this._draw(t,i)}}h._activeIndices.addCount(t.indexCount*s,!1)}return this}_rebuild(e=!1){if(this._instanceDataStorage.instancesBuffer&&(e&&this._instanceDataStorage.instancesBuffer.dispose(),this._instanceDataStorage.instancesBuffer=null),this._userInstancedBuffersStorage){for(const t in this._userInstancedBuffersStorage.vertexBuffers){const s=this._userInstancedBuffersStorage.vertexBuffers[t];s&&(e&&s.dispose(),this._userInstancedBuffersStorage.vertexBuffers[t]=null)}this._userInstancedBuffersStorage.vertexArrayObjects&&(this._userInstancedBuffersStorage.vertexArrayObjects={})}this._internalMeshDataInfo._effectiveMaterial=null,super._rebuild(e)}_freeze(){if(this.subMeshes){for(let e=0;e<this.subMeshes.length;e++)this._getInstancesRenderList(e);this._internalMeshDataInfo._effectiveMaterial=null,this._instanceDataStorage.isFrozen=!0}}_unFreeze(){this._instanceDataStorage.isFrozen=!1,this._instanceDataStorage.previousBatch=null}renderWithRenderPassId(e,t,s,i,r=!0){const n=this._scene.getEngine(),a=n.currentRenderPassId;if(void 0!==e&&(n.currentRenderPassId=e),i)(!r||r&&i.isInFrustum(this._scene._frustumPlanes))&&this.render(i,!!t,s);else for(let e=0;e<this.subMeshes.length;e++){const i=this.subMeshes[e];(!r||r&&i.isInFrustum(this._scene._frustumPlanes))&&this.render(i,!!t,s)}return void 0!==e&&(n.currentRenderPassId=a),this}directRender(){if(!this.subMeshes)return this;for(const e of this.subMeshes)this.render(e,!1);return this}render(e,t,s){const i=this.getScene();this._internalAbstractMeshDataInfo._isActiveIntermediate?this._internalAbstractMeshDataInfo._isActiveIntermediate=!1:this._internalAbstractMeshDataInfo._isActive=!1;const r=i.activeCameras?.length??0;if((r>1&&i.activeCamera===i.activeCameras[0]||r<=1)&&this._checkOcclusionQuery()&&!this._occlusionDataStorage.forceRenderingWhenOccluded)return this;const n=this._getInstancesRenderList(e._id,!!s);if(n.mustReturn)return this;if(!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;const a=i.getEngine();let o=0,h=null;this.ignoreCameraMaxZ&&i.activeCamera&&!i._isInIntermediateRendering()&&(o=i.activeCamera.maxZ,h=i.activeCamera,i.activeCamera.maxZ=0,i.updateTransformMatrix(!0)),this._internalMeshDataInfo._onBeforeRenderObservable&&this._internalMeshDataInfo._onBeforeRenderObservable.notifyObservers(this);const l=e.getRenderingMesh(),c=n.hardwareInstancedRendering[e._id]||l.hasThinInstances||!!this._userInstancedBuffersStorage&&!e.getMesh()._internalAbstractMeshDataInfo._actAsRegularMesh,u=this._instanceDataStorage,d=e.getMaterial();if(!d)return h&&(h.maxZ=o,i.updateTransformMatrix(!0)),this;if(u.isFrozen&&this._internalMeshDataInfo._effectiveMaterial&&this._internalMeshDataInfo._effectiveMaterial===d){if(d._storeEffectOnSubMeshes&&!e._drawWrapper?._wasPreviouslyReady||!d._storeEffectOnSubMeshes&&!d._getDrawWrapper()._wasPreviouslyReady)return h&&(h.maxZ=o,i.updateTransformMatrix(!0)),this}else{if(d._storeEffectOnSubMeshes){if(!d.isReadyForSubMesh(this,e,c))return h&&(h.maxZ=o,i.updateTransformMatrix(!0)),this}else if(!d.isReady(this,c))return h&&(h.maxZ=o,i.updateTransformMatrix(!0)),this;this._internalMeshDataInfo._effectiveMaterial=d}let f;t&&a.setAlphaMode(this._internalMeshDataInfo._effectiveMaterial.alphaMode),f=this._internalMeshDataInfo._effectiveMaterial._storeEffectOnSubMeshes?e._drawWrapper:this._internalMeshDataInfo._effectiveMaterial._getDrawWrapper();const p=f?.effect??null;for(const t of i._beforeRenderingMeshStage)t.action(this,e,n,p);if(!f||!p)return h&&(h.maxZ=o,i.updateTransformMatrix(!0)),this;const _=s||this;let g;if(u.isFrozen||!this._internalMeshDataInfo._effectiveMaterial.backFaceCulling&&null===this._internalMeshDataInfo._effectiveMaterial.sideOrientation&&!this._internalMeshDataInfo._effectiveMaterial.twoSidedLighting)g=u.sideOrientation;else{const e=_._getWorldMatrixDeterminant();g=this._internalMeshDataInfo._effectiveMaterial._getEffectiveOrientation(this),e<0&&(g=g===m.i.ClockWiseSideOrientation?m.i.CounterClockWiseSideOrientation:m.i.ClockWiseSideOrientation),u.sideOrientation=g}const y=this._internalMeshDataInfo._effectiveMaterial._preBind(f,g);this._internalMeshDataInfo._effectiveMaterial.forceDepthWrite&&a.setDepthWrite(!0);const x=this._internalMeshDataInfo._effectiveMaterial,A=x.fillMode;this._internalMeshDataInfo._onBeforeBindObservable&&this._internalMeshDataInfo._onBeforeBindObservable.notifyObservers(this),c||this._bind(e,p,A,!1);const b=_.getWorldMatrix();x._storeEffectOnSubMeshes?x.bindForSubMesh(b,this,e):x.bind(b,this),!x.backFaceCulling&&x.separateCullingPass&&(a.setState(!0,x.zOffset,!1,!y,x.cullBackFaces,x.stencil,x.zOffsetUnits),this._processRendering(this,e,p,A,n,c,this._onBeforeDraw,this._internalMeshDataInfo._effectiveMaterial),a.setState(!0,x.zOffset,!1,y,x.cullBackFaces,x.stencil,x.zOffsetUnits),this._internalMeshDataInfo._onBetweenPassObservable&&this._internalMeshDataInfo._onBetweenPassObservable.notifyObservers(e)),this._processRendering(this,e,p,A,n,c,this._onBeforeDraw,this._internalMeshDataInfo._effectiveMaterial),this._internalMeshDataInfo._effectiveMaterial.unbind();for(const t of i._afterRenderingMeshStage)t.action(this,e,n,p);return this._internalMeshDataInfo._onAfterRenderObservable&&this._internalMeshDataInfo._onAfterRenderObservable.notifyObservers(this),h&&(h.maxZ=o,i.updateTransformMatrix(!0)),2!==i.performancePriority||u.isFrozen||this._freeze(),this}cleanMatrixWeights(){this.isVerticesDataPresent(d.R.MatricesWeightsKind)&&(this.isVerticesDataPresent(d.R.MatricesWeightsExtraKind)?this._normalizeSkinWeightsAndExtra():this._normalizeSkinFourWeights())}_normalizeSkinFourWeights(){const e=this.getVerticesData(d.R.MatricesWeightsKind),t=e.length;for(let s=0;s<t;s+=4){const t=e[s]+e[s+1]+e[s+2]+e[s+3];if(0===t)e[s]=1;else{const i=1/t;e[s]*=i,e[s+1]*=i,e[s+2]*=i,e[s+3]*=i}}this.setVerticesData(d.R.MatricesWeightsKind,e)}_normalizeSkinWeightsAndExtra(){const e=this.getVerticesData(d.R.MatricesWeightsExtraKind),t=this.getVerticesData(d.R.MatricesWeightsKind),s=t.length;for(let i=0;i<s;i+=4){let s=t[i]+t[i+1]+t[i+2]+t[i+3];if(s+=e[i]+e[i+1]+e[i+2]+e[i+3],0===s)t[i]=1;else{const r=1/s;t[i]*=r,t[i+1]*=r,t[i+2]*=r,t[i+3]*=r,e[i]*=r,e[i+1]*=r,e[i+2]*=r,e[i+3]*=r}}this.setVerticesData(d.R.MatricesWeightsKind,t),this.setVerticesData(d.R.MatricesWeightsKind,e)}validateSkinning(){const e=this.getVerticesData(d.R.MatricesWeightsExtraKind),t=this.getVerticesData(d.R.MatricesWeightsKind);if(null===t||null==this.skeleton)return{skinned:!1,valid:!0,report:"not skinned"};const s=t.length;let i=0,r=0,n=0,a=0;const o=null===e?4:8,h=[];for(let e=0;e<=o;e++)h[e]=0;for(let l=0;l<s;l+=4){let s=t[l],c=s,u=0===c?0:1;for(let r=1;r<o;r++){const n=r<4?t[l+r]:e[l+r-4];n>s&&i++,0!==n&&u++,c+=n,s=n}if(h[u]++,u>n&&(n=u),0===c)r++;else{const s=1/c;let i=0;for(let r=0;r<o;r++)i+=r<4?Math.abs(t[l+r]-t[l+r]*s):Math.abs(e[l+r-4]-e[l+r-4]*s);i>.001&&a++}}const l=this.skeleton.bones.length,c=this.getVerticesData(d.R.MatricesIndicesKind),u=this.getVerticesData(d.R.MatricesIndicesExtraKind);let f=0;for(let e=0;e<s;e+=4)for(let t=0;t<o;t++){const s=t<4?c[e+t]:u[e+t-4];(s>=l||s<0)&&f++}return{skinned:!0,valid:0===r&&0===a&&0===f,report:"Number of Weights = "+s/4+"\nMaximum influences = "+n+"\nMissing Weights = "+r+"\nNot Sorted = "+i+"\nNot Normalized = "+a+"\nWeightCounts = ["+h+"]\nNumber of bones = "+l+"\nBad Bone Indices = "+f}}_checkDelayState(){const e=this.getScene();return this._geometry?this._geometry.load(e):4===this.delayLoadState&&(this.delayLoadState=2,this._queueLoad(e)),this}_queueLoad(e){e.addPendingData(this);const t=-1!==this.delayLoadingFile.indexOf(".babylonbinarymeshdata");return r.S0.LoadFile(this.delayLoadingFile,(t=>{t instanceof ArrayBuffer?this._delayLoadingFunction(t,this):this._delayLoadingFunction(JSON.parse(t),this),this.instances.forEach((e=>{e.refreshBoundingInfo(),e._syncSubMeshes()})),this.delayLoadState=1,e.removePendingData(this)}),(()=>{}),e.offlineProvider,t),this}isInFrustum(e){return 2!==this.delayLoadState&&!!super.isInFrustum(e)&&(this._checkDelayState(),!0)}setMaterialById(e){const t=this.getScene().materials;let s;for(s=t.length-1;s>-1;s--)if(t[s].id===e)return this.material=t[s],this;const i=this.getScene().multiMaterials;for(s=i.length-1;s>-1;s--)if(i[s].id===e)return this.material=i[s],this;return this}getAnimatables(){const e=[];return this.material&&e.push(this.material),this.skeleton&&e.push(this.skeleton),e}bakeTransformIntoVertices(e){if(!this.isVerticesDataPresent(d.R.PositionKind))return this;const t=this.subMeshes.splice(0);this._resetPointsArrayCache();let s=this.getVerticesData(d.R.PositionKind);const i=l.Pq.Zero();let r;for(r=0;r<s.length;r+=3)l.Pq.TransformCoordinatesFromFloatsToRef(s[r],s[r+1],s[r+2],e,i).toArray(s,r);if(this.setVerticesData(d.R.PositionKind,s,this.getVertexBuffer(d.R.PositionKind).isUpdatable()),this.isVerticesDataPresent(d.R.NormalKind)){for(s=this.getVerticesData(d.R.NormalKind),r=0;r<s.length;r+=3)l.Pq.TransformNormalFromFloatsToRef(s[r],s[r+1],s[r+2],e,i).normalize().toArray(s,r);this.setVerticesData(d.R.NormalKind,s,this.getVertexBuffer(d.R.NormalKind).isUpdatable())}if(this.isVerticesDataPresent(d.R.TangentKind)){for(s=this.getVerticesData(d.R.TangentKind),r=0;r<s.length;r+=4)l.Pq.TransformNormalFromFloatsToRef(s[r],s[r+1],s[r+2],e,i).normalize().toArray(s,r);this.setVerticesData(d.R.TangentKind,s,this.getVertexBuffer(d.R.TangentKind).isUpdatable())}return e.determinant()<0&&this.flipFaces(),this.releaseSubMeshes(),this.subMeshes=t,this}bakeCurrentTransformIntoVertices(e=!0){return this.bakeTransformIntoVertices(this.computeWorldMatrix(!0)),this.resetLocalMatrix(e),this}get _positions(){return this._internalAbstractMeshDataInfo._positions||this._geometry&&this._geometry._positions||null}_resetPointsArrayCache(){return this._geometry&&this._geometry._resetPointsArrayCache(),this}_generatePointsArray(){return!!this._geometry&&this._geometry._generatePointsArray()}clone(e="",t=null,s,i=!0){return new C(e,this.getScene(),t,this,s,i)}dispose(e,t=!1){this.morphTargetManager=null,this._geometry&&this._geometry.releaseForMesh(this,!0);const s=this._internalMeshDataInfo;if(s._onBeforeDrawObservable&&s._onBeforeDrawObservable.clear(),s._onBeforeBindObservable&&s._onBeforeBindObservable.clear(),s._onBeforeRenderObservable&&s._onBeforeRenderObservable.clear(),s._onAfterRenderObservable&&s._onAfterRenderObservable.clear(),s._onBetweenPassObservable&&s._onBetweenPassObservable.clear(),this._scene.useClonedMeshMap){if(s.meshMap)for(const e in s.meshMap){const t=s.meshMap[e];t&&(t._internalMeshDataInfo._source=null,s.meshMap[e]=void 0)}s._source&&s._source._internalMeshDataInfo.meshMap&&(s._source._internalMeshDataInfo.meshMap[this.uniqueId]=void 0)}else{const e=this.getScene().meshes;for(const t of e){const e=t;e._internalMeshDataInfo&&e._internalMeshDataInfo._source&&e._internalMeshDataInfo._source===this&&(e._internalMeshDataInfo._source=null)}}s._source=null,this._instanceDataStorage.visibleInstances={},this._disposeInstanceSpecificData(),this._disposeThinInstanceSpecificData(),this._internalMeshDataInfo._checkReadinessObserver&&this._scene.onBeforeRenderObservable.remove(this._internalMeshDataInfo._checkReadinessObserver),super.dispose(e,t)}_disposeInstanceSpecificData(){}_disposeThinInstanceSpecificData(){}_invalidateInstanceVertexArrayObject(){}applyDisplacementMap(e,t,s,i,n,a,o=!1,h){const l=this.getScene();return r.S0.LoadImage(e,(e=>{const r=e.width,h=e.height,l=this.getEngine().createCanvas(r,h).getContext("2d");l.drawImage(e,0,0);const c=l.getImageData(0,0,r,h).data;this.applyDisplacementMapFromBuffer(c,r,h,t,s,n,a,o),i&&i(this)}),h||(()=>{}),l.offlineProvider),this}applyDisplacementMapFromBuffer(e,t,s,i,r,n,a,o=!1){if(!this.isVerticesDataPresent(d.R.PositionKind)||!this.isVerticesDataPresent(d.R.NormalKind)||!this.isVerticesDataPresent(d.R.UVKind))return b.V.Warn("Cannot call applyDisplacementMap: Given mesh is not complete. Position, Normal or UV are missing"),this;const h=this.getVerticesData(d.R.PositionKind,!0,!0),c=this.getVerticesData(d.R.NormalKind),u=this.getVerticesData(d.R.UVKind);let p=l.Pq.Zero();const _=l.Pq.Zero(),g=l.I9.Zero();n=n||l.I9.Zero(),a=a||new l.I9(1,1);for(let o=0;o<h.length;o+=3){l.Pq.FromArrayToRef(h,o,p),l.Pq.FromArrayToRef(c,o,_),l.I9.FromArrayToRef(u,o/3*2,g);const d=4*((Math.abs(g.x*a.x+n.x%1)*(t-1)%t|0)+(Math.abs(g.y*a.y+n.y%1)*(s-1)%s|0)*t),f=e[d]/255*.3+e[d+1]/255*.59+e[d+2]/255*.11;_.normalize(),_.scaleInPlace(i+(r-i)*f),p=p.add(_),p.toArray(h,o)}return f.P.ComputeNormals(h,this.getIndices(),c),o?(this.setVerticesData(d.R.PositionKind,h),this.setVerticesData(d.R.NormalKind,c),this.setVerticesData(d.R.UVKind,u)):(this.updateVerticesData(d.R.PositionKind,h),this.updateVerticesData(d.R.NormalKind,c)),this}_getFlattenedNormals(e,t){const s=new Float32Array(3*e.length);let i=0;const r=this.sideOrientation===(this._scene.useRightHandedSystem?1:0);for(let n=0;n<e.length;n+=3){const a=l.Pq.FromArray(t,3*e[n]),o=l.Pq.FromArray(t,3*e[n+1]),h=l.Pq.FromArray(t,3*e[n+2]),c=a.subtract(o),u=h.subtract(o),d=l.Pq.Normalize(l.Pq.Cross(c,u));r&&d.scaleInPlace(-1);for(let e=0;e<3;e++)s[i++]=d.x,s[i++]=d.y,s[i++]=d.z}return s}_convertToUnIndexedMesh(e=!1){const t=this.getVerticesDataKinds().filter((e=>!this.getVertexBuffer(e)?.getIsInstanced())),s=this.getIndices(),i={},r=(e,t)=>{const i=new Float32Array(s.length*t);let r=0;for(let n=0;n<s.length;n++)for(let a=0;a<t;a++)i[r++]=e[s[n]*t+a];return i},n=this.getBoundingInfo(),a=this.geometry?this.subMeshes.slice(0):[];for(const e of t)i[e]=this.getVerticesData(e);for(const n of t){const t=this.getVertexBuffer(n),a=t.getSize();if(e&&n===d.R.NormalKind){const e=this._getFlattenedNormals(s,i[d.R.PositionKind]);this.setVerticesData(d.R.NormalKind,e,t.isUpdatable(),a)}else this.setVerticesData(n,r(i[n],a),t.isUpdatable(),a)}if(this.morphTargetManager){for(let t=0;t<this.morphTargetManager.numTargets;t++){const i=this.morphTargetManager.getTarget(t),n=i.getPositions();i.setPositions(r(n,3));const a=i.getNormals();a&&i.setNormals(e?this._getFlattenedNormals(s,n):r(a,3));const o=i.getTangents();o&&i.setTangents(r(o,3));const h=i.getUVs();h&&i.setUVs(r(h,2))}this.morphTargetManager.synchronize()}for(let e=0;e<s.length;e++)s[e]=e;this.setIndices(s),this._unIndexed=!0,this.releaseSubMeshes();for(const e of a){const t=e.getBoundingInfo();g.K.AddToMesh(e.materialIndex,e.indexStart,e.indexCount,e.indexStart,e.indexCount,this).setBoundingInfo(t)}return this.setBoundingInfo(n),this.synchronizeInstances(),this}convertToFlatShadedMesh(){return this._convertToUnIndexedMesh(!0)}convertToUnIndexedMesh(){return this._convertToUnIndexedMesh()}flipFaces(e=!1){const t=f.P.ExtractFromMesh(this);let s;if(e&&this.isVerticesDataPresent(d.R.NormalKind)&&t.normals){for(s=0;s<t.normals.length;s++)t.normals[s]*=-1;this.setVerticesData(d.R.NormalKind,t.normals,this.isVertexBufferUpdatable(d.R.NormalKind))}if(t.indices){let e;for(s=0;s<t.indices.length;s+=3)e=t.indices[s+1],t.indices[s+1]=t.indices[s+2],t.indices[s+2]=e;this.setIndices(t.indices,null,this.isVertexBufferUpdatable(d.R.PositionKind),!0)}return this}increaseVertices(e=1){const t=f.P.ExtractFromMesh(this),s=t.indices&&!Array.isArray(t.indices)&&Array.from?Array.from(t.indices):t.indices,i=t.positions&&!Array.isArray(t.positions)&&Array.from?Array.from(t.positions):t.positions,r=t.uvs&&!Array.isArray(t.uvs)&&Array.from?Array.from(t.uvs):t.uvs,n=t.normals&&!Array.isArray(t.normals)&&Array.from?Array.from(t.normals):t.normals;if(s&&i){t.indices=s,t.positions=i,r&&(t.uvs=r),n&&(t.normals=n);const a=e+1,o=new Array;for(let e=0;e<a+1;e++)o[e]=new Array;let h,c;const u=new l.Pq(0,0,0),f=new l.Pq(0,0,0),p=new l.I9(0,0),_=new Array,g=new Array,m=new Array;let y,x,A,b=i.length;r&&(x=r.length),n&&(A=n.length);for(let e=0;e<s.length;e+=3){g[0]=s[e],g[1]=s[e+1],g[2]=s[e+2];for(let e=0;e<3;e++)if(h=g[e],c=g[(e+1)%3],void 0===m[h]&&void 0===m[c]?(m[h]=new Array,m[c]=new Array):(void 0===m[h]&&(m[h]=new Array),void 0===m[c]&&(m[c]=new Array)),void 0===m[h][c]&&void 0===m[c][h]){m[h][c]=[],u.x=(i[3*c]-i[3*h])/a,u.y=(i[3*c+1]-i[3*h+1])/a,u.z=(i[3*c+2]-i[3*h+2])/a,n&&(f.x=(n[3*c]-n[3*h])/a,f.y=(n[3*c+1]-n[3*h+1])/a,f.z=(n[3*c+2]-n[3*h+2])/a),r&&(p.x=(r[2*c]-r[2*h])/a,p.y=(r[2*c+1]-r[2*h+1])/a),m[h][c].push(h);for(let e=1;e<a;e++)m[h][c].push(i.length/3),i[b++]=i[3*h]+e*u.x,i[b++]=i[3*h+1]+e*u.y,i[b++]=i[3*h+2]+e*u.z,n&&(n[A++]=n[3*h]+e*f.x,n[A++]=n[3*h+1]+e*f.y,n[A++]=n[3*h+2]+e*f.z),r&&(r[x++]=r[2*h]+e*p.x,r[x++]=r[2*h+1]+e*p.y);m[h][c].push(c),m[c][h]=new Array,y=m[h][c].length;for(let e=0;e<y;e++)m[c][h][e]=m[h][c][y-1-e]}o[0][0]=s[e],o[1][0]=m[s[e]][s[e+1]][1],o[1][1]=m[s[e]][s[e+2]][1];for(let t=2;t<a;t++){o[t][0]=m[s[e]][s[e+1]][t],o[t][t]=m[s[e]][s[e+2]][t],u.x=(i[3*o[t][t]]-i[3*o[t][0]])/t,u.y=(i[3*o[t][t]+1]-i[3*o[t][0]+1])/t,u.z=(i[3*o[t][t]+2]-i[3*o[t][0]+2])/t,n&&(f.x=(n[3*o[t][t]]-n[3*o[t][0]])/t,f.y=(n[3*o[t][t]+1]-n[3*o[t][0]+1])/t,f.z=(n[3*o[t][t]+2]-n[3*o[t][0]+2])/t),r&&(p.x=(r[2*o[t][t]]-r[2*o[t][0]])/t,p.y=(r[2*o[t][t]+1]-r[2*o[t][0]+1])/t);for(let e=1;e<t;e++)o[t][e]=i.length/3,i[b++]=i[3*o[t][0]]+e*u.x,i[b++]=i[3*o[t][0]+1]+e*u.y,i[b++]=i[3*o[t][0]+2]+e*u.z,n&&(n[A++]=n[3*o[t][0]]+e*f.x,n[A++]=n[3*o[t][0]+1]+e*f.y,n[A++]=n[3*o[t][0]+2]+e*f.z),r&&(r[x++]=r[2*o[t][0]]+e*p.x,r[x++]=r[2*o[t][0]+1]+e*p.y)}o[a]=m[s[e+1]][s[e+2]],_.push(o[0][0],o[1][0],o[1][1]);for(let e=1;e<a;e++){let t;for(t=0;t<e;t++)_.push(o[e][t],o[e+1][t],o[e+1][t+1]),_.push(o[e][t],o[e+1][t+1],o[e][t+1]);_.push(o[e][t],o[e+1][t],o[e+1][t+1])}}t.indices=_,t.applyToMesh(this,this.isVertexBufferUpdatable(d.R.PositionKind))}else b.V.Warn("Couldn't increase number of vertices : VertexData must contain at least indices and positions")}forceSharedVertices(){const e=f.P.ExtractFromMesh(this),t=e.uvs,s=e.indices,i=e.positions,r=e.colors,n=e.matricesIndices,a=e.matricesWeights,o=e.matricesIndicesExtra,h=e.matricesWeightsExtra;if(void 0===s||void 0===i||null===s||null===i)b.V.Warn("VertexData contains empty entries");else{const l=new Array,c=new Array,u=new Array,p=new Array,_=new Array,g=new Array,m=new Array,y=new Array;let x=new Array,A=0;const b={};let I,P;for(let e=0;e<s.length;e+=3){P=[s[e],s[e+1],s[e+2]],x=[];for(let e=0;e<3;e++){x[e]="";for(let t=0;t<3;t++)Math.abs(i[3*P[e]+t])<1e-8&&(i[3*P[e]+t]=0),x[e]+=i[3*P[e]+t]+"|"}if(x[0]!=x[1]&&x[0]!=x[2]&&x[1]!=x[2])for(let e=0;e<3;e++){if(I=b[x[e]],void 0===I){b[x[e]]=A,I=A++;for(let t=0;t<3;t++)l.push(i[3*P[e]+t]);if(null!=r)for(let t=0;t<4;t++)p.push(r[4*P[e]+t]);if(null!=t)for(let s=0;s<2;s++)u.push(t[2*P[e]+s]);if(null!=n)for(let t=0;t<4;t++)_.push(n[4*P[e]+t]);if(null!=a)for(let t=0;t<4;t++)g.push(a[4*P[e]+t]);if(null!=o)for(let t=0;t<4;t++)m.push(o[4*P[e]+t]);if(null!=h)for(let t=0;t<4;t++)y.push(h[4*P[e]+t])}c.push(I)}}const T=new Array;f.P.ComputeNormals(l,c,T),e.positions=l,e.indices=c,e.normals=T,null!=t&&(e.uvs=u),null!=r&&(e.colors=p),null!=n&&(e.matricesIndices=_),null!=a&&(e.matricesWeights=g),null!=o&&(e.matricesIndicesExtra=m),null!=a&&(e.matricesWeightsExtra=y),e.applyToMesh(this,this.isVertexBufferUpdatable(d.R.PositionKind))}}static _instancedMeshFactory(e,t){throw(0,P.n)("InstancedMesh")}static _PhysicsImpostorParser(e,t,s){throw(0,P.n)("PhysicsImpostor")}createInstance(e){const t=C._instancedMeshFactory(e,this);return t.parent=this.parent,t}synchronizeInstances(){for(let e=0;e<this.instances.length;e++)this.instances[e]._syncSubMeshes();return this}optimizeIndices(e){const t=this.getIndices(),s=this.getVerticesData(d.R.PositionKind);if(!s||!t)return this;const i=[];for(let e=0;e<s.length;e+=3)i.push(l.Pq.FromArray(s,e));const n=[];return r.LV.SyncAsyncForLoop(i.length,40,(e=>{const t=i.length-1-e,s=i[t];for(let e=0;e<t;++e){const r=i[e];if(s.equals(r)){n[t]=e;break}}}),(()=>{for(let e=0;e<t.length;++e)t[e]=n[t[e]]||t[e];const s=this.subMeshes.slice(0);this.setIndices(t),this.subMeshes=s,e&&e(this)})),this}serialize(e={}){e.name=this.name,e.id=this.id,e.uniqueId=this.uniqueId,e.type=this.getClassName(),a.Y&&a.Y.HasTags(this)&&(e.tags=a.Y.GetTags(this)),e.position=this.position.asArray(),this.rotationQuaternion?e.rotationQuaternion=this.rotationQuaternion.asArray():this.rotation&&(e.rotation=this.rotation.asArray()),e.scaling=this.scaling.asArray(),this._postMultiplyPivotMatrix?e.pivotMatrix=this.getPivotMatrix().asArray():e.localMatrix=this.getPivotMatrix().asArray(),e.isEnabled=this.isEnabled(!1),e.isVisible=this.isVisible,e.infiniteDistance=this.infiniteDistance,e.pickable=this.isPickable,e.receiveShadows=this.receiveShadows,e.billboardMode=this.billboardMode,e.visibility=this.visibility,e.alwaysSelectAsActiveMesh=this.alwaysSelectAsActiveMesh,e.checkCollisions=this.checkCollisions,e.ellipsoid=this.ellipsoid.asArray(),e.ellipsoidOffset=this.ellipsoidOffset.asArray(),e.doNotSyncBoundingInfo=this.doNotSyncBoundingInfo,e.isBlocker=this.isBlocker,e.sideOrientation=this.sideOrientation,this.parent&&this.parent._serializeAsParent(e),e.isUnIndexed=this.isUnIndexed;const t=this._geometry;if(t&&this.subMeshes){e.geometryUniqueId=t.uniqueId,e.geometryId=t.id,e.subMeshes=[];for(let t=0;t<this.subMeshes.length;t++){const s=this.subMeshes[t];e.subMeshes.push({materialIndex:s.materialIndex,verticesStart:s.verticesStart,verticesCount:s.verticesCount,indexStart:s.indexStart,indexCount:s.indexCount})}}if(this.material?this.material.doNotSerialize||(e.materialUniqueId=this.material.uniqueId,e.materialId=this.material.id):(this.material=null,e.materialUniqueId=this._scene.defaultMaterial.uniqueId,e.materialId=this._scene.defaultMaterial.id),this.morphTargetManager&&(e.morphTargetManagerId=this.morphTargetManager.uniqueId),this.skeleton&&(e.skeletonId=this.skeleton.id,e.numBoneInfluencers=this.numBoneInfluencers),this.getScene()._getComponent(T.v.NAME_PHYSICSENGINE)){const t=this.getPhysicsImpostor();t&&(e.physicsMass=t.getParam("mass"),e.physicsFriction=t.getParam("friction"),e.physicsRestitution=t.getParam("mass"),e.physicsImpostor=t.type)}this.metadata&&(e.metadata=this.metadata),e.instances=[];for(let t=0;t<this.instances.length;t++){const s=this.instances[t];if(s.doNotSerialize)continue;const i={name:s.name,id:s.id,isEnabled:s.isEnabled(!1),isVisible:s.isVisible,isPickable:s.isPickable,checkCollisions:s.checkCollisions,position:s.position.asArray(),scaling:s.scaling.asArray()};if(s.parent&&s.parent._serializeAsParent(i),s.rotationQuaternion?i.rotationQuaternion=s.rotationQuaternion.asArray():s.rotation&&(i.rotation=s.rotation.asArray()),this.getScene()._getComponent(T.v.NAME_PHYSICSENGINE)){const e=s.getPhysicsImpostor();e&&(i.physicsMass=e.getParam("mass"),i.physicsFriction=e.getParam("friction"),i.physicsRestitution=e.getParam("mass"),i.physicsImpostor=e.type)}s.metadata&&(i.metadata=s.metadata),s.actionManager&&(i.actions=s.actionManager.serialize(s.name)),e.instances.push(i),A.p.AppendSerializedAnimations(s,i),i.ranges=s.serializeAnimationRanges()}if(this._thinInstanceDataStorage.instancesCount&&this._thinInstanceDataStorage.matrixData&&(e.thinInstances={instancesCount:this._thinInstanceDataStorage.instancesCount,matrixData:Array.from(this._thinInstanceDataStorage.matrixData),matrixBufferSize:this._thinInstanceDataStorage.matrixBufferSize,enablePicking:this.thinInstanceEnablePicking},this._userThinInstanceBuffersStorage)){const t={data:{},sizes:{},strides:{}};for(const e in this._userThinInstanceBuffersStorage.data)t.data[e]=Array.from(this._userThinInstanceBuffersStorage.data[e]),t.sizes[e]=this._userThinInstanceBuffersStorage.sizes[e],t.strides[e]=this._userThinInstanceBuffersStorage.strides[e];e.thinInstances.userThinInstance=t}return A.p.AppendSerializedAnimations(this,e),e.ranges=this.serializeAnimationRanges(),e.layerMask=this.layerMask,e.alphaIndex=this.alphaIndex,e.hasVertexAlpha=this.hasVertexAlpha,e.overlayAlpha=this.overlayAlpha,e.overlayColor=this.overlayColor.asArray(),e.renderOverlay=this.renderOverlay,e.applyFog=this.applyFog,this.actionManager&&(e.actions=this.actionManager.serialize(this.name)),e}_syncGeometryWithMorphTargetManager(){if(!this.geometry)return;this._markSubMeshesAsAttributesDirty();const e=this._internalAbstractMeshDataInfo._morphTargetManager;if(e&&e.vertexCount){if(e.vertexCount!==this.getTotalVertices())return b.V.Error("Mesh is incompatible with morph targets. Targets and mesh must all have the same vertices count."),void(this.morphTargetManager=null);if(e.isUsingTextureForTargets)return;for(let t=0;t<e.numInfluencers;t++){const s=e.getActiveTarget(t),i=s.getPositions();if(!i)return void b.V.Error("Invalid morph target. Target must have positions.");this.geometry.setVerticesData(d.R.PositionKind+t,i,!1,3);const r=s.getNormals();r&&this.geometry.setVerticesData(d.R.NormalKind+t,r,!1,3);const n=s.getTangents();n&&this.geometry.setVerticesData(d.R.TangentKind+t,n,!1,3);const a=s.getUVs();a&&this.geometry.setVerticesData(d.R.UVKind+"_"+t,a,!1,2)}}else{let e=0;for(;this.geometry.isVerticesDataPresent(d.R.PositionKind+e);)this.geometry.removeVerticesData(d.R.PositionKind+e),this.geometry.isVerticesDataPresent(d.R.NormalKind+e)&&this.geometry.removeVerticesData(d.R.NormalKind+e),this.geometry.isVerticesDataPresent(d.R.TangentKind+e)&&this.geometry.removeVerticesData(d.R.TangentKind+e),this.geometry.isVerticesDataPresent(d.R.UVKind+e)&&this.geometry.removeVerticesData(d.R.UVKind+"_"+e),e++}}static Parse(e,t,s){let i;if(i=e.type&&"LinesMesh"===e.type?C._LinesMeshParser(e,t):e.type&&"GroundMesh"===e.type?C._GroundMeshParser(e,t):e.type&&"GoldbergMesh"===e.type?C._GoldbergMeshParser(e,t):e.type&&"GreasedLineMesh"===e.type?C._GreasedLineMeshParser(e,t):e.type&&"TrailMesh"===e.type?C._TrailMeshParser(e,t):new C(e.name,t),i.id=e.id,i._waitingParsedUniqueId=e.uniqueId,a.Y&&a.Y.AddTagsTo(i,e.tags),i.position=l.Pq.FromArray(e.position),void 0!==e.metadata&&(i.metadata=e.metadata),e.rotationQuaternion?i.rotationQuaternion=l.PT.FromArray(e.rotationQuaternion):e.rotation&&(i.rotation=l.Pq.FromArray(e.rotation)),i.scaling=l.Pq.FromArray(e.scaling),e.localMatrix?i.setPreTransformMatrix(l.uq.FromArray(e.localMatrix)):e.pivotMatrix&&i.setPivotMatrix(l.uq.FromArray(e.pivotMatrix)),i.setEnabled(e.isEnabled),i.isVisible=e.isVisible,i.infiniteDistance=e.infiniteDistance,i.alwaysSelectAsActiveMesh=!!e.alwaysSelectAsActiveMesh,i.showBoundingBox=e.showBoundingBox,i.showSubMeshesBoundingBox=e.showSubMeshesBoundingBox,void 0!==e.applyFog&&(i.applyFog=e.applyFog),void 0!==e.pickable&&(i.isPickable=e.pickable),void 0!==e.alphaIndex&&(i.alphaIndex=e.alphaIndex),i.receiveShadows=e.receiveShadows,void 0!==e.billboardMode&&(i.billboardMode=e.billboardMode),void 0!==e.visibility&&(i.visibility=e.visibility),i.checkCollisions=e.checkCollisions,i.doNotSyncBoundingInfo=!!e.doNotSyncBoundingInfo,e.ellipsoid&&(i.ellipsoid=l.Pq.FromArray(e.ellipsoid)),e.ellipsoidOffset&&(i.ellipsoidOffset=l.Pq.FromArray(e.ellipsoidOffset)),null!=e.overrideMaterialSideOrientation&&(i.sideOrientation=e.overrideMaterialSideOrientation),void 0!==e.sideOrientation&&(i.sideOrientation=e.sideOrientation),void 0!==e.isBlocker&&(i.isBlocker=e.isBlocker),i._shouldGenerateFlatShading=e.useFlatShading,e.freezeWorldMatrix&&(i._waitingData.freezeWorldMatrix=e.freezeWorldMatrix),void 0!==e.parentId&&(i._waitingParentId=e.parentId),void 0!==e.parentInstanceIndex&&(i._waitingParentInstanceIndex=e.parentInstanceIndex),void 0!==e.actions&&(i._waitingData.actions=e.actions),void 0!==e.overlayAlpha&&(i.overlayAlpha=e.overlayAlpha),void 0!==e.overlayColor&&(i.overlayColor=c.v9.FromArray(e.overlayColor)),void 0!==e.renderOverlay&&(i.renderOverlay=e.renderOverlay),i.isUnIndexed=!!e.isUnIndexed,i.hasVertexAlpha=e.hasVertexAlpha,e.delayLoadingFile?(i.delayLoadState=4,i.delayLoadingFile=s+e.delayLoadingFile,i.buildBoundingInfo(l.Pq.FromArray(e.boundingBoxMinimum),l.Pq.FromArray(e.boundingBoxMaximum)),e._binaryInfo&&(i._binaryInfo=e._binaryInfo),i._delayInfo=[],e.hasUVs&&i._delayInfo.push(d.R.UVKind),e.hasUVs2&&i._delayInfo.push(d.R.UV2Kind),e.hasUVs3&&i._delayInfo.push(d.R.UV3Kind),e.hasUVs4&&i._delayInfo.push(d.R.UV4Kind),e.hasUVs5&&i._delayInfo.push(d.R.UV5Kind),e.hasUVs6&&i._delayInfo.push(d.R.UV6Kind),e.hasColors&&i._delayInfo.push(d.R.ColorKind),e.hasMatricesIndices&&i._delayInfo.push(d.R.MatricesIndicesKind),e.hasMatricesWeights&&i._delayInfo.push(d.R.MatricesWeightsKind),i._delayLoadingFunction=p.V._ImportGeometry,x.B.ForceFullSceneLoadingForIncremental&&i._checkDelayState()):p.V._ImportGeometry(e,i),e.materialUniqueId?i._waitingMaterialId=e.materialUniqueId:e.materialId&&(i._waitingMaterialId=e.materialId),e.morphTargetManagerId>-1&&(i._waitingMorphTargetManagerId=e.morphTargetManagerId),void 0!==e.skeletonId&&null!==e.skeletonId&&(i.skeleton=t.getLastSkeletonById(e.skeletonId),e.numBoneInfluencers&&(i.numBoneInfluencers=e.numBoneInfluencers)),e.animations){for(let t=0;t<e.animations.length;t++){const s=e.animations[t],r=(0,I.n9)("BABYLON.Animation");r&&i.animations.push(r.Parse(s))}u.b.ParseAnimationRanges(i,e,t)}if(e.autoAnimate&&t.beginAnimation(i,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,e.autoAnimateSpeed||1),e.layerMask&&!isNaN(e.layerMask)?i.layerMask=Math.abs(parseInt(e.layerMask)):i.layerMask=268435455,e.physicsImpostor&&(i.physicsImpostor=C._PhysicsImpostorParser(t,i,e)),e.lodMeshIds&&(i._waitingData.lods={ids:e.lodMeshIds,distances:e.lodDistances?e.lodDistances:null,coverages:e.lodCoverages?e.lodCoverages:null}),e.instances)for(let s=0;s<e.instances.length;s++){const r=e.instances[s],n=i.createInstance(r.name);if(r.id&&(n.id=r.id),a.Y&&(r.tags?a.Y.AddTagsTo(n,r.tags):a.Y.AddTagsTo(n,e.tags)),n.position=l.Pq.FromArray(r.position),void 0!==r.metadata&&(n.metadata=r.metadata),void 0!==r.parentId&&(n._waitingParentId=r.parentId),void 0!==r.parentInstanceIndex&&(n._waitingParentInstanceIndex=r.parentInstanceIndex),void 0!==r.isEnabled&&null!==r.isEnabled&&n.setEnabled(r.isEnabled),void 0!==r.isVisible&&null!==r.isVisible&&(n.isVisible=r.isVisible),void 0!==r.isPickable&&null!==r.isPickable&&(n.isPickable=r.isPickable),r.rotationQuaternion?n.rotationQuaternion=l.PT.FromArray(r.rotationQuaternion):r.rotation&&(n.rotation=l.Pq.FromArray(r.rotation)),n.scaling=l.Pq.FromArray(r.scaling),null!=r.checkCollisions&&null!=r.checkCollisions&&(n.checkCollisions=r.checkCollisions),null!=r.pickable&&null!=r.pickable&&(n.isPickable=r.pickable),null!=r.showBoundingBox&&null!=r.showBoundingBox&&(n.showBoundingBox=r.showBoundingBox),null!=r.showSubMeshesBoundingBox&&null!=r.showSubMeshesBoundingBox&&(n.showSubMeshesBoundingBox=r.showSubMeshesBoundingBox),null!=r.alphaIndex&&null!=r.showSubMeshesBoundingBox&&(n.alphaIndex=r.alphaIndex),r.physicsImpostor&&(n.physicsImpostor=C._PhysicsImpostorParser(t,n,r)),void 0!==r.actions&&(n._waitingData.actions=r.actions),r.animations){for(let e=0;e<r.animations.length;e++){const t=r.animations[e],s=(0,I.n9)("BABYLON.Animation");s&&n.animations.push(s.Parse(t))}u.b.ParseAnimationRanges(n,r,t),r.autoAnimate&&t.beginAnimation(n,r.autoAnimateFrom,r.autoAnimateTo,r.autoAnimateLoop,r.autoAnimateSpeed||1)}}if(e.thinInstances){const t=e.thinInstances;if(i.thinInstanceEnablePicking=!!t.enablePicking,t.matrixData?(i.thinInstanceSetBuffer("matrix",new Float32Array(t.matrixData),16,!1),i._thinInstanceDataStorage.matrixBufferSize=t.matrixBufferSize,i._thinInstanceDataStorage.instancesCount=t.instancesCount):i._thinInstanceDataStorage.matrixBufferSize=t.matrixBufferSize,e.thinInstances.userThinInstance){const t=e.thinInstances.userThinInstance;for(const e in t.data)i.thinInstanceSetBuffer(e,new Float32Array(t.data[e]),t.strides[e],!1),i._userThinInstanceBuffersStorage.sizes[e]=t.sizes[e]}}return i}setPositionsForCPUSkinning(){const e=this._internalMeshDataInfo;if(!e._sourcePositions){const t=this.getVerticesData(d.R.PositionKind);if(!t)return e._sourcePositions;e._sourcePositions=new Float32Array(t),this.isVertexBufferUpdatable(d.R.PositionKind)||this.setVerticesData(d.R.PositionKind,t,!0)}return e._sourcePositions}setNormalsForCPUSkinning(){const e=this._internalMeshDataInfo;if(!e._sourceNormals){const t=this.getVerticesData(d.R.NormalKind);if(!t)return e._sourceNormals;e._sourceNormals=new Float32Array(t),this.isVertexBufferUpdatable(d.R.NormalKind)||this.setVerticesData(d.R.NormalKind,t,!0)}return e._sourceNormals}applySkeleton(e){if(!this.geometry)return this;if(this.geometry._softwareSkinningFrameId==this.getScene().getFrameId())return this;if(this.geometry._softwareSkinningFrameId=this.getScene().getFrameId(),!this.isVerticesDataPresent(d.R.PositionKind))return this;if(!this.isVerticesDataPresent(d.R.MatricesIndicesKind))return this;if(!this.isVerticesDataPresent(d.R.MatricesWeightsKind))return this;const t=this.isVerticesDataPresent(d.R.NormalKind),s=this._internalMeshDataInfo;if(!s._sourcePositions){const e=this.subMeshes.slice();this.setPositionsForCPUSkinning(),this.subMeshes=e}t&&!s._sourceNormals&&this.setNormalsForCPUSkinning();let i=this.getVerticesData(d.R.PositionKind);if(!i)return this;i instanceof Float32Array||(i=new Float32Array(i));let r=this.getVerticesData(d.R.NormalKind);if(t){if(!r)return this;r instanceof Float32Array||(r=new Float32Array(r))}const n=this.getVerticesData(d.R.MatricesIndicesKind),a=this.getVerticesData(d.R.MatricesWeightsKind);if(!a||!n)return this;const o=this.numBoneInfluencers>4,h=o?this.getVerticesData(d.R.MatricesIndicesExtraKind):null,c=o?this.getVerticesData(d.R.MatricesWeightsExtraKind):null,u=e.getTransformMatrices(this),f=l.Pq.Zero(),p=new l.uq,_=new l.uq;let g,m=0;for(let e=0;e<i.length;e+=3,m+=4){let d;for(g=0;g<4;g++)d=a[m+g],d>0&&(l.uq.FromFloat32ArrayToRefScaled(u,Math.floor(16*n[m+g]),d,_),p.addToSelf(_));if(o)for(g=0;g<4;g++)d=c[m+g],d>0&&(l.uq.FromFloat32ArrayToRefScaled(u,Math.floor(16*h[m+g]),d,_),p.addToSelf(_));l.Pq.TransformCoordinatesFromFloatsToRef(s._sourcePositions[e],s._sourcePositions[e+1],s._sourcePositions[e+2],p,f),f.toArray(i,e),t&&(l.Pq.TransformNormalFromFloatsToRef(s._sourceNormals[e],s._sourceNormals[e+1],s._sourceNormals[e+2],p,f),f.toArray(r,e)),p.reset()}return this.updateVerticesData(d.R.PositionKind,i),t&&this.updateVerticesData(d.R.NormalKind,r),this}static MinMax(e){let t=null,s=null;return e.forEach((function(e){const i=e.getBoundingInfo().boundingBox;t&&s?(t.minimizeInPlace(i.minimumWorld),s.maximizeInPlace(i.maximumWorld)):(t=i.minimumWorld,s=i.maximumWorld)})),t&&s?{min:t,max:s}:{min:l.Pq.Zero(),max:l.Pq.Zero()}}static Center(e){const t=e instanceof Array?C.MinMax(e):e;return l.Pq.Center(t.min,t.max)}static MergeMeshes(e,t=!0,s,i,r,n){return(0,o.V1)(C._MergeMeshesCoroutine(e,t,s,i,r,n,!1))}static MergeMeshesAsync(e,t=!0,s,i,r,n){return(0,o.kj)(C._MergeMeshesCoroutine(e,t,s,i,r,n,!0),(0,o.VP)())}static*_MergeMeshesCoroutine(e,t=!0,s,i,r,n,a){if(0===(e=e.filter(Boolean)).length)return null;let o;if(!s){let t=0;for(o=0;o<e.length;o++)if(t+=e[o].getTotalVertices(),t>=65536)return b.V.Warn("Cannot merge meshes because resulting mesh will have more than 65536 vertices. Please use allow32BitsIndices = true to use 32 bits indices"),null}n&&(r=!1);const h=new Array,l=new Array,c=new Array,u=e[0].sideOrientation;for(o=0;o<e.length;o++){const t=e[o];if(t.isAnInstance)return b.V.Warn("Cannot merge instance meshes."),null;if(u!==t.sideOrientation)return b.V.Warn("Cannot merge meshes with different sideOrientation values."),null;if(r&&c.push(t.getTotalIndices()),n)if(t.material){const e=t.material;if(e instanceof y.F){for(let t=0;t<e.subMaterials.length;t++)h.indexOf(e.subMaterials[t])<0&&h.push(e.subMaterials[t]);for(let s=0;s<t.subMeshes.length;s++)l.push(h.indexOf(e.subMaterials[t.subMeshes[s].materialIndex])),c.push(t.subMeshes[s].indexCount)}else{h.indexOf(e)<0&&h.push(e);for(let s=0;s<t.subMeshes.length;s++)l.push(h.indexOf(e)),c.push(t.subMeshes[s].indexCount)}}else for(let e=0;e<t.subMeshes.length;e++)l.push(0),c.push(t.subMeshes[e].indexCount)}const d=e[0],p=e=>{const t=e.computeWorldMatrix(!0);return{vertexData:f.P.ExtractFromMesh(e,!1,!1),transform:t}},{vertexData:_,transform:m}=p(d);a&&(yield);const x=new Array(e.length-1);for(let t=1;t<e.length;t++)x[t-1]=p(e[t]),a&&(yield);const A=_._mergeCoroutine(m,x,s,a,!t);let I=A.next();for(;!I.done;)a&&(yield),I=A.next();const P=I.value;i||(i=new C(d.name+"_merged",d.getScene()));const T=P._applyToCoroutine(i,void 0,a);let E=T.next();for(;!E.done;)a&&(yield),E=T.next();if(i.checkCollisions=d.checkCollisions,i.sideOrientation=d.sideOrientation,t)for(o=0;o<e.length;o++)e[o].dispose();if(r||n){i.releaseSubMeshes(),o=0;let e=0;for(;o<c.length;)g.K.CreateFromIndices(0,e,c[o],i,void 0,!1),e+=c[o],o++;for(const e of i.subMeshes)e.refreshBoundingInfo();i.computeWorldMatrix(!0)}if(n){const e=new y.F(d.name+"_merged",d.getScene());e.subMaterials=h;for(let e=0;e<i.subMeshes.length;e++)i.subMeshes[e].materialIndex=l[e];i.material=e}else i.material=d.material;return i}addInstance(e){e._indexInSourceMeshInstanceArray=this.instances.length,this.instances.push(e)}removeInstance(e){const t=e._indexInSourceMeshInstanceArray;if(-1!=t){if(t!==this.instances.length-1){const e=this.instances[this.instances.length-1];this.instances[t]=e,e._indexInSourceMeshInstanceArray=t}e._indexInSourceMeshInstanceArray=-1,this.instances.pop()}}_shouldConvertRHS(){return this._scene.useRightHandedSystem&&this.sideOrientation===m.i.CounterClockWiseSideOrientation}_getRenderingFillMode(e){const t=this.getScene();return t.forcePointsCloud?m.i.PointFillMode:t.forceWireframe?m.i.WireFrameFillMode:this.overrideRenderingFillMode??e}setMaterialByID(e){return this.setMaterialById(e)}static CreateRibbon(e,t,s,i,r,n,a,o,h){throw new Error("Import MeshBuilder to populate this function")}static CreateDisc(e,t,s,i,r,n){throw new Error("Import MeshBuilder to populate this function")}static CreateBox(e,t,s,i,r){throw new Error("Import MeshBuilder to populate this function")}static CreateSphere(e,t,s,i,r,n){throw new Error("Import MeshBuilder to populate this function")}static CreateHemisphere(e,t,s,i){throw new Error("Import MeshBuilder to populate this function")}static CreateCylinder(e,t,s,i,r,n,a,o,h){throw new Error("Import MeshBuilder to populate this function")}static CreateTorus(e,t,s,i,r,n,a){throw new Error("Import MeshBuilder to populate this function")}static CreateTorusKnot(e,t,s,i,r,n,a,o,h,l){throw new Error("Import MeshBuilder to populate this function")}static CreateLines(e,t,s,i,r){throw new Error("Import MeshBuilder to populate this function")}static CreateDashedLines(e,t,s,i,r,n,a,o){throw new Error("Import MeshBuilder to populate this function")}static CreatePolygon(e,t,s,i,r,n,a){throw new Error("Import MeshBuilder to populate this function")}static ExtrudePolygon(e,t,s,i,r,n,a,o){throw new Error("Import MeshBuilder to populate this function")}static ExtrudeShape(e,t,s,i,r,n,a,o,h,l){throw new Error("Import MeshBuilder to populate this function")}static ExtrudeShapeCustom(e,t,s,i,r,n,a,o,h,l,c,u){throw new Error("Import MeshBuilder to populate this function")}static CreateLathe(e,t,s,i,r,n,a){throw new Error("Import MeshBuilder to populate this function")}static CreatePlane(e,t,s,i,r){throw new Error("Import MeshBuilder to populate this function")}static CreateGround(e,t,s,i,r,n){throw new Error("Import MeshBuilder to populate this function")}static CreateTiledGround(e,t,s,i,r,n,a,o,h){throw new Error("Import MeshBuilder to populate this function")}static CreateGroundFromHeightMap(e,t,s,i,r,n,a,o,h,l,c){throw new Error("Import MeshBuilder to populate this function")}static CreateTube(e,t,s,i,r,n,a,o,h,l){throw new Error("Import MeshBuilder to populate this function")}static CreatePolyhedron(e,t,s){throw new Error("Import MeshBuilder to populate this function")}static CreateIcoSphere(e,t,s){throw new Error("Import MeshBuilder to populate this function")}static CreateDecal(e,t,s,i,r,n){throw new Error("Import MeshBuilder to populate this function")}static CreateCapsule(e,t,s){throw new Error("Import MeshBuilder to populate this function")}static ExtendToGoldberg(e){throw new Error("Import MeshBuilder to populate this function")}}C.FRONTSIDE=f.P.FRONTSIDE,C.BACKSIDE=f.P.BACKSIDE,C.DOUBLESIDE=f.P.DOUBLESIDE,C.DEFAULTSIDE=f.P.DEFAULTSIDE,C.NO_CAP=0,C.CAP_START=1,C.CAP_END=2,C.CAP_ALL=3,C.NO_FLIP=0,C.FLIP_TILE=1,C.ROTATE_TILE=2,C.FLIP_ROW=3,C.ROTATE_ROW=4,C.FLIP_N_ROTATE_TILE=5,C.FLIP_N_ROTATE_ROW=6,C.CENTER=0,C.LEFT=1,C.RIGHT=2,C.TOP=3,C.BOTTOM=4,C.INSTANCEDMESH_SORT_TRANSPARENT=!1,C._GroundMeshParser=(e,t)=>{throw(0,P.n)("GroundMesh")},C._GoldbergMeshParser=(e,t)=>{throw(0,P.n)("GoldbergMesh")},C._LinesMeshParser=(e,t)=>{throw(0,P.n)("LinesMesh")},C._GreasedLineMeshParser=(e,t)=>{throw(0,P.n)("GreasedLineMesh")},C._GreasedLineRibbonMeshParser=(e,t)=>{throw(0,P.n)("GreasedLineRibbonMesh")},C._TrailMeshParser=(e,t)=>{throw(0,P.n)("TrailMesh")},(0,I.Y5)("BABYLON.Mesh",C)},32404:(e,t,s)=>{s.d(t,{P:()=>M});var i=s(60838),r=s(68437),n=s(18917),a=s(38585),o=s(90197),h=s(84900),l=s(84285),c=s(81699),u=s(96487),d=s(90044),f=s(32725),p=s(86840),_=s(93260),g=s(57088),m=s(92411),y=s(18280),x=s(59688),A=s(53318),b=s(94661),I=s(86795),P=s(26135),T=s(80098),E=s(95495);const M={CreateBox:n.an,CreateTiledBox:a.uk,CreateSphere:o._6,CreateDisc:r.WA,CreateIcoSphere:A.Ds,CreateRibbon:i.fv,CreateCylinder:h.zk,CreateTorus:l.YA,CreateTorusKnot:c.sF,CreateLineSystem:u.uz,CreateLines:u.sh,CreateDashedLines:u.NX,ExtrudeShape:f.tF,ExtrudeShapeCustom:f.ei,CreateLathe:p.p,CreateTiledPlane:g.HU,CreatePlane:_.x,CreateGround:m.km,CreateTiledGround:m.ol,CreateGroundFromHeightMap:m.RI,CreatePolygon:d.v1,ExtrudePolygon:d.sV,CreateTube:y.V,CreatePolyhedron:x.D6,CreateGeodesic:P.M,CreateGoldberg:T.R,CreateDecal:b.m,CreateCapsule:I._S,CreateText:E.c}},74180:(e,t,s)=>{s.d(t,{L:()=>i});class i{constructor(e,t){this.distanceOrScreenCoverage=e,this.mesh=t}}},64883:(e,t,s)=>{s.d(t,{L:()=>p,t:()=>f});var i=s(70461),r=s(54983),n=s(59396),a=s(9191),o=s(33543),h=s(74539),l=s(50507),c=s(69583);class u extends r.I9{constructor(e,t){super(e.x,e.y),this.index=t}}class d{constructor(){this.elements=[]}add(e){const t=[];return e.forEach((e=>{const s=new u(e,this.elements.length);t.push(s),this.elements.push(s)})),t}computeBounds(){const e=new r.I9(this.elements[0].x,this.elements[0].y),t=new r.I9(this.elements[0].x,this.elements[0].y);return this.elements.forEach((s=>{s.x<e.x?e.x=s.x:s.x>t.x&&(t.x=s.x),s.y<e.y?e.y=s.y:s.y>t.y&&(t.y=s.y)})),{min:e,max:t,width:t.x-e.x,height:t.y-e.y}}}class f{static Rectangle(e,t,s,i){return[new r.I9(e,t),new r.I9(s,t),new r.I9(s,i),new r.I9(e,i)]}static Circle(e,t=0,s=0,i=32){const n=[];let a=0;const o=2*Math.PI/i;for(let h=0;h<i;h++)n.push(new r.I9(t+Math.cos(a)*e,s+Math.sin(a)*e)),a-=o;return n}static Parse(e){const t=e.split(/[^-+eE.\d]+/).map(parseFloat).filter((e=>!isNaN(e)));let s;const i=[];for(s=0;s<(2147483646&t.length);s+=2)i.push(new r.I9(t[s],t[s+1]));return i}static StartingAt(e,t){return h.Cu.StartingAt(e,t)}}class p{_addToepoint(e){for(const t of e)this._epoints.push(t.x,t.y)}constructor(e,t,s,r=earcut){let n;this._points=new d,this._outlinepoints=new d,this._holes=new Array,this._epoints=new Array,this._eholes=new Array,this.bjsEarcut=r,this._name=e,this._scene=s||c.q.LastCreatedScene,n=t instanceof h.Cu?t.getPoints():t,this._addToepoint(n),this._points.add(n),this._outlinepoints.add(n),void 0===this.bjsEarcut&&i.V.Warn("Earcut was not found, the polygon will not be built.")}addHole(e){this._points.add(e);const t=new d;return t.add(e),this._holes.push(t),this._eholes.push(this._epoints.length/2),this._addToepoint(e),this}build(e=!1,t=0,s=2){const i=new a.e(this._name,this._scene),r=this.buildVertexData(t,s);return i.setVerticesData(n.R.PositionKind,r.positions,e),i.setVerticesData(n.R.NormalKind,r.normals,e),i.setVerticesData(n.R.UVKind,r.uvs,e),i.setIndices(r.indices),i}buildVertexData(e=0,t=2){const s=new o.P,i=[],r=[],n=[],a=this._points.computeBounds();this._points.elements.forEach((e=>{i.push(0,1,0),r.push(e.x,0,e.y),n.push((e.x-a.min.x)/a.width,(e.y-a.min.y)/a.height)}));const h=[],l=this.bjsEarcut(this._epoints,this._eholes,2);for(let e=0;e<l.length;e++)h.push(l[e]);if(e>0){const s=r.length/3;this._points.elements.forEach((t=>{i.push(0,-1,0),r.push(t.x,-e,t.y),n.push(1-(t.x-a.min.x)/a.width,1-(t.y-a.min.y)/a.height)}));const o=h.length;for(let e=0;e<o;e+=3){const t=h[e+0],i=h[e+1],r=h[e+2];h.push(r+s),h.push(i+s),h.push(t+s)}this._addSide(r,i,n,h,a,this._outlinepoints,e,!1,t),this._holes.forEach((s=>{this._addSide(r,i,n,h,a,s,e,!0,t)}))}return s.indices=h,s.positions=r,s.normals=i,s.uvs=n,s}_addSide(e,t,s,i,n,a,o,h,c){let u=e.length/3,d=0;for(let f=0;f<a.elements.length;f++){const p=a.elements[f],_=a.elements[(f+1)%a.elements.length];e.push(p.x,0,p.y),e.push(p.x,-o,p.y),e.push(_.x,0,_.y),e.push(_.x,-o,_.y);const g=a.elements[(f+a.elements.length-1)%a.elements.length],m=a.elements[(f+2)%a.elements.length];let y=new r.Pq(-(_.y-p.y),0,_.x-p.x),x=new r.Pq(-(p.y-g.y),0,p.x-g.x),A=new r.Pq(-(m.y-_.y),0,m.x-_.x);h||(y=y.scale(-1),x=x.scale(-1),A=A.scale(-1));const b=y.normalizeToNew();let I=x.normalizeToNew(),P=A.normalizeToNew();const T=r.Pq.Dot(I,b);I=T>c?T<l.bH-1?new r.Pq(p.x,0,p.y).subtract(new r.Pq(_.x,0,_.y)).normalize():x.add(y).normalize():b;const E=r.Pq.Dot(A,y);P=E>c?E<l.bH-1?new r.Pq(_.x,0,_.y).subtract(new r.Pq(p.x,0,p.y)).normalize():A.add(y).normalize():b,s.push(d/n.width,0),s.push(d/n.width,1),d+=y.length(),s.push(d/n.width,0),s.push(d/n.width,1),t.push(I.x,I.y,I.z),t.push(I.x,I.y,I.z),t.push(P.x,P.y,P.z),t.push(P.x,P.y,P.z),h?(i.push(u),i.push(u+2),i.push(u+1),i.push(u+1),i.push(u+2),i.push(u+3)):(i.push(u),i.push(u+1),i.push(u+2),i.push(u+1),i.push(u+3),i.push(u+2)),u+=4}}}},29206:(e,t,s)=>{s.d(t,{j:()=>l});var i=s(70461),r=s(87649),n=s(54983),a=s(45413),o=s(9191),h=s(28567);o.e._PhysicsImpostorParser=function(e,t,s){return new l(t,s.physicsImpostor,{mass:s.physicsMass,friction:s.physicsFriction,restitution:s.physicsRestitution},e)};class l{get isDisposed(){return this._isDisposed}get mass(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getBodyMass(this):0}set mass(e){this.setMass(e)}get friction(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getBodyFriction(this):0}set friction(e){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setBodyFriction(this,e)}get restitution(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getBodyRestitution(this):0}set restitution(e){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setBodyRestitution(this,e)}get pressure(){if(!this._physicsEngine)return 0;const e=this._physicsEngine.getPhysicsPlugin();return e.setBodyPressure?e.getBodyPressure(this):0}set pressure(e){if(!this._physicsEngine)return;const t=this._physicsEngine.getPhysicsPlugin();t.setBodyPressure&&t.setBodyPressure(this,e)}get stiffness(){if(!this._physicsEngine)return 0;const e=this._physicsEngine.getPhysicsPlugin();return e.getBodyStiffness?e.getBodyStiffness(this):0}set stiffness(e){if(!this._physicsEngine)return;const t=this._physicsEngine.getPhysicsPlugin();t.setBodyStiffness&&t.setBodyStiffness(this,e)}get velocityIterations(){if(!this._physicsEngine)return 0;const e=this._physicsEngine.getPhysicsPlugin();return e.getBodyVelocityIterations?e.getBodyVelocityIterations(this):0}set velocityIterations(e){if(!this._physicsEngine)return;const t=this._physicsEngine.getPhysicsPlugin();t.setBodyVelocityIterations&&t.setBodyVelocityIterations(this,e)}get positionIterations(){if(!this._physicsEngine)return 0;const e=this._physicsEngine.getPhysicsPlugin();return e.getBodyPositionIterations?e.getBodyPositionIterations(this):0}set positionIterations(e){if(!this._physicsEngine)return;const t=this._physicsEngine.getPhysicsPlugin();t.setBodyPositionIterations&&t.setBodyPositionIterations(this,e)}constructor(e,t,s={mass:0},r){this.object=e,this.type=t,this._options=s,this._scene=r,this._pluginData={},this._bodyUpdateRequired=!1,this._onBeforePhysicsStepCallbacks=new Array,this._onAfterPhysicsStepCallbacks=new Array,this._onPhysicsCollideCallbacks=[],this._deltaPosition=n.Pq.Zero(),this._isDisposed=!1,this.soft=!1,this.segments=0,this._tmpQuat=new n.PT,this._tmpQuat2=new n.PT,this.beforeStep=()=>{this._physicsEngine&&(this.object.translate(this._deltaPosition,-1),this._deltaRotationConjugated&&this.object.rotationQuaternion&&this.object.rotationQuaternion.multiplyToRef(this._deltaRotationConjugated,this.object.rotationQuaternion),this.object.computeWorldMatrix(!1),this.object.parent&&this.object.rotationQuaternion?(this.getParentsRotation(),this._tmpQuat.multiplyToRef(this.object.rotationQuaternion,this._tmpQuat)):this._tmpQuat.copyFrom(this.object.rotationQuaternion||new n.PT),this._options.disableBidirectionalTransformation||this.object.rotationQuaternion&&this._physicsEngine.getPhysicsPlugin().setPhysicsBodyTransformation(this,this.object.getAbsolutePosition(),this._tmpQuat),this._onBeforePhysicsStepCallbacks.forEach((e=>{e(this)})))},this.afterStep=()=>{this._physicsEngine&&(this._onAfterPhysicsStepCallbacks.forEach((e=>{e(this)})),this._physicsEngine.getPhysicsPlugin().setTransformationFromPhysicsBody(this),this.object.parent&&this.object.rotationQuaternion&&(this.getParentsRotation(),this._tmpQuat.conjugateInPlace(),this._tmpQuat.multiplyToRef(this.object.rotationQuaternion,this.object.rotationQuaternion)),this.object.setAbsolutePosition(this.object.position),this._deltaRotation?(this.object.rotationQuaternion&&this.object.rotationQuaternion.multiplyToRef(this._deltaRotation,this.object.rotationQuaternion),this._deltaPosition.applyRotationQuaternionToRef(this._deltaRotation,l._TmpVecs[0]),this.object.translate(l._TmpVecs[0],1)):this.object.translate(this._deltaPosition,1),this.object.computeWorldMatrix(!0))},this.onCollideEvent=null,this.onCollide=e=>{if(!this._onPhysicsCollideCallbacks.length&&!this.onCollideEvent)return;if(!this._physicsEngine)return;const t=this._physicsEngine.getImpostorWithPhysicsBody(e.body);t&&(this.onCollideEvent&&this.onCollideEvent(this,t),this._onPhysicsCollideCallbacks.filter((e=>-1!==e.otherImpostors.indexOf(t))).forEach((s=>{s.callback(this,t,e.point,e.distance,e.impulse,e.normal)})))},this.object?(this.object.parent&&0!==s.mass&&i.V.Warn("A physics impostor has been created for an object which has a parent. Babylon physics currently works in local space so unexpected issues may occur."),!this._scene&&e.getScene&&(this._scene=e.getScene()),this._scene&&(this.type>100&&(this.soft=!0),this._physicsEngine=this._scene.getPhysicsEngine(),this._physicsEngine?(this.object.rotationQuaternion||(this.object.rotation?this.object.rotationQuaternion=n.PT.RotationYawPitchRoll(this.object.rotation.y,this.object.rotation.x,this.object.rotation.z):this.object.rotationQuaternion=new n.PT),this._options.mass=void 0===s.mass?0:s.mass,this._options.friction=void 0===s.friction?.2:s.friction,this._options.restitution=void 0===s.restitution?.2:s.restitution,this.soft&&(this._options.mass=this._options.mass>0?this._options.mass:1,this._options.pressure=void 0===s.pressure?200:s.pressure,this._options.stiffness=void 0===s.stiffness?1:s.stiffness,this._options.velocityIterations=void 0===s.velocityIterations?20:s.velocityIterations,this._options.positionIterations=void 0===s.positionIterations?20:s.positionIterations,this._options.fixedPoints=void 0===s.fixedPoints?0:s.fixedPoints,this._options.margin=void 0===s.margin?0:s.margin,this._options.damping=void 0===s.damping?0:s.damping,this._options.path=void 0===s.path?null:s.path,this._options.shape=void 0===s.shape?null:s.shape),this._joints=[],!this.object.parent||this._options.ignoreParent?this._init():this.object.parent.physicsImpostor&&i.V.Warn("You must affect impostors to children before affecting impostor to parent.")):i.V.Error("Physics not enabled. Please use scene.enablePhysics(...) before creating impostors."))):i.V.Error("No object was provided. A physics object is obligatory")}_init(){this._physicsEngine&&(this._physicsEngine.removeImpostor(this),this.physicsBody=null,this._parent=this._parent||this._getPhysicsParent(),this._isDisposed||this.parent&&!this._options.ignoreParent||this._physicsEngine.addImpostor(this))}_getPhysicsParent(){return this.object.parent instanceof a.u?this.object.parent.physicsImpostor:null}isBodyInitRequired(){return this._bodyUpdateRequired||!this._physicsBody&&(!this._parent||!!this._options.ignoreParent)}setScalingUpdated(){this.forceUpdate()}forceUpdate(){this._init(),this.parent&&!this._options.ignoreParent&&this.parent.forceUpdate()}get physicsBody(){return this._parent&&!this._options.ignoreParent?this._parent.physicsBody:this._physicsBody}get parent(){return!this._options.ignoreParent&&this._parent?this._parent:null}set parent(e){this._parent=e}set physicsBody(e){this._physicsBody&&this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().removePhysicsBody(this),this._physicsBody=e,this.resetUpdateFlags()}resetUpdateFlags(){this._bodyUpdateRequired=!1}getObjectExtents(){if(this.object.getBoundingInfo){const e=this.object.rotationQuaternion,t=this.object.scaling.clone();this.object.rotationQuaternion=l.IDENTITY_QUATERNION;const s=this.object.computeWorldMatrix&&this.object.computeWorldMatrix(!0);s&&s.decompose(t,void 0,void 0);const i=this.object.getBoundingInfo().boundingBox.extendSize.scale(2).multiplyInPlace(t);return i.x=Math.abs(i.x),i.y=Math.abs(i.y),i.z=Math.abs(i.z),this.object.rotationQuaternion=e,this.object.computeWorldMatrix&&this.object.computeWorldMatrix(!0),i}return l.DEFAULT_OBJECT_SIZE}getObjectCenter(){return this.object.getBoundingInfo?this.object.getBoundingInfo().boundingBox.centerWorld:this.object.position}getParam(e){return this._options[e]}setParam(e,t){this._options[e]=t,this._bodyUpdateRequired=!0}setMass(e){this.getParam("mass")!==e&&this.setParam("mass",e),this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setBodyMass(this,e)}getLinearVelocity(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getLinearVelocity(this):n.Pq.Zero()}setLinearVelocity(e){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setLinearVelocity(this,e)}getAngularVelocity(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getAngularVelocity(this):n.Pq.Zero()}setAngularVelocity(e){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setAngularVelocity(this,e)}executeNativeFunction(e){this._physicsEngine&&e(this._physicsEngine.getPhysicsPlugin().world,this.physicsBody)}registerBeforePhysicsStep(e){this._onBeforePhysicsStepCallbacks.push(e)}unregisterBeforePhysicsStep(e){const t=this._onBeforePhysicsStepCallbacks.indexOf(e);t>-1?this._onBeforePhysicsStepCallbacks.splice(t,1):i.V.Warn("Function to remove was not found")}registerAfterPhysicsStep(e){this._onAfterPhysicsStepCallbacks.push(e)}unregisterAfterPhysicsStep(e){const t=this._onAfterPhysicsStepCallbacks.indexOf(e);t>-1?this._onAfterPhysicsStepCallbacks.splice(t,1):i.V.Warn("Function to remove was not found")}registerOnPhysicsCollide(e,t){const s=e instanceof Array?e:[e];this._onPhysicsCollideCallbacks.push({callback:t,otherImpostors:s})}unregisterOnPhysicsCollide(e,t){const s=e instanceof Array?e:[e];let r=-1;this._onPhysicsCollideCallbacks.some(((e,i)=>{if(e.callback===t&&e.otherImpostors.length===s.length){const t=e.otherImpostors.every((e=>s.indexOf(e)>-1));return t&&(r=i),t}return!1}))?this._onPhysicsCollideCallbacks.splice(r,1):i.V.Warn("Function to remove was not found")}getParentsRotation(){let e=this.object.parent;for(this._tmpQuat.copyFromFloats(0,0,0,1);e;)e.rotationQuaternion?this._tmpQuat2.copyFrom(e.rotationQuaternion):n.PT.RotationYawPitchRollToRef(e.rotation.y,e.rotation.x,e.rotation.z,this._tmpQuat2),this._tmpQuat.multiplyToRef(this._tmpQuat2,this._tmpQuat),e=e.parent;return this._tmpQuat}applyForce(e,t){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().applyForce(this,e,t),this}applyImpulse(e,t){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().applyImpulse(this,e,t),this}createJoint(e,t,s){const i=new h.W$(t,s);return this.addJoint(e,i),this}addJoint(e,t){return this._joints.push({otherImpostor:e,joint:t}),this._physicsEngine&&this._physicsEngine.addJoint(this,e,t),this}addAnchor(e,t,s,i,r){if(!this._physicsEngine)return this;const n=this._physicsEngine.getPhysicsPlugin();return n.appendAnchor?(this._physicsEngine&&n.appendAnchor(this,e,t,s,i,r),this):this}addHook(e,t,s,i){if(!this._physicsEngine)return this;const r=this._physicsEngine.getPhysicsPlugin();return r.appendAnchor?(this._physicsEngine&&r.appendHook(this,e,t,s,i),this):this}sleep(){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().sleepBody(this),this}wakeUp(){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().wakeUpBody(this),this}clone(e){return e?new l(e,this.type,this._options,this._scene):null}dispose(){this._physicsEngine&&(this._joints.forEach((e=>{this._physicsEngine&&this._physicsEngine.removeJoint(this,e.otherImpostor,e.joint)})),this._physicsEngine.removeImpostor(this),this.parent&&this.parent.forceUpdate(),this._isDisposed=!0)}setDeltaPosition(e){this._deltaPosition.copyFrom(e)}setDeltaRotation(e){this._deltaRotation||(this._deltaRotation=new n.PT),this._deltaRotation.copyFrom(e),this._deltaRotationConjugated=this._deltaRotation.conjugate()}getBoxSizeToRef(e){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().getBoxSizeToRef(this,e),this}getRadius(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getRadius(this):0}syncBoneWithImpostor(e,t,s,i,r){const n=l._TmpVecs[0],a=this.object;if(a.rotationQuaternion)if(r){const s=l._TmpQuat;a.rotationQuaternion.multiplyToRef(r,s),e.setRotationQuaternion(s,1,t)}else e.setRotationQuaternion(a.rotationQuaternion,1,t);n.x=0,n.y=0,n.z=0,s&&(n.x=s.x,n.y=s.y,n.z=s.z,e.getDirectionToRef(n,t,n),null==i&&(i=s.length()),n.x*=i,n.y*=i,n.z*=i),e.getParent()?(n.addInPlace(a.getAbsolutePosition()),e.setAbsolutePosition(n,t)):(t.setAbsolutePosition(a.getAbsolutePosition()),t.position.x-=n.x,t.position.y-=n.y,t.position.z-=n.z)}syncImpostorWithBone(e,t,s,i,r,n){const a=this.object;if(a.rotationQuaternion)if(r){const s=l._TmpQuat;e.getRotationQuaternionToRef(1,t,s),s.multiplyToRef(r,a.rotationQuaternion)}else e.getRotationQuaternionToRef(1,t,a.rotationQuaternion);const o=l._TmpVecs[0],h=l._TmpVecs[1];n||((n=l._TmpVecs[2]).x=0,n.y=1,n.z=0),e.getDirectionToRef(n,t,h),e.getAbsolutePositionToRef(t,o),null==i&&s&&(i=s.length()),null!=i&&(o.x+=h.x*i,o.y+=h.y*i,o.z+=h.z*i),a.setAbsolutePosition(o)}}l.DEFAULT_OBJECT_SIZE=new n.Pq(1,1,1),l.IDENTITY_QUATERNION=n.PT.Identity(),l._TmpVecs=(0,r.mI)(3,n.Pq.Zero),l._TmpQuat=n.PT.Identity(),l.NoImpostor=0,l.SphereImpostor=1,l.BoxImpostor=2,l.PlaneImpostor=3,l.MeshImpostor=4,l.CapsuleImpostor=6,l.CylinderImpostor=7,l.ParticleImpostor=8,l.HeightmapImpostor=9,l.ConvexHullImpostor=10,l.CustomImpostor=100,l.RopeImpostor=101,l.ClothImpostor=102,l.SoftbodyImpostor=103},28567:(e,t,s)=>{s.d(t,{EE:()=>o,G3:()=>r,W$:()=>i,bB:()=>n,m6:()=>a});class i{constructor(e,t){this.type=e,this.jointData=t,t.nativeParams=t.nativeParams||{}}get physicsJoint(){return this._physicsJoint}set physicsJoint(e){this._physicsJoint=e}set physicsPlugin(e){this._physicsPlugin=e}executeNativeFunction(e){e(this._physicsPlugin.world,this._physicsJoint)}}i.DistanceJoint=0,i.HingeJoint=1,i.BallAndSocketJoint=2,i.WheelJoint=3,i.SliderJoint=4,i.PrismaticJoint=5,i.UniversalJoint=6,i.Hinge2Joint=i.WheelJoint,i.PointToPointJoint=8,i.SpringJoint=9,i.LockJoint=10;class r extends i{constructor(e){super(i.DistanceJoint,e)}updateDistance(e,t){this._physicsPlugin.updateDistanceJoint(this,e,t)}}class n extends i{constructor(e,t){super(e,t)}setMotor(e,t){this._physicsPlugin.setMotor(this,e||0,t)}setLimit(e,t){this._physicsPlugin.setLimit(this,e,t)}}class a extends n{constructor(e){super(i.HingeJoint,e)}setMotor(e,t){this._physicsPlugin.setMotor(this,e||0,t)}setLimit(e,t){this._physicsPlugin.setLimit(this,e,t)}}class o extends n{constructor(e){super(i.Hinge2Joint,e)}setMotor(e,t,s=0){this._physicsPlugin.setMotor(this,e||0,t,s)}setLimit(e,t,s=0){this._physicsPlugin.setLimit(this,e,t,s)}}}}]);