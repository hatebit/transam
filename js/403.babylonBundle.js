"use strict";(self.webpackChunkpro_racer=self.webpackChunkpro_racer||[]).push([[403],{8403:(e,r,t)=>{t.r(r),t.d(r,{Controls:()=>a});var i=t(7417);const s=new Map([["acceleration",!1],["braking",!1],["right",!1],["left",!1],["reset",!1],["stop",!1]]),c=new Map([["KeyW","acceleration"],["KeyS","braking"],["KeyA","left"],["KeyD","right"],["KeyR","reset"],["Space","stop"]]);class a{constructor(e){this.car=e,window.addEventListener("keydown",this.keydown),window.addEventListener("keyup",this.keyup)}update(){if(this.car.vehicleReady){const e=this.car.vehicle.getCurrentSpeedKmHour();let r,t,c,a;this.car.breakingForce=0,this.car.engineForce=0,s.get("reset")&&(this.car.reset(),console.log("reset "+this.car.chassisMesh.position)),s.get("acceleration")?e<-1?this.car.breakingForce=this.car.maxBreakingForce:this.car.engineForce=this.car.maxEngineForce:s.get("braking")?e>1?this.car.breakingForce=this.car.maxBreakingForce:this.car.engineForce=-this.car.maxEngineForce:s.get("stop")&&(e>1?this.car.breakingForce=2*this.car.maxBreakingForce:e<-1&&(this.car.engineForce=2*this.car.maxEngineForce)),s.get("right")?this.car.vehicleSteering<this.car.steeringClamp&&(this.car.vehicleSteering+=this.car.steeringIncrement):s.get("left")?this.car.vehicleSteering>-this.car.steeringClamp&&(this.car.vehicleSteering-=this.car.steeringIncrement):this.car.vehicleSteering=0,this.car.vehicle.applyEngineForce(this.car.engineForce,this.car.FRONT_LEFT),this.car.vehicle.applyEngineForce(this.car.engineForce,this.car.FRONT_RIGHT),this.car.vehicle.setBrake(this.car.breakingForce/2,this.car.FRONT_LEFT),this.car.vehicle.setBrake(this.car.breakingForce/2,this.car.FRONT_RIGHT),this.car.vehicle.setBrake(this.car.breakingForce,this.car.BACK_LEFT),this.car.vehicle.setBrake(this.car.breakingForce,this.car.BACK_RIGHT),this.car.vehicle.setSteeringValue(this.car.vehicleSteering,this.car.FRONT_LEFT),this.car.vehicle.setSteeringValue(this.car.vehicleSteering,this.car.FRONT_RIGHT);const h=this.car.vehicle.getNumWheels();for(a=0;a<h;a++)this.car.vehicle.updateWheelTransform(a,!0),r=this.car.vehicle.getWheelTransformWS(a),t=r.getOrigin(),c=r.getRotation(),this.car.wheelMeshes[a].position.set(t.x(),t.y(),t.z()),this.car.wheelMeshes[a].rotationQuaternion?.set(c.x(),c.y(),c.z(),c.w()),this.car.wheelMeshes[a].rotate(i.RD.Z,Math.PI/2);r=this.car.vehicle.getChassisWorldTransform(),t=r.getOrigin(),c=r.getRotation(),this.car.chassisMesh.position.set(t.x(),t.y(),t.z()),this.car.chassisMesh.rotationQuaternion?.set(c.x(),c.y(),c.z(),c.w()),this.car.chassisMesh.rotate(i.RD.X,Math.PI)}}keyup(e){c.get(e.code)&&s.set(c.get(e.code)??"",!1)}keydown(e){c.get(e.code)&&s.set(c.get(e.code)??"",!0)}}}}]);
//# sourceMappingURL=403.babylonBundle.js.map